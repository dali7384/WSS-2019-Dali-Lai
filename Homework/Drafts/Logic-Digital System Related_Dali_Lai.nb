(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    780965,      15211]
NotebookOptionsPosition[    772073,      15066]
NotebookOutlinePosition[    773098,      15101]
CellTagsIndexPosition[    773027,      15096]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Logic-\[OpenCurlyDoubleQuote]Digital System\
\[CloseCurlyDoubleQuote] Related",
 FontSize->72]], "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.770373672636671*^9, 
  3.7703737875292807`*^9}, {3.7706169318462524`*^9, 3.770616939191605*^9}, {
  3.770618428783575*^9, 3.7706184530959044`*^9}, {3.7706269384600043`*^9, 
  3.770626954407321*^9}, {3.7707400271452217`*^9, 3.7707400479645305`*^9}, {
  3.7707505826561565`*^9, 3.770750660881161*^9}, {3.7707506971670465`*^9, 
  3.7707507239798336`*^9}, {3.7707507658690825`*^9, 3.7707507844524403`*^9}},
 FontSize->18,
 CellTags->"Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],

Cell[TextData[StyleBox["Dali Lai",
 FontSize->36,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.7706172602438145`*^9, 
  3.7706172634524536`*^9}, {3.771078228993487*^9, 3.7710782301864815`*^9}},
 FontSize->18,ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],

Cell[TextData[StyleBox[" A combinational logic circuit is one whose output \
depend only on its current combination of input values, and a Logical \
Expression is an Expression that uses one or more conditions to return a true \
or false value.\n It\[CloseCurlyQuote]s useful to have a single line of code \
instead of tens, hundreds of states hard coded line by line. This essay will \
be a brief introduction starting from logic gates, by showing the simulation \
of the circuit with Wolfram software System Modeler, multiple gates \
combinational circuit, K-map, Demogan\[CloseCurlyQuote]s Law, and theirs \
application. ",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.7710782054838233`*^9, 3.771078540561771*^9}, {
  3.7710786020906982`*^9, 3.7710787547696977`*^9}, {3.7710788488051414`*^9, 
  3.771078930056509*^9}, {3.7710790115851607`*^9, 3.771079053849018*^9}, {
  3.7710930334241533`*^9, 
  3.7710931246444364`*^9}},ExpressionUUID->"1c727bf9-d411-4d95-ba0f-\
6d7bb12b52e6"],

Cell[TextData[StyleBox["1. Combinational Circuit-logic gate",
 FontSize->48,
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.7706172759927254`*^9, 3.7706172771854773`*^9}, {
  3.7706173255144715`*^9, 3.7706173276505995`*^9}, {3.7706174006688147`*^9, 
  3.7706174141155486`*^9}, {3.7706180233121634`*^9, 3.7706180386404247`*^9}, {
  3.770618525775285*^9, 3.7706185337392707`*^9}, {3.7706269613667445`*^9, 
  3.7706269710877085`*^9}, {3.770639504350092*^9, 3.7706395182668715`*^9}, {
  3.7706398570472116`*^9, 3.7706398580814123`*^9}},
 FontSize->18,ExpressionUUID->"efe9b06f-68d8-4084-bf8d-3f27a6c14623"],

Cell["\<\
By combining different logic gates (AND, NAND, OR...etc.) a circuit is \
created. Such circuit transforms its  inputs into the desired output. In \
circuit-logic programming, inputs-outputs table is known as a truth table. \
\>", "Text",
 CellChangeTimes->{{3.7710791611786394`*^9, 3.771079185479933*^9}, {
  3.771079219305231*^9, 3.771079219738584*^9}, {3.7710793168126593`*^9, 
  3.771079522034904*^9}, {3.7710795586436224`*^9, 3.771079564627528*^9}},
 FontSize->18,ExpressionUUID->"3072dc2c-f3f1-448c-b3a7-9758c980b220"],

Cell["Here is an example of a logic gate, the OR-gate, X || Y:", "Text",
 CellChangeTimes->{{3.7710791925353303`*^9, 3.771079209473179*^9}, {
  3.771079580663084*^9, 3.771079588528207*^9}, {3.7710796584398084`*^9, 
  3.771079685162069*^9}},
 FontSize->18,ExpressionUUID->"4cd5e397-47c9-46bb-888c-0ee5b5ae4840"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"WebImageSearch", "[", 
      RowBox[{"#", ",", "\"\<Images\>\"", ",", 
       RowBox[{"Method", "\[Rule]", "\"\<Google\>\""}]}], "]"}], "&"}], "[", 
    "\"\<or gate\>\"", "]"}], "[", 
   RowBox[{"[", "4", "]"}], "]"}],
  FontSize->14]], "Input",
 CellChangeTimes->{{3.7707197703169913`*^9, 3.770719773036789*^9}, {
  3.7707198247445555`*^9, 3.7707198445874805`*^9}, {3.7707198904977703`*^9, 
  3.770719922676762*^9}, {3.770720147225278*^9, 3.770720149375525*^9}, {
  3.770720351090351*^9, 3.770720361253253*^9}, {3.7707204056665134`*^9, 
  3.770720408841055*^9}, {3.770720448820137*^9, 3.7707205353269215`*^9}, {
  3.7707205707542644`*^9, 3.770720665620696*^9}, {3.7707207130190487`*^9, 
  3.770720728763934*^9}, {3.7707208625642753`*^9, 3.7707208993788776`*^9}, {
  3.770720981479473*^9, 3.7707210288538427`*^9}, {3.7707210618775496`*^9, 
  3.770721112370618*^9}, {3.770721147321212*^9, 3.770721169522861*^9}, {
  3.770721480441839*^9, 3.7707214924138727`*^9}, {3.7707215518320303`*^9, 
  3.7707216202979956`*^9}, {3.7707220640868297`*^9, 3.7707220785212493`*^9}, {
  3.7707501251756973`*^9, 3.770750136683957*^9}},
 FontSize->18,ExpressionUUID->"645548c4-bb07-46f4-b7cd-e5171a83221d"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
fhxHX4H9GgFQsxCoWT6oWT6oWT6oWT7ibWij9w8kuAc8+XDNHeU/HE2zd/f1
gm+5twiZYN7MBzXLBzXLBzXLBzXLJ3kcHdejO1LG0f0QHEeffQmMo/shOI6+
+BrSDNc7zUDN8kHN8kHN8kHN8kHN8kHN8kHN8kHN8kkaR8f16AuwXyMf1Cwf
1Cwf1Cwf1Cwf1Cwf1CwfcechdMO9RchEhudR/PuCkMu4twgIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIguwIEZ2WOfNGO4emu4AI3iMxeG/wUbIiEEGe
X60kSR24oG5WpwL3WASfuWyvUBqJoDp17nQbnLF9Rp/APRbByQvJ7o4kOVls
hgjl5c74l87mwsvuQbvIYk1BqJA6BXGzVsDoog9Lqw9n6lQznY15r7+YvNyV
hLDGxILDoj+ZcHc/nfNZa+4BMYyL8/m56ScWl+0cMc9ilRZQFly/mc0oRhd9
aCM1OiUIUilVgV93Y7YbIpQqITJlWi8BAbyY3w9iN+Z2tCCwV8Pi3PQT88v2
jisCBOgHKabVL97bHU9odTKHjdGM8ZOyOVl/9pA+O5NIpZZCEgYWCzSjrgwU
JlgRBveQ+ieUd272E7PLdo+raXT6rUzmAN/t9bDvSX0yh0YbYc4BnZFRf2Ns
uIcW2iiglZ/KU2V9mSsh4R6NSVfLc7OfCBfDu2O+FYDdHMC8RmUMmNEFDpV+
X0XNO7ei4pT0xg41o95cf4VkBmJO5alw2/PAPWyM5bnZT4SL4d3RzLYdYnYT
Cnj6YrLP5lArW1GTsygXNafWghdE2ivVYI1qfWIqT12wuYeNsTw3+4lgMbw/
hHsH558ACklrn5mRCw457232NKkS3hFOz7dFMQEVndvyIbjrbeRqfW72E0cq
AqadTU7U6NfpBkE3FAZirDaVzLwTNSmx1+dNDGYtXMGsWbIKTJmdDfer4R5j
jOnc8icO1Hoik0nSqaiQp4YaRUpdE6PwWrV5SUGMuaFQUpgYxoK3UB+TJe2t
WbJmb6pl1fZ+TME9bIzpnPcT6jCVMy3OrKoBe1DoKq1+DbuTn3nN0jStalvH
aKDmybTp76wFb6n+WqnRGnUgbDFtyiN0cKErGCUdTf50zv+J2WXHo3FVijD9
ZutRbgVe/bI9UB2nANsNxWEMy344TpcMgiAIgiAIgiAIgiAIgiAIgiAIgiAI
gtyE/yy8hH9xmEma9+Qj3yE95aWouwNP1AlzLW/7gi7mRnWdELwA7Vj1cGku
QTORMmNFnZ2bL7tGMFI0m3PNDkeCZmlJcT4TeUlXwmKenIdawHeXTq+mmWLh
GcBSJzZ+6TJBQsqdWUUQhBBV6Sfr4ajnhFbqNCqlP3niyqsmmNBMKCdMXJRF
iRb8sitvhdWs7E41CENI0emXL9RMs+Rigm2vSJQVZfFptmeesNMFDN3TLEAr
Su2OzNzrabHDWrOen+XNz/gPY0tnZHHJgiS4qxJ2teI+sKJId2QXXRVhzZQ4
yyfvhfhONAvDMsTsJzR/CVmS3RQGkygzec6ejJOwRqulRW7+HG/a8b0UBtfU
bFi2u0lf0MxMNv0hmp0UBr488EzSrOH1NSs3y0VDk6CuLqLzliXNE+8+CgNf
M0gEUxnQTsGKlNHH7RLWn4CyRU4eW2T4XRQGvmYMll9BXYPBet2CusRXl218
NVGa34GesYws5hnJHRQGvmaCDnXaHrwRtJyY5eawOLU9xatXLC3nyBz/LauC
ZT+FgSFk7uVJ6kQmooaIJ2rRZqxUOVMY76UwMISLSOMSKOau5SRSV+qK9KXj
Z2O+oDAA3xy0vF72DmsGHkDsx+bzpFdLaGpCOa/upYWBKoY+US/PhDu8Yl1h
Qc06k8SimTOt4AQGhw+tELG/eChFzguDXog27W9QEtqokxTUsw4bLrUu7ZWt
jFotiTyYSs9yvSmXCWOwQHqL8C1dYaCFKEhSA6MjtB9+flndvIFmqWRYmZq0
HEriNuJ9ZevPYAsD49SjL4qElFa55AVHU4XBdnhNXWF+yC3hGXX88htWjno7
9W4nXSgMrA59SuWQzRzJFDNlxo+xK8wPuSXhfavXqG992f5L3p7rXfrpG/sv
+WL7LoIMPUzfe2O6pM7hUv/cnQc5o9nYFfaamlUZmvVfs0/Tk3fnepfef2L/
Jf/evAv4UbAxvvmx7ZI6g0uBMc3GrrDX1Iyn2zPFfmgTiNiu9m3mTVMM2FZF
m1JmU2cHlK5trjU7DSdeU7OMjtiSSp0L+q6MXLOh2VDdaEnZ9SLJ2R93vo0a
HX8Xmsn0ukYNJhtaFzRiuoO3nKq14NckrTXWkKF7QDFwObfSbOwKe0XNulgF
bhbTvmMfzVAhzRbNJ5n6t9L1OP03UtoKjv337VyzsSvMD7khEdM0MTQDUjiv
2aXNdNd2grrt1N9lk9jUFeaH3JDkYjO9uXlWsxd0B6na1FLrZX+X7fCausL8
kBuSWqUVye3Sc5rdqNtRbnSFLZ/oqrk1senU5Ixz+prdsHs7UYxrzQsyJDbR
RdYoinfPWw6jXE+z9KTYxYemtLA8z53QQrPb9tDeQ7MUJ5Q9o3m2aKbZTkYC
rjcvKDRvb0lNUrpsFk84araDESfLFecFbUzbG7E+ojOf0Oq0i5FNyxXnBf3v
V2J69EWsoXTuCY1m+xhBt1xxXtDHH0VyXU2zBtDHJ+x2Nji3GhMOn4whtxMC
zA/Nn0gFj9DtxPQ7rqdZtdUc6ipdtFz23qTYiel3pM4Lcg5oQ2xsVwK9COzi
+e67Mf2O1HlB8L/cSnBVaAZMX1HyknUVuzH9jtR5QTZK+D6SrFPDsBjlwvna
+yV1XhBEqTdmY/zsu/M1Yn8XJafGBXcpDrOty4WEO0OsE/KwFf/mcoVYwYXo
9mW5b8XGCDx8BG3WMxPRbMugPS3bmqnqOJsa7AFjpSIzeBAEeTH/BZrockE=

     "], {{0, 400}, {308, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{308, 400},
   PlotRange->{{0, 308}, {0, 400}}],
  FontSize->12]], "Input",
 CellChangeTimes->{3.770750377357934*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"971edc48-7189-44b1-a3ac-2a83843a224e"],

Cell[TextData[StyleBox["Formatted as a multiple entry array, inputs-output \
table is known as Karnaugh map (k-map). For the OR-gate example above it is:",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.771079703045732*^9, 
  3.7710797951353006`*^9}},ExpressionUUID->"5d301663-7a24-4cce-999c-\
c3c37bbdc895"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{"Prepend", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"BooleanTable", "[", 
            RowBox[{
             RowBox[{"x", "||", "y"}], ",", 
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"{", "y", "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<1\>\"", ",", "\"\<0\>\""}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<x/y\>\"", ",", "\"\<1\>\"", ",", "\"\<0\>\""}], 
          "}"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}],
   FontSize->16], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.770624837749669*^9, 3.7706248494593515`*^9}, {
  3.770624890481673*^9, 3.7706249421165705`*^9}, {3.7706249820896354`*^9, 
  3.7706249874991684`*^9}, {3.770629371461979*^9, 3.770629477102391*^9}, {
  3.770629641117058*^9, 3.770629682812436*^9}},
 FontSize->18,
 CellLabel->"In[35]:=",ExpressionUUID->"b93e7b6f-b232-4f01-8949-de24c398a8d7"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"x/y\"\>", "\<\"1\"\>", "\<\"0\"\>"},
    {"\<\"1\"\>", "True", "True"},
    {"\<\"0\"\>", "True", "False"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.770624949000132*^9, 3.7706276887144775`*^9, 
  3.7706294778265014`*^9, 3.7706296834099464`*^9},
 FontSize->24,
 CellLabel->"Out[35]=",ExpressionUUID->"4215ee3f-9119-4ba6-9a85-d1f7e8c88515"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s simulate the logic gate OR with 2 inputs in \
SystemModeler, a software that models circuits behaviors amongst other \
things. \
\>", "Text",
 CellChangeTimes->{
  3.771079837018469*^9, {3.7710798822008824`*^9, 3.771079978002116*^9}},
 FontSize->18,ExpressionUUID->"5005b855-b8b3-4bb7-b1f8-9bd75f6ad693"],

Cell["\<\
Our system is an Or-gate with two ports each receiving a stepwise electrical \
signal.\
\>", "Text",
 CellChangeTimes->{{3.7710810892001066`*^9, 3.7710811782068963`*^9}},
 FontSize->18,ExpressionUUID->"028f1b3f-49f6-4299-8219-4717b795e4aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"orGateConnectedToDigitalgEntries", "=", 
   GraphicsBox[
    TagBox[
     TooltipBox[
      DynamicModuleBox[{WSM`Typeset`PackagePrivate`p = {
        InsetBox[
         GraphicsBox[{{}, {
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-92.152, 35.}, {-87.152, 35.}, {-87.152, 10.}, {-66.,
                 10.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-92.152, -17.946}, {-87.152, -17.946}, {-87.152, 
                10.}, {-66., 10.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 1}}], 
                    {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0.,
                     0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-102.152, 35.}], {{{0.1, 0.}, {0., 
                   0.1}}, {-91.9368, 31.5}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-102.152, -17.946}], {{{0.1, 0.}, {
                   0., 0.1}}, {-91.9368, -16.151400000000002`}}], {{{1., 
                  0.}, {0., 1.}}, {0., 0.}}], {}}, "\"pulse2\"", LabelStyle -> 
               "TextStyling"], Annotation[#, "pulse2", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse2"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\">=1\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 60.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -70.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.14153846153846156`]}]}, 
                    PlotRange -> {{-50., 50.}, {-80., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -70.}, {0., -70.}, {100., 20.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {-60., 10.}], {{{0.1, 0.}, {
                   0., 0.1}}, {-54., 9.}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"orGate1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "orGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "orGate1"}]& ]}}, 
          PlotRange -> {{-107.01839999999999`, -48.56639999999999}, \
{-27.94319999999999, 44.8776}}, PlotRangePadding -> 0, Frame -> None, 
          FrameTicks -> False, GridLines -> None, GridLinesStyle -> 
          RGBColor[0.9, 0.9, 0.9], Epilog -> {}, {
          Frame -> None, PlotRangePadding -> 0}], {18, 282}, {Left, Top}, {
         187.82776349614397`, 234}], 
        InsetBox[
         BoxData[
          FormBox[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
              "], {{0, 24}, {24, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", 
            ImageSizeRaw -> {24, 24}, PlotRange -> {{0, 24}, {0, 24}}], 
           TraditionalForm]], 
         Offset[{6, -6}, 
          Scaled[{0, 1}]], 
         Scaled[{0, 1}], {24, 24}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {0, 0}, {0, 0}, {
         253.82776349614397`, Automatic}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {253.82776349614397`, 0}, {0, 
         0}, {300, Automatic}, {0, 1}], {
         RGBColor[0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
         RectangleBox[
          Offset[{0, 0}, {0, 0}], 
          Offset[{0, 27}, {253.82776349614397`, 0}], RoundingRadius -> 5], 
         RectangleBox[
          NCache[
           Offset[{0, 
             Rational[27, 2]}, {0, 0}], 
           Offset[{0, 13.5}, {0, 0}]], 
          Offset[{0, 27}, {253.82776349614397`, 0}]]}, {
         RGBColor[0.8705882352941177, 0.8705882352941177, 0.8705882352941177], 
         LineBox[{
           Offset[{0, 27}, {0, 0}], 
           Offset[{0, 27}, {253.82776349614397`, 0}]}]}, {
         EdgeForm[
          RGBColor[
          0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
         FaceForm[None], 
         RectangleBox[{
           Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 1}, {
          Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 1, 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
          RoundingRadius -> Offset[5]]}, {
         RGBColor[
         0.43137254901960786`, 0.43137254901960786`, 0.43137254901960786`], 
         InsetBox[
          FormBox[
           StyleBox[
           "orgate", FontSize -> 9, FontFamily -> "Helvetica", StripOnInput -> 
            False], TraditionalForm], 
          Offset[{12, 12}, {0, 0}], {-1, 0}]}}, 
       WSM`Typeset`PackagePrivate`appearanceState = "Expanded", 
       WSM`Typeset`PackagePrivate`expandedeval = True, 
       WSM`Typeset`PackagePrivate`expandedprimitives = {
        InsetBox[
         GraphicsBox[{{}, {
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-92.152, 35.}, {-87.152, 35.}, {-87.152, 10.}, {-66.,
                 10.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-92.152, -17.946}, {-87.152, -17.946}, {-87.152, 
                10.}, {-66., 10.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-102.152, 35.}], {{{0.1, 0.}, {0., 
                   0.1}}, {-91.9368, 31.5}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-102.152, -17.946}], {{{0.1, 0.}, {
                   0., 0.1}}, {-91.9368, -16.151400000000002`}}], {{{1., 
                  0.}, {0., 1.}}, {0., 0.}}], {}}, "\"pulse2\"", LabelStyle -> 
               "TextStyling"], Annotation[#, "pulse2", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse2"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\">=1\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 60.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -70.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.14153846153846156`]}]}, 
                    PlotRange -> {{-50., 50.}, {-80., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -70.}, {0., -70.}, {100., 20.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {-60., 10.}], {{{0.1, 0.}, {
                   0., 0.1}}, {-54., 9.}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"orGate1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "orGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "orGate1"}]& ]}}, 
          PlotRange -> {{-107.01839999999999`, -48.56639999999999}, \
{-27.94319999999999, 44.8776}}, PlotRangePadding -> 0, Frame -> None, 
          FrameTicks -> False, GridLines -> None, GridLinesStyle -> 
          RGBColor[0.9, 0.9, 0.9], Epilog -> {}, {
          Frame -> None, PlotRangePadding -> 0}], {18, 282}, {Left, Top}, {
         187.82776349614397`, 234}], 
        InsetBox[
         BoxData[
          FormBox[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
              "], {{0, 24}, {24, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", 
            ImageSizeRaw -> {24, 24}, PlotRange -> {{0, 24}, {0, 24}}], 
           TraditionalForm]], 
         Offset[{6, -6}, 
          Scaled[{0, 1}]], 
         Scaled[{0, 1}], {24, 24}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {0, 0}, {0, 0}, {
         253.82776349614397`, Automatic}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {253.82776349614397`, 0}, {0, 
         0}, {300, Automatic}, {0, 1}], {
         RGBColor[0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
         RectangleBox[
          Offset[{0, 0}, {0, 0}], 
          Offset[{0, 27}, {253.82776349614397`, 0}], RoundingRadius -> 5], 
         RectangleBox[
          NCache[
           Offset[{0, 
             Rational[27, 2]}, {0, 0}], 
           Offset[{0, 13.5}, {0, 0}]], 
          Offset[{0, 27}, {253.82776349614397`, 0}]]}, {
         RGBColor[0.8705882352941177, 0.8705882352941177, 0.8705882352941177], 
         LineBox[{
           Offset[{0, 27}, {0, 0}], 
           Offset[{0, 27}, {253.82776349614397`, 0}]}]}, {
         EdgeForm[
          RGBColor[
          0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
         FaceForm[None], 
         RectangleBox[{
           Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 1}, {
          Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 1, 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
          RoundingRadius -> Offset[5]]}, {
         RGBColor[
         0.43137254901960786`, 0.43137254901960786`, 0.43137254901960786`], 
         InsetBox[
          FormBox[
           StyleBox[
           "orgate", FontSize -> 9, FontFamily -> "Helvetica", StripOnInput -> 
            False], TraditionalForm], 
          Offset[{12, 12}, {0, 0}], {-1, 0}]}}, 
       WSM`Typeset`PackagePrivate`expandedopt = {
       PlotRange -> {{0, 253.82776349614397`}, {0, 300}}, 
        ImageSize -> {253.82776349614397`, 300}, PlotRangePadding -> 0}, 
       WSM`Typeset`PackagePrivate`expandedsize = {263.827763496144, 310}, 
       WSM`Typeset`PackagePrivate`expandedrange = {{0, 253.82776349614397`}, {
        0, 300}}}, 
       DynamicWrapperBox[
        DynamicBox[{WSM`Typeset`PackagePrivate`p, 
          Which[
           And[
           "normal" === "normal", WSM`Typeset`PackagePrivate`appearanceState === 
            "Minimal"], 
           InsetBox[
            BoxData[
             FormBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (
                If[WSM`Typeset`PackagePrivate`expandedeval === False, If[
                    TrueQ[WSMLink`Private`$WSMLinkIsLoaded], 
                    WSM`Typeset`PackagePrivate`appearanceState = "Eval"; 
                    Module[{
                    WSM`Typeset`PackagePrivate`cellobj$, 
                    WSM`Typeset`PackagePrivate`cellEditDup$}, 
                    If[
                    MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["329230a0-ab95-4fe9-a239-8f31eee5afa0"]}]]], 
                    WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                    WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = 
                    Dynamic[
                    WSM`Typeset`PackagePrivate`expandedsize, 
                    TrackedSymbols :> {
                    WSM`Typeset`PackagePrivate`expandedeval}]; 
                    CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = 
                    Dynamic[
                    WSM`Typeset`PackagePrivate`expandedrange, 
                    TrackedSymbols :> {
                    WSM`Typeset`PackagePrivate`expandedeval}]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null]; Null, 
                  WSM`Typeset`PackagePrivate`appearanceState = "Expanded"; 
                  Module[{
                    WSM`Typeset`PackagePrivate`cellobj$, 
                    WSM`Typeset`PackagePrivate`cellEditDup$}, 
                    If[
                    MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["329230a0-ab95-4fe9-a239-8f31eee5afa0"]}]]], 
                    WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                    WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = 
                    WSM`Typeset`PackagePrivate`expandedsize; 
                    CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = 
                    WSM`Typeset`PackagePrivate`expandedrange; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null]; Null), Appearance -> None, 
               ContentPadding -> False, ImageSize -> {Automatic, Automatic}, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              TraditionalForm]], 
            Offset[{6, -6}, 
             Scaled[{0, 1}]], 
            Scaled[{0, 1}]], 
           And[
           "normal" === "normal", WSM`Typeset`PackagePrivate`appearanceState === 
            "Expanded"], 
           InsetBox[
            BoxData[
             FormBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (
                WSM`Typeset`PackagePrivate`appearanceState = "Minimal"; 
                Module[{
                  WSM`Typeset`PackagePrivate`cellobj$, 
                   WSM`Typeset`PackagePrivate`cellEditDup$}, 
                  If[
                   MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["329230a0-ab95-4fe9-a239-8f31eee5afa0"]}]]], 
                   WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                   WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                   If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = {67, 93}; 
                   CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = {{-10, 57}, {-26, 67}}; 
                   If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null), Appearance -> None, ContentPadding -> 
               False, ImageSize -> {Automatic, Automatic}, Evaluator -> 
               Automatic, Method -> "Preemptive"], TraditionalForm]], 
            Offset[{10, -10}, 
             Scaled[{0, 1}]]], True, {}]},
         ImageSizeCache->{{-0.4756274441209001, 
          331.4142135623731}, {-198.4142135623731, 192.4142135623731}},
         TrackedSymbols:>{WSM`Typeset`PackagePrivate`p}], 
        Which[WSM`Typeset`PackagePrivate`appearanceState === "Minimal", 
          WSM`Typeset`PackagePrivate`p = {
             InsetBox[
              BoxData[
               FormBox[
                GraphicsBox[
                 TagBox[
                  RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UNASiPWBGMT+PwqGGnDABgbKJXVb/YCoZLFP3gyvilW+QPbAOgboBhd3R78o
Z58w5wF3TNkyHw9/Jwg5sI4BuiG62A3iGGD4JNa5D6BjgEklvso9vdMTGCZZ
E0DsAU/AyAjumA9PPw+4YyI0IuY7zAeiHoMlk21XLonZviJp17aaY79//KG/
YzwsPO7vvw9EM9zWrcvad//os0enXkx1XEPrgMIfTchgpvv6UceMOmYQOobI
WpsOjiEejDoGFxi6jiE+KdLaMV26i4Ho6qr/aGjUMaOOGUDHTHNYsyR6x/Kk
XQQRHsccmXYRiIBNo62VRylpqk22XU0tx/QaLZ3tu4GSUouK0UR54Tmo0syo
Y4aZY/4PpoqSDmDUMbjASHPMoOqqQDpxNRv9wnNcA2JdEuvcB7xHWbbMx83b
MbPXE8+YHj0dQ3CAkT6OSW7yAJI+Yc5V63yBpJPLAKeZwdPxx3SMi40LZBht
Wez2/d2nH516MYDDaPABRmDlC2wiLorYtiJp1+qMvT8+/aS/Y+DRdGvvI1o7
gHjH0BmMOmbUMeS5h3aN1VFACQAAudibJw==
                   "], {{0, 57}, {47, 0}}, {0, 255}, ColorFunction -> 
                   RGBColor], 
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                  Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                 ImageSizeRaw -> {47, 57}, PlotRange -> {{0, 47}, {0, 57}}], 
                TraditionalForm]], {0, 0}, {0, 0}, {47, 57}], {
              RGBColor[
              0.43137254901960786`, 0.43137254901960786`, 
               0.43137254901960786`], 
              InsetBox[
               FormBox[
                StyleBox[
                "\"orgate\"", FontSize -> 9, FontFamily -> "Helvetica", 
                 StripOnInput -> False], TraditionalForm], 
               NCache[{
                 Rational[47, 2], 
                 Rational[-29, 2]}, {23.5, -14.5}], {0, 0}]}, {
              EdgeForm[
               RGBColor[
               0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
              FaceForm[None], 
              
              RectangleBox[{-10, -25}, {56, 67}, RoundingRadius -> 
               Offset[5]]}, 
             InsetBox[
              BoxData[
               FormBox[
                GraphicsBox[
                 TagBox[
                  RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
                   "], {{0, 24}, {24, 0}}, {0, 255}, ColorFunction -> 
                   RGBColor], 
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                  Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                 ImageSizeRaw -> {24, 24}, PlotRange -> {{0, 24}, {0, 24}}], 
                TraditionalForm]], 
              Offset[{6, -6}, 
               Scaled[{0, 1}]], 
              Scaled[{0, 1}], {24, 24}]}; Null, 
          WSM`Typeset`PackagePrivate`appearanceState === "Eval", 
          WSM`Typeset`PackagePrivate`p = {{
              EdgeForm[WSM`Typeset`PackagePrivate`$bordercolor], 
              FaceForm[None], 
              RectangleBox[{
                Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 1}, {
               Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 1, 
                Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
               RoundingRadius -> Offset[5]]}, 
             InsetBox[
              Evaluate[
               ToBoxes[
                ProgressIndicator[Appearance -> "Percolate"], 
                StandardForm]]]}; 
          Module[{WSM`Typeset`PackagePrivate`md$}, {
              WSM`Typeset`PackagePrivate`expandedsize, 
               WSM`Typeset`PackagePrivate`md$} = 
             WSM`Typeset`PackagePrivate`getExpandedGraphic[
              "orgate", "329230a0-ab95-4fe9-a239-8f31eee5afa0"]; {
              WSM`Typeset`PackagePrivate`expandedprimitives, 
               WSM`Typeset`PackagePrivate`expandedopt} = 
             WSM`Typeset`PackagePrivate`separateGraphics[
              WSM`Typeset`PackagePrivate`md$]; 
            WSM`Typeset`PackagePrivate`expandedrange = Replace[PlotRange, 
               Flatten[WSM`Typeset`PackagePrivate`expandedopt]]; 
            WSM`Typeset`PackagePrivate`expandedeval = True; 
            WSM`Typeset`PackagePrivate`expandedprimitives = 
             Join[WSM`Typeset`PackagePrivate`expandedprimitives, {{
                 EdgeForm[WSM`Typeset`PackagePrivate`$bordercolor], 
                 FaceForm[None], 
                 RectangleBox[{
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 
                   1}, {Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 
                   1, 
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
                  RoundingRadius -> Offset[5]]}, 
                
                With[{WSM`Typeset`PackagePrivate`leftmost$ = 
                  Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                  WSM`Typeset`PackagePrivate`bottommost$ = 
                  Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1]}, {
                  RGBColor[
                  0.43137254901960786`, 0.43137254901960786`, 
                   0.43137254901960786`], 
                  InsetBox[
                   FormBox[
                    StyleBox[
                    "orgate", FontSize -> 9, FontFamily -> "Helvetica", 
                    StripOnInput -> False], TraditionalForm], 
                   
                   Offset[{12, 12}, {
                    WSM`Typeset`PackagePrivate`leftmost$, 
                    WSM`Typeset`PackagePrivate`bottommost$}], {-1, 0}]}]}]; 
            Null]; WSM`Typeset`PackagePrivate`appearanceState = "Expanded"; 
          Null, WSM`Typeset`PackagePrivate`appearanceState === "Expanded", 
          WSM`Typeset`PackagePrivate`p = 
           WSM`Typeset`PackagePrivate`expandedprimitives; Null]; Null,
        ImageSizeCache->{{-0.4756274441209001, 
         331.4142135623731}, {-198.4142135623731, 192.4142135623731}},
        SynchronousUpdating->False,
        TrackedSymbols:>{WSM`Typeset`PackagePrivate`appearanceState}],
       Initialization:>(
        WSM`Typeset`PackagePrivate`expandedeval = 
         Not[WSM`Typeset`PackagePrivate`expandedeval]; 
        WSM`Typeset`PackagePrivate`expandedeval = 
         Not[WSM`Typeset`PackagePrivate`expandedeval]; Null)],
      "orgate"],
     WSM`ModelTag["orgate"]],
    Editable -> False,
    SelectWithContents -> True,
    BoxID -> "329230a0-ab95-4fe9-a239-8f31eee5afa0",
    ContentSelectable->False,
    DefaultBaseStyle->{
     "Graphics", FrontEnd`GraphicsHighlightColor -> RGBColor[0, 0.46775, 1], 
      ComponentwiseContextMenu -> {"GraphicsBox" -> {
          MenuItem["Copy Model", 
           KernelExecute[
            CopyToClipboard[
             ReleaseHold[
              MakeExpression[
               MakeBoxes[
                SystemModel["orgate"]], StandardForm]]]], MenuEvaluator -> 
           Automatic], 
          MenuItem["Copy Model Name", 
           KernelExecute[
            CopyToClipboard[
             StringJoin["\"", "orgate", "\""]]], MenuEvaluator -> Automatic], 
          Delimiter, 
          MenuItem["Simulate Model", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                RowBox[{"SystemModelSimulate", "[", "\"orgate\"", "]"}]], 
               "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], 
          MenuItem["Show Preferred Plots in Model", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                RowBox[{"SystemModelPlot", "[", "\"orgate\"", "]"}]], 
               "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], 
          MenuItem["Show Model Information", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                RowBox[{"SystemModel", "[", 
                  RowBox[{"\"orgate\"", ",", "\"Summary\""}], "]"}]], 
               "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], Delimiter, 
          MenuItem["Open in SystemModeler Model Center", 
           KernelExecute[
            WSMLink`WSMModelCenter["orgate"]], MenuEvaluator -> Automatic], 
          MenuItem["Open in SystemModeler Simulation Center", 
           KernelExecute[
            WSMLink`WSMSimulationCenter["orgate"]], MenuEvaluator -> 
           Automatic]}}},
    ImageSize->Dynamic[
     FE`WSM`Typeset`PackagePrivate`expandedsize410, 
      TrackedSymbols :> {FE`WSM`Typeset`PackagePrivate`expandedeval410}],
    PlotRange->Dynamic[
     FE`WSM`Typeset`PackagePrivate`expandedrange410, 
      TrackedSymbols :> {FE`WSM`Typeset`PackagePrivate`expandedeval410}]]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7710800840501037`*^9, 3.771080090597948*^9}, {
   3.7710809733992167`*^9, 3.7710810100149984`*^9}, {3.771081040416786*^9, 
   3.7710810622551403`*^9}, 3.7710813750802765`*^9, 3.7710856708695755`*^9, {
   3.7710857054538374`*^9, 3.771085717810524*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"3b2c8647-9865-46aa-bf95-86eb75a12738"],

Cell[BoxData[
 RowBox[{
  RowBox[{"orgate", "=", 
   RowBox[{"SystemModelPlot", "[", 
    RowBox[{
     RowBox[{"SystemModelSimulate", "[", 
      RowBox[{"orGateConnectedToDigitalgEntries", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<pulse1.y\>\"", ",", "\"\<pulse2.y\>\""}], "}"}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List","ListIcon",GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["4", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["736", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
         Typeset`open]},
        "IconizedObject"]],
      {PlotStyle -> Dashing[{Small, Small}], 
       PlotLegends -> {"30% duty cycle step", "60% duty cycle step"}, 
       PlotStyle -> Thickness[Large], 
       AxesLabel -> {"time(sec)", "voltage(V)"}},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7710812724247103`*^9, 3.7710812725882616`*^9}, 
   3.7710813948568535`*^9, 3.771082097760982*^9, {3.7710821463382406`*^9, 
   3.7710821664565496`*^9}, {3.771082229728019*^9, 3.7710822430516977`*^9}, {
   3.7710822811192484`*^9, 3.771082294312935*^9}, {3.771082409177251*^9, 
   3.7710824813614435`*^9}, 3.771082584778329*^9, {3.771082687414036*^9, 
   3.771082697575786*^9}, {3.771082822184461*^9, 3.7710828585807424`*^9}, {
   3.7710841587013617`*^9, 3.771084181985421*^9}, 3.7710889054519196`*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"d877a0e7-7e8a-4aea-86bc-6cdb81db827e"],

Cell[TextData[StyleBox["Each input is cyclic, described in terms of its \
\[OpenCurlyQuote]% duty\[CloseCurlyQuote] which is the ratio of time spent at \
max voltage to time spent at low voltage. The simulated output is constant \
and maximal in voltage (4 volts \[DoubleLeftRightArrow] True) when one of the \
entries is also. As predicted by the table.",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.7710816460651255`*^9, 3.7710818287339644`*^9}, {
  3.7710818861439247`*^9, 3.7710818981702557`*^9}, {3.7711024686116743`*^9, 
  3.771102605715881*^9}},ExpressionUUID->"7dc6f89c-9b70-4620-b905-\
99e61ae195b9"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"Column", "[", 
   RowBox[{"{", 
    RowBox[{"orgate", ",", 
     RowBox[{"SystemModelPlot", "[", 
      RowBox[{
       RowBox[{"SystemModelSimulate", "[", 
        RowBox[{"orGateConnectedToDigitalgEntries", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.5"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "\"\<orGate1.y\>\"", "}"}], ",", 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"List","ListIcon",GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["List", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["3", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["672", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
           Typeset`open]},
          "IconizedObject"]],
        {PlotLegends -> {"OR gate output"}, PlotStyle -> {
           RGBColor[1, 0, 0], 
           Thickness[Tiny]}, AxesLabel -> {"time(sec)", "voltage(V)"}},
        SelectWithContents->True,
        Selectable->False]}], "]"}]}], "}"}], "]"}],
  FontSize->14]], "Input",
 CellChangeTimes->{{3.7706345730733604`*^9, 3.770634573079372*^9}, {
   3.770634627511234*^9, 3.7706346531975713`*^9}, {3.770634705834797*^9, 
   3.770634719710648*^9}, {3.7706348383513737`*^9, 3.7706348403011312`*^9}, {
   3.770634876266941*^9, 3.7706349258513565`*^9}, {3.7706349740713654`*^9, 
   3.7706349809230404`*^9}, {3.7706350321278353`*^9, 
   3.7706350626302576`*^9}, {3.7706351716104593`*^9, 3.770635191313734*^9}, {
   3.7706352929808607`*^9, 3.7706353053527384`*^9}, {3.7706355126443405`*^9, 
   3.770635570668157*^9}, {3.770635628296033*^9, 3.7706357093793635`*^9}, {
   3.770635755192438*^9, 3.7706357765951896`*^9}, {3.770636363016448*^9, 
   3.7706363740240374`*^9}, {3.770636405190693*^9, 3.7706364135383663`*^9}, {
   3.7706366175070076`*^9, 3.770636624007652*^9}, {3.7706367235663524`*^9, 
   3.7706367394059896`*^9}, 3.770636795132264*^9, {3.7706368571995173`*^9, 
   3.7706369445877633`*^9}, {3.7706384624647217`*^9, 3.770638468318828*^9}, {
   3.7706385259906235`*^9, 3.770638546388034*^9}, {3.7706520824472322`*^9, 
   3.7706521956050153`*^9}, {3.7706523023914013`*^9, 3.77065230312046*^9}, {
   3.770652388595232*^9, 3.7706523893263035`*^9}, {3.7706839104723206`*^9, 
   3.770683911579794*^9}, 3.7710800022405324`*^9, {3.771081281044536*^9, 
   3.7710812827815638`*^9}, {3.77108138540747*^9, 3.7710813924397497`*^9}, {
   3.7710814605124564`*^9, 3.7710814822660046`*^9}, {3.7710815139446263`*^9, 
   3.7710815164374847`*^9}, {3.771081572248226*^9, 3.771081586158802*^9}, 
   3.7710816765381975`*^9, 3.771082415258195*^9, 3.7710824841246037`*^9, {
   3.7710825805120916`*^9, 3.7710825965078974`*^9}, {3.771082640820527*^9, 
   3.771082664612996*^9}, 3.7710828863738265`*^9},
 FontSize->18,
 CellLabel->"In[66]:=",ExpressionUUID->"dda15b23-f3df-4720-bb2f-4f954602b7e4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
           TagBox[
            TooltipBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJx13HnwbvUcwPE7jaExhuwJCdnGmDQYk/WSPXumacydpmmUbJWQNpdKskdl
3yXJkiS0C0m0SCJJkj37lp3xO+c99/saZ+b5/fPMa9Rzn+c553zen/P8bu66
x77P3HOzdevW/ewm69ZNj///s8X6f5/0x8ufssf9H/n/Xj/8z43PP/ulxz5h
8b8/ffiQ25z8+OsOftbin991+KDr77n95p/csPj3dx9+2LVPe9M79tlj8XzP
GT7ziTfb7L5H7bV4/r2HH3LahQec+4HnL/68Fw6fvvWRv37G6fss/vz9ht97
/jan7L/3ixevZ//hq/8x/YEvWby+lw7fcbtrtr3xYS9bvN4Dhp/9nIeuPePL
F6//wOF3v2v6OWjxfg4evurSv+38kxMOWby/Q4fvcKNdbn6/U1+xeL8bh3fd
YXrCVy7e/6uGn/zg1z1q95+9avF5HDb8m2dMz3jY4vM5fPgNL/zFv0764+GL
z+uI4fsedbu1t3DE4vN79fBFH3rs5//8n1cvPs8jh1+w9mlteaPXLD5fvumV
x+/38Jsetfi8+ePT293itYvPn580Pd3tXrc4Hvyr6eO+0+sXx4enT++yu71h
cbz4PhuO/vIN937j4vjx19eebavt3rQ4nvy8t/720Ec+6M2L48trL27tLR+9
ON78rJ+c8J7zt3nL4vjzR9Y+vSuP584H/st/rjjw+nu+dXF+8GPmE4A7X/i4
Lac3dMzi/OH55Z3CnU/8gPnn2MX5xUec9421M4g73/jba0d/1x2OW5x/q333
+Q/gzk9+yd7TAXnb4nzlr9xw77Ujzp2/bx++9fyCufOZp1d72oXc+f2O4VPf
9/sTL9iJO995s/kD4M7/dw4/cz6BuOuBPzy93Su46+Ndw3+anm5X7nrhR0+X
w9Xc9fPu4WOm03k37nri6w6eDgh3fb1nePv5hOeuNz7sbTuunULc9ffe4W/d
bTrA3PXId53O7t9y1+f7hl88XS77cdcrf2k6Hf/MXb/vH77lfIFy1/Mqb75+
/jj/wV3vHxieX+6h3PXPPX5wuHnAH7tgp7UrnpsP/PS1q/VWR3Dzgv8+ffrn
c/ODP7jVdIF8aLh5wk+YDzg3X/gPJ04vkJs3/M61V7d2RQ03f3j9g3Zbu8Q+
PNw84l/+a3rD3Hzi6ezZcDQ3r3h+u5dx84vnp7vV8cPNM57H1c7cfOPGCzfv
eB4PV3Lzj185Xd5bfmS4ecj3mi8obh7yN+fLi5uP/PLp8riGm5d8l+l03vqE
4eYnf206/Xbn5invOx9ebr7y7RsAw83bjw5/cXp523Lzl5+71/TDzWOeLu7f
n8jNZ56m5YHXc/P6xOHd5ifk5jffeB5Y3Dzn6Wjc5mRuvvMuvcDh5v3Hhv87
XW7bc/OfPzqdzvtzPeCnzm+Y6wP/dTocN3C9OGn4/dPbfTDXD37c/AFyPeHf
Tbk4k+sLv33H+YobrjcfH37EfEC4/vDPp/G6kesRz+PvPK5PPI+XzT4xXK94
vnx35PrF8+VxJHc683x0L+D6xt85cA7YcL3jV0wf3xO5/vE95hOQ6yFfcvH0
w/WRX3bsNFA/NVwv+c7zCc31k786r5NcT/lF0zi9nOsr37YLZLje8jnTONiF
6y/vOa9PXH95Pp2v4nrM8+my1acXfeb5cGzges2tD1y/eX66a7nHUxbXO9d3
7vrnes/NA67/3Hzg9gFuXnD7ATc/uH2Bmyfc/sDNF26f+Mxi3nD7BTd/uH2D
m0fc/sHNJ24f4eYVt59w84vbV7h5xu0v3HzjBs6pi3nH7Tfc/OP2HW4ecvsP
z6f7Rm4f4tZN7vTj5ie3L3HzlNufuPn62eH2KW7ecvsVN3+5fYubx9z+xc1n
bh/j5jW3n3Hzm9vXuHnO7W/cfD9tuH2Om/fcfsfNf27f43rA7X+rXS+4/ZDr
B7cvcj3h9keuL9w+yfXmc8Ptl1x/uH2T6xG3f3J94vZRrlfcfsr1i9tXuZ5x
+yvXN26f/fyid9x+y/WP23e5HnL7L9dHbh/mvm7g1k+un9y+zPWU25+5vnL7
9BcWveX2a66/3L7N9Zjbv7k+c/s412tu/eD6ze3rXM+5/Z17PH3Rd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nev7GYu+c33n+s71nes713eu71zf
ub6v8qbvP7nec73nes/1nus9F8Azh+s913uu91zvud5zvefuh/gtc++5+yOu
91zvud5zved6z/X+rOF6z/We6z3Xe673XO+53nO953rP9Z4br1zvud5zved6
z/X+7OF6z/We6z3Xe673XO+5vnN95/rO9Z3rO9d3ru9c37m+c30/Z7i+c33n
+s71nes713eu71zfub5zfef6zvWd6zvXd67v5w7Xd67vXN+5vnN95/rO9Z3P
mvvO3Q/zLeYTms+Yc7La9Z7rPdd7rvdc7784XO+53nO953rP9Z7rPdd7rvdc
77necx8n13uu91zvucfzFtc/139uHnD7ADcfuP2AmxfcvsDND25/4OYJt09w
84XbL7h5w+0b3Pzh9g9uHnH7yCpvuh/h9hVufnH7CzfPuH2Gm2/cfsPNO27f
4eYft/98abh5yO1D3Hzk9iNuXnL7Ejc/uf2Jm6fcPsXNV26/4uYtt29x85fb
v7h5zO1f3Hzm9jFuXnP7GTe/uX2Nm+fc/sbNd26f4+Y9t99x8//Lwy1AXA+4
/Y/rA7cPcr3g9kOuH9y+yPWE2x+5vnD7JM85OID7Pom7v+S+X+LuN7nvm7j7
T24f5W5/uHHD9YrbV7l+cfsr1zNun+X6xu23Xxmud9y+y/WP23+5HnL7MNdH
bj/mesnty1w/uf2Z6ym3T3N95fZrrrfcvs31l9u/uR5z+zjXZ24/53rN7etc
v7n9nes5t89zj+cP13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3r
O9d3ru9c37mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6/lXFz3nes71nOs5
13Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3n
es71nOs513Ou51zPL1j0nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5+0fu
+yKu51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOdfzry16vtr1nes7
13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c6cP
13eu71zfub5zfef6zj1euOg713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvX964u+c33n
+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9X+VN369yved6z/We
6z3Xe673XO+53nO953rP9Z7r/TeGCwLXe673XO+53nO953rP9Z7rPdd7rvdc
77nec73nes99f8z9voj7Ppn7/RHXe673XO+53nPjges913uu91zvud5zved6
f9Fwfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes7
13eu71zfub5zfef6zvWd6zvXd67v3OPFw/Wd6zvXd67vXN9Xu95zved6z/We
6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5z
ved6f8lwved6z/We6z3Xe673XO+53nO953rP9Z7rPdf7Vd7Uf67/XP+5/nO9
53rP9Z7rPdd7rvdc77nec73nes/1nus913uu95cOFwSu91zvud5zved6z/We
6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nfJ/NP595zved6z/We6z3Xe673
XO+53nO953r/zeF6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73n
es/1nus913uu91zvud5zvecOL9d7rvdc77nec73nHi9bXO9c/7kThNsHuHnA
7QfcfOD2BW5ecPsCNz+4/YGbJ9w+wc0Xbr/g5g23b3Dzh9s/uHnE7SPcfOL2
E57H1V7cvsLzuNmH21+43z9y+wz3+0huv+G+z+T2He77TW7/4b7v5PYh7vtP
bj/i7o+4fYm7X+L2J26ecvsUN1+5/Yqbt9y+xc1fbv/i5jG3j3HzmdvPuHnN
7Wvc/Ob2N26ec/scN9+/Ndx+x817bt/j5j+3/3E94PZBrg/cfsj1gtsXuX5w
+yPXE26f5PrC7Zdcb7h9k+sPt39yPeL2Ua5P3H7K9YrbT7l+cfsq1zNuf+X6
xu2zXO+4/ZbrH7fvcj3k9l+uj9w+zPWS24+5fnL7MtdTbn/m+srt01xvuf2a
6y+3b3M95vZvrs/cPr7a9Zvb17mec/s793j5ou9c37kBwfWd6zvXd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfufsRru/c/QnXd67v
XN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd
yzHXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+f3vRd67vXN+5vnN95/rO9Z3r
O9d3ru9c3/mBc99XedP3RVzvud5zved6z/We6z3Xe673XO+53nO953rP9Z7r
Pdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO9
53rP9Z7rPdd7rvdc77nec73n+s71nes713eu79zjFcP1nes7NyC4vnN95/rO
9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5
vnPfR/Khc99Xu95zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77ne
c73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53n9nuN5zved6z/We
6z3Xe95mDsoqb+o/13+u/1z/uft7rvdc77nec73nes/1nus913uu91zvud5z
ved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvfc43eH6z3Xe25A
cL3nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/dz3O/j+T6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c
37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9v3K4vnN9
5/rO9Z3rO9d37n6e6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71
nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7me
cz3nes71nOs513Ou51zPucuD6znXc67nXM+5nnM953rO9ZzrOff4vUXPuZ5z
A4HrOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWcd54Dstr1nes7
13eu71zfub5zfef6zvWd6zvXd67v3N8/4vrO/X0kru9c37m+c33n+s71nes7
13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c32/
atF3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfV/lTd/Xc73nes/1
nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nH
7w/Xe6733IDges/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO95+7f
ub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m/f8z1nfv7yFzf
ub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3LHdd3/vHc99Wu91zvud5zved6
z/We6z3X+6uH6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus9
13uu91zvud5zved6z/We6z3Xe673XO+53nO953rPr5l7v8qb+s/1n+s/13+u
91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1
nus913uu99zjD4brPdd7bkBwved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP
9Z7rPdd77r9H4nrP9Z7rPdd7rvdc77nec73nes/1nus913uu99z9PNd3ru9c
37m+c33n+s71nev7NcP1nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfefu57mecz3nes71
nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7me
cz3nes71nOs59/jDRc+5nnMDges513Ou51zPuZ5zPed6zvWc6znXc67nXM+5
nnM953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6znX
c67nXM+5nnM953rO/ffGXM+5/z/r1a7vXN+5vnN95/rO9Z3rO9d3ru9c37m+
c33n+s71nes713eu71zfr130nes713eu71zfub5zfef6zvWd6zvXd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvX
d67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfudOP6zvX
d67vXN+5vnN95/rOPf5ohbdY/z8KxtU2
               "]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJx13HnwdfUcwPFnGkNjDNmTLTvTGBqMyRrZs6WmaUzTNA3JljZJEkmyp91O
UsmSJCRLRdKmTUmSkC37lp3xO+ft+b7Gmbm/f+68Rt3n3nvO+bw/5/6e3GuX
VzzvhRusW7fup7dYt256/P+fDbf818l/uOJZuzz08f/vLYf/ceBLvrzPkU9b
/O/PHX7NHU556o/2327xz+8w/Oob77/5hp/ccfHv7zz8mOuf845jd99l8Xwv
GD7z6bfaYLNDd108/27Djzr9/H2/+qGXLP68lw2fcY9DfrXNGbsv/vw9ht9/
7qan7rXbnovXs9fwtX+f/sC9F69vn+G7PuS6+978oFcuXu++w89/waPXnvFV
i9e/3/B73zP9vHrxfvYfvuaSv257wwmvWby/A4bvcrPtb/3g0167eL8HDu+w
xfSEr1u8/9cPP/ORb3nCzj99/eLzOGj419tMz3jQ4vN5w/DbXvbzf578hzcs
Pq+Dhzc79E5rb+Hgxef3xuGLjnvy5//07zcuPs9Dhl+69mltfLM3LT5fvuXV
x+/x2Fseuvi8+ePT293ozYvPn58xPd2d3rI4HvzL6eO+21sXx4enT++ye79t
cbz4QTse9rWbHvj2xfHjC9aebZOHvGNxPPnFh//mgMc/4p2L48trL27tLR+2
ON683Q0nvO/cTd+1OP780bVP7+rjufOB//zvK/e78f6HL84PftJ8AnDnCx+1
8fSGjlicPzy/vFO584kfNv8cuTi/+OCzL1w7g7jzjb+9dvR32OKoxfm3yhtt
eZ/5D+DOT957t+mAHD3c+cpfv+mBa0ecO3+PGb79/IK585mnV3v6+dz5fezw
aR/43Unnbc2d77zB/AFw5/+7h583n0Dc9cAfmd7uldz18Z7hP05PtwN3vfAT
p8vhWu76ee/wEdPpvBN3PfGP9p8OCHd9vW948/mE5643PujordZOIe76e//w
5feeDjB3PfK9prP7N9z1+YHhPafLZQ/ueuVzptPxT9z1+8Hh284XKHc9r/b8
cf6du94/NDy/3AO46597/PBw84A/dt7Wa1c8Nx/4uWtX6+0O5uYF/2369M/l
5gd/eJPpAjluuHnCT5sPODdf+PcnTS+Qmzf87rVXt3ZFDTd/eMtH7LR2iX1k
uHnEv/jn9Ia5+cTT2bPjYdy84vntXsbNL56f7nbHDzfPeB5X23LzjRsv3Lzj
eTxczc0/ft10eW/80eHmIT9gvqC4eciXzpcXNx/5VdPlcR03L/me0+l8jxMW
85O/OZ1+O3PzlF8xH15uvvKdGwCLeXvi8FnTy7svN3/5RbtOP9w85uni/t1J
3HzmaVrudyM3r08a3ml+Qm5+883ngcXNc56Oxh1O4eY7b98LXMz7jw3/Z7rc
NufmP584nc57cT3gZ89vmOsD/2U6HDdxvTh5+IPT230k1w9+yvwBcj3h3065
OJPrCx+z1XzFLXrz8eHHzQeE6w//bBqvB3I94nn8nc31iefxssEnFr3i+fLd
iusXz5fHIdzpzPPRPY/rG1+13xywRe/4tdPH93Suf3y/+QTkesjfunj64frI
rzxyGqifWvSS7z6f0Fw/+RvzOsn1lF8+jdMruL7yHbtAFr3lr0zjYHuuv/zC
eX3i+svz6XwN12OeT5dNPr3oM8+HY0eu19z6wPWb56e7nns8dXG9c33nrn+u
99w84PrPzQduH+DmBbcfcPOD2xe4ecLtD9x84faJzyzmDbdfcPOH2ze4ecTt
H9x84vYRbl5x+wk3v7h9hZtn3P7CzTdu4Jy2mHfcfsPNP27f4eYht//wfLof
yO1D3LrJnX7c/OT2JW6ecvsTN18/O9w+xc1bbr/i5i+3b3HzmNu/uPnM7WPc
vOb2M25+c/saN8+5/Y2b76cPt89x857b77j5z+17XA+4/W+VN/xfL7j9kOsH
ty9yPeH2R64v3D7J9eZzw+2XXH+4fZPrEbd/cn3i9lGuV9x+yvWL21e5nnH7
K9c3bp/9/HC94/Zbrn/cvsv1kNt/uT5y+zD3dQO3fnL95PZlrqfc/sz1ldun
vzBcb7n9musvt29zPeb2b67P3D7O9ZpbP7h+c/s613Nuf+cezxiu71zfub5z
fef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9f3Lw7Xd67vXN+5vnN95/rO9Z3r
O9f31a73XO+53nO953rP9Z4L4JnD9Z7rPdd7rvdc77nec/dD/K6599z9Edd7
rvdc77nec73nev+l4XrP9Z7rPdd7rvdc77nec73nes/1nhuvXO+53nO953rP
9f7Lw/We6z3Xe673XO+53nN95/rO9Z3rO9d3ru9c37m+c33n+v6VRd+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes71/evLvrO9Z3rO9d3ru9c37m+85fm
vnP3w3yb+YTmL845WeX1349xved6z/We6/1Zw/We6z3Xe673XO+53nO953rP
9Z7rPfdxcr3nes/1nns8e7jrn+s/Nw+4fYCbD9x+wM0Lbl/g5ge3P3DzhNsn
uPnC7RfcvOH2DW7+cPsHN4+4fWS1m1fcvsLNL25/4eYZt89w843bb7h5x+07
3Pzj9p9zhpuH3D7EzUduP+LmJbcvcfOT25+4ecrtU9x85fYrbt5y+xY3f7n9
i5vH3P7FzWduH+PmNbefcfOb29e4ec7tb9x85/Y5bt5z+x03/7823ALE9YDb
/7g+cPsg1wtuP+T6we2LXE+4/ZHrC7dP8pyDfbnvk7j7S+77Je5+k/u+ibv/
5PZR7vaHGzdcr7h9lesXt79yPeP2Wa5v3H779UXvuH2X6x+3/3I95PZhro/c
fsz1ktuXuX5y+zPXU26f5vrK7ddcb7l9m+svt39zPeb2ca7P3H7O9Zrb17l+
c/s713Nun+cez130nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO
9Z3rO9d3rudcz7mecz3nes71nOs513Ou51zPuZ5zPed6/o1Fz7mecz3nes71
nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7me
cz3nes71nOs51/PzFj3nes71nOs513Ou51zPuZ5zPed6zvWc6znXc+7+kfu+
iOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9fybi56v8vrvs7i+
c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO3f6
cH3n+s71nes713eu79zj+cP1nes713eu71zfub5zfef6zvWd6zvXd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6fsFwfef6
zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+r7a9Z7rPdd7rvdc
77nec73nes/1nus913uu91zvLxwuCFzvud5zved6z/We6z3Xe673XO+53nO9
53rP9Z7rPff9Mff7Iu77ZO73R1zvud5zved6z40Hrvdc77nec73nes/1nuv9
RcP1nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c
37m+c33n+s71nes713eu71zfub5zjxcv+s71nes713eu76u8/n6e6z3Xe673
XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We
6z3X+28N13uu91zvud5zved6z/We6z3Xe673XO+53nO9X+36z/Wf6z/Xf673
XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1/pLhgsD1nus913uu91zvud5z
ved6z/We6z3Xe673XO+53nO953rP9Z7rPff7ZP7J3Huu91zvud5zved6z/We
6z3Xe673XO8vHa73XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zved6z/We6z3Xe+7wcr3nes/1nus913vu8bLF9c71nztBuH2Amwfc
fsDNB25f4OYFty9w84PbH7h5wu0T3Hzh9gtu3nD7Bjd/uP2Dm0fcPsLNJ24/
4Xlc7crtKzyPm925/YX7/SO3z3C/j+T2G+77TG7f4b7f5PYf7vtObh/ivv/k
9iPu/ojbl7j7JW5/4uYpt09x85Xbr7h5y+1b3Pzl9i9uHnP7GDefuf2Mm9fc
vsbNb25/4+Y5t89x8/3y4fY7bt5z+x43/7n9j+sBtw9yfeD2Q64X3L7I9YPb
H7mecPsk1xduv+R6w+2bXH+4/ZPrEbePcn3i9lOuV9x+yvWL21e5nnH7K9c3
bp/lesftt1z/uH2X6yG3/3J95PZhrpfcfsz1k9uXuZ5y+zPXV26f5nrL7ddc
f7l9m+sxt39zfeb28VVef7/O7etcz7n9nXu8Yri+c33nBgTXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfefuR7i+c/cnXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvX
dy7HXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+v7t4frO9Z3rO9d3ru9c37m+
c33n+s71nes7P3zu+2rXe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1
nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77ne
c73nes/1nus913uu91zvud5zfef6zvWd6zvXd+7xykXfub5zA4LrO9d3ru9c
37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3r
O/d9JB8w932V19/Pc73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+5
3nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5fNVzvud5zved6
z/We6z1vOgdltes/13+u/1z/uft7rvdc77nec73nes/1nus913uu91zvud5z
ved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvfc43eG6z3Xe25A
cL3nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/dz3O/j+T6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c
37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9v3rRd67v
XN+5vnN95/rO3c9zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7me
cz3nes71nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddz
rudcz7mecz3nes71nOs5d3lwPed6zvWc6znXc67nXM+5nnM95x6/u+g513Nu
IHA953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zPuZ7ztnNAVnn9/TzX
d67vXN+5vnN95/rO9Z3rO9d3ru9c37m/f8T1nfv7SFzfub5zfef6zvWd6zvX
d67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6
fs1wfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes7
13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9f31a73XO+53nO9
53rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe+7x
e8P1nus9NyC43nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvuft3
ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd+7vH3N95/4+Mtd3
ru9c37m+c33n+s71nes713eu71zfub5zfedyx/Wdfzz3fZXX389zved6z/We
6z3Xe673XO+vHa73XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPb9p7v1q13+u/1z/uf5z
ved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zvecevz9c77necwOC6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77ne
c73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec/89Etd7rvdc77nec73nes/1nus913uu91zvud5zvefu57m+c33n
+s71nes713eu71zfr1v0nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfefu57mecz3nes71
nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7me
cz3nes71nOs59/iDRc+5nnMDges513Ou51zPuZ5zPed6zvWc6znXc67nXM+5
nnM953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6znX
c67nXM+5nnM953rO/ffGXM+5/z/rVV5/P8/1nes713eu71zfub5zfef6zvWd
6zvXd67vXN+5vnN95/rO9f364frO9Z3rO9d3ru9c37m+c33n+s71nes713eu
71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71
nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru/c6cf1
nes713eu71zfub5zfecef7jS/wWcvufu
               "]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ], {}, {}, {}}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ], {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"time(sec)\"", TraditionalForm], 
           FormBox["\"voltage(V)\"", TraditionalForm]}, 
         AxesOrigin -> {0, 2.9444444444444446`}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {
            FormBox["\"t\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 0.5}, {2.9444444444444446`, 4.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"30% duty cycle step\"", "\"60% duty cycle step\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
           TagBox[
            TooltipBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                NCache[
                 Rational[1, 120], 0.008333333333333333]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1:eJx13HnQtfUYwPF3miaNMYQk2YqQMYYGY6xFtmRJmaYxTdM0SbYkJKlIKluK
sreoJFmTkGyVJApJJEl2sm/ZGc99f733Z/xmzvPPmc+o855zL9f3Oud5s9Xe
L9jlmRusW7fupzdbt256/P+fTbb/19l/uOrJe99/u//39ov/cfhzPvPiE54w
/O87L375ph9+/A8Pefrwz++++GU33nPbjT+4x/Dv77X44Tc89di37b/38Hz7
LL5gx1tscJ9j9h2ef7/FDz3vsoM+d+pzhj/veYvPv8tRv3ra+fsPf/4Bi0+6
ZMtzDtzvhcPrOXDxdX+f/sAXDa/vxYvveL/rt97oiJcMr/egxc/Y52Frz/jS
4fUfvPid75h+Xja8n0MWX/u1v+764zNfPry/QxffYcPdbnnfcw8b3u/hi3d/
yPSErxje/ysXP+nBr33UXj995XA8jlj866dNz3jEcHxetfj1z/v5P8/+w6uG
43Xk4vscs9naWzhyOH6vXnz5aY/9xJ/+/erheB61+LlrR2vzDY8eji/f/Joz
DnjEzY8Zjje/f3q7m7xmOP78xOnpNnvtcD74l9PhvtPrhvPD09G78m6vH84X
33uP4y6+aZs3DOePv7z2bFvc79jhfPKz3/SbQ7d70BuH88trL27tLR83nG9+
+o/PfNclWx4/nH9+z9rRu+YM7nrgP//76oNvvOebhuuDHzNfANz1widuPr2h
Nw/XD88v7xzueuIHzD8nDNcXH3nhV9auIO5642+unf3dH3LicP2t9t3nP4C7
PvlF+00n5C3D9cpfuGmbtTPOXb9vXXzb+QVz1zNPr/a8y7jr+22Lzz35d2dd
uhN3vfMG8wHgrv+3L95lvoC4+4FPn97u1dz98Y7Ff5yebnfufuFHT7fDddz9
887Fb54u5z25+4l/eMh0Qrj7612Lt50veO5+4yPessPaJcTdfyct/sbdphPM
3Y+81XR1/4a7P09e/MLpdjmAu1/5ouly/BN3/56y+NbzDcrdz6s9H86/c/f7
qYvnl3sod/9zj+8e5gG/79Kd1u54bj7wzmt3622O5OYF/206+pdw84PfvcV0
g5w2zBN+wnzCufnCvz9reoHcvOG3r726tTtqmD+8/YP2XLvFTh/mEf/in9Mb
5uYTT1fPHsdx84rnt3slN794frrbnDHMM57H1a7cfOPGCzfveB4P13Dzj18x
3d6bv2eYh3yv+Ybi5iF/fb69uPnIL51uj+u5ecl3nS7nu5w5zE/+0nT57cXN
U37BfHq5+cq3bwAM8/a9iz8/vbytufnLz9p3+uHmMU839+/O4uYzT9Py4Bu5
eX3W4j3nJ+TmN280DyxunvN0Njb9MDffebde4DDv37f4P9Ptti03//m90+V8
INcDfsr8hrk+8F+m03ET14uzF58yvd0Hc/3gx80HkOsJ/3bKxQVcX/itO8x3
3NCb9y9+5HxCuP7wz6bxejjXI57H34Vcn3geLxt8YOgVz7fvDly/eL49juIu
Z57P7qVc3/hbB88BG3rHh02Hb0euf3yP+QLkeshfvWL64frILzlhGqgfGnrJ
d54vaK6f/MV5neR6ys+fxulVXF/5dt0gQ2/5s9M42I3rLz9zXp+4/vJ8OV/L
9Zjny2WLjwx95vl07MH1mlsfuH7z/HQ3cI/nDPc713fu/ud6z80Drv/cfOD2
AW5ecPsBNz+4fYGbJ9z+wM0Xbp/46DBvuP2Cmz/cvsHNI27/4OYTt49w84rb
T7j5xe0r3Dzj9hduvnED59xh3nH7DTf/uH2Hm4fc/sPz5X44tw9x6yZ3+XHz
k9uXuHnK7U/cfP3Y4vYpbt5y+xU3f7l9i5vH3P7FzWduH+PmNbefcfOb29e4
ec7tb9x8P29x+xw377n9jpv/3L7H9YDb/1Z54//1gtsPuX5w+yLXE25/5PrC
7ZNcbz6+uP2S6w+3b3I94vZPrk/cPsr1ittPuX5x+yrXM25/5frG7bOfWFzv
uP2W6x+373I95PZfro/cPsx93cCtn1w/uX2Z6ym3P3N95fbpTy6ut9x+zfWX
27e5HnP7N9dnbh/nes2tH1y/uX2d6zm3v3OP5y+u71zfub5zfef6zvWd6zvX
d67vXN+5vnN95/rO9Z3rO9f3Ty2u71zfub5zfef6zvWd6zvXd67vq7y+91zv
ud5zved6z/WeC+AFQ++53nO953rP9Z7rPfd5iI+fe899PuJ6z/We6z3Xe673
XO8/PfSe6z3Xe673XO+53nO953rP9Z7rPTdeud5zved6z/We6/1nht5zved6
z/We6z3Xe67vXN+5vnN95/rO9Z3rO9d3ru9c3z+7uL5zfef6zvWd6zvXd67v
XN+5vnN95/rO9Z3rO9d3ru+fW1zfub5zfef6zvWd6zvXd/703Hfu8zDfar6g
+VNzTla73nO953rP9Z7r/ecX13uu91zvud5zved6z/We6z3Xe6733OHkes/1
nus993jhcP9z/efmAbcPcPOB2w+4ecHtC9z84PYHbp5w+wQ3X7j9gps33L7B
zR9u/+DmEbePrHbzittXuPnF7S/cPOP2GW6+cfsNN++4fYebf9z+c9EwD7l9
iJuP3H7EzUtuX+LmJ7c/cfOU26e4+crtV9y85fYtbv5y+xc3j7n9i5vP3D7G
zWtuP+PmN7evcfOc29+4+c7tc9y85/Y7bv5fvLgFiOsBt/9xfeD2Qa4X3H7I
9YPbF7mecPsj1xdun+Q5Bwdx3ydxny+575e4z5vc903c509uH+U+/nDjhusV
t69y/eL2V65n3D7L9Y3bb78w9I7bd7n+cfsv10NuH+b6yO3HXC+5fZnrJ7c/
cz3l9mmur9x+zfWW27e5/nL7N9djbh/n+szt51yvuX2d6ze3v3M95/Z57vGS
oe9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnM953rO
9ZzrOddzrudcz7mecz3nes71nOs51/MvDj3nes71nOs513Ou51zPuZ5zPed6
zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zP
Lx16zvWc6znXc67nXM+5nnM953rO9ZzrOddzrufc50fu+yKu51zPuZ5zPed6
zvWc6znXc67nXM+5nnM953rO9ZzrOdfzLw09X+WN/9d3ru9c37m+c33n+s71
nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rOXT5c37m+c33n+s71
nes793jZ4vrO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd
6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33/8uL6zvWd6zvXd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71fZXX957rPdd7rvdc77nec73nes/1
nus913uu91zvvzL0nus913uu91zvud5zved6z/We6z3Xe673XO+53nO9574/
5n5fxH2fzP3+iOs913uu91zvufHA9Z7rPdd7rvdc77nec72/fOg713eu71zf
ub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes7
13eu71zfub5zfecer1hc37m+c33n+s71fbXrPdd7rvdc77nec73nes/1nus9
13uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdfXVzvud5z
ved6z/We6z3Xe673XO+53nO953rP9X616z/Xf67/XP+53nO953rP9Z7rPdd7
rvdc77nec73nes/1nus91/uvDb3nes/1nus913uu91zvud5zved6z/We6z3X
e673XO+53nO953rP9Z77fTL/ZO4913uu91zvud5zved6z/We6z3Xe673Xx96
z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zv
ud5zvedOL9d7rvdc77nec73nHq8c7neu/9wFwu0D3Dzg9gNuPnD7AjcvuH2B
mx/c/sDNE26f4OYLt19w84bbN7j5w+0f3Dzi9hFuPnH7Cc/jal9uX+F53OzP
7S/c7x+5fYb7fSS333DfZ3L7Dvf9Jrf/cN93cvsQ9/0ntx9xn4+4fYn7vMTt
T9w85fYpbr5y+xU3b7l9i5u/3P7FzWNuH+PmM7efcfOa29e4+c3tb9w85/Y5
br5/Y3H7HTfvuX2Pm//c/sf1gNsHuT5w+yHXC25f5PrB7Y9cT7h9kusLt19y
veH2Ta4/3P7J9YjbR7k+cfsp1ytuP+X6xe2rXM+4/ZXrG7fPcr3j9luuf9y+
y/WQ23+5PnL7MNdLbj/m+snty1xPuf2Z6yu3T3O95fZrrr/cvs31mNu/uT5z
+/gqr/8+ntvXuZ5z+zv3eNXi+s71nRsQXN+5vnN95/rO9Z3rO9d3ru9c37m+
c33n+s71nes713eu71zfub5zfef6zvWd+zzC9Z37fML1nes713eu71zfub5z
fef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33ncsz1nes713eu
71zfub5zfef6zvWd6zvXd67v31xc37m+c33n+s71nes713eu71zfub5zfecH
zn1f5fW953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We
6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5z
ved6z/We6z3Xd67vXN+5vnN95x6vXlzfub5zA4LrO9d3ru9c37m+c33n+s71
nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO/d9JB869321
6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5z
ved6z/We6z3Xe673XO+53nO953rP9Z7r/bcW13uu91zvud5zved6z1vOQVnt
+s/1n+s/13/u8z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus9
13uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73n
es/1nus913uu91zvud5zved6z/We6z3Xe+7x20Pvud5zA4LrPdd7rvdc77ne
c73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
7vM89/tIru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes71/drhr5zfef6zvWd6zvXd+7z
PNdzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM9
53rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6znXc67n
XM+5nnO3B9dzrudcz7mecz3nes71nOs513Pu8TtDz7mecwOB6znXc67nXM+5
nnM953rO9ZzrOddzrudcz7mecz3nes71nHedA7LK67+v5/rO9Z3rO9d3ru9c
37m+c33n+s71nes79/ePuL5zfx+J6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c
37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+vXVzfub5zfef6
zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zf
ub5zfef6zvWd6zvXd67vXN+5vnN95/rO9X2V1/ee6z3Xe673XO+53nO953rP
9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6zz1+d+g913tuQHC9
53rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zn9+5vnN95/rO9Z3r
O9d3ru9c37m+c33n+s71nes713eu71zfub9/zPWd+/vIXN+5vnN95/rO9Z3r
O9d3ru9c37m+c33n+s71ncsd13f+0dz31a73XO+53nO953rP9Z7rPdf76xbX
e673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6
z/We6z3Xe673XO+53nO953rP9Z6Pnnu/2vWf6z/Xf67/XO+53nO953rP9Z7r
Pdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+5x+8N
ved6zw0Irvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+5
3nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/33SFzv
ud5zved6z/We6z3Xe673XO+53nO953rP9Z77PM/1nes713eu71zfub5zfef6
fv3Qd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5z
fef6zvWd6zvXd67vXN+5vnN95/rO9Z37PM/1nOs513Ou51zPuZ5zPed6zvWc
6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zPucfv
Dz3nes4NBK7nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zP
uZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71nOs5
998bcz3n/v+sV3n99/Vc37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvX
d67vXN9vWFzfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+
c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3
ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWdu/y4vnN95/rO9Z3rO9d3
ru/c4w9WeJPt/wv+b/Se
               "]]}, 
             TemplateBox[{"\"orGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"orGate1.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               PointSize[
                NCache[
                 Rational[1, 120], 0.008333333333333333]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"orGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"orGate1.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"orGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"orGate1.y"}], "Tooltip"]& ], {}}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"orGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"orGate1.y"}], "Tooltip"]& ], {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"time(sec)\"", TraditionalForm], 
           FormBox["\"voltage(V)\"", TraditionalForm]}, 
         AxesOrigin -> {0, 2.9444444444444446`}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {
            FormBox["\"t\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 0.5}, {2.9444444444444446`, 4.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"OR gate output\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.771081519608652*^9, 3.771081595262229*^9, 
  3.7710825549718533`*^9, 3.7710826428274865`*^9, 3.7710826766001515`*^9, 
  3.7710827394608607`*^9, 3.7710828900470643`*^9, 3.7710833170570545`*^9, 
  3.7710833722399964`*^9, 3.7710834790062237`*^9, 3.771083528676199*^9, 
  3.7710837560498934`*^9, 3.771084185618121*^9, 3.771084255425641*^9, 
  3.7710857473347797`*^9, 3.7710889127399344`*^9},
 FontSize->14,
 CellLabel->"Out[66]=",ExpressionUUID->"0e7ca2b6-2e47-483e-b384-93751517ce5a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7706519986831627`*^9, 3.77065200017717*^9}},
 FontSize->18,ExpressionUUID->"3ab03cca-554d-414b-b75f-adc45527d25c"],

Cell[TextData[StyleBox["Another example for XOR gate:",
 FontSize->24,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.770652004949404*^9, 3.770652025308991*^9}, {
  3.7706892565534987`*^9, 3.77068926579832*^9}, {3.7707217390106974`*^9, 
  3.770721746686183*^9}, {3.771082940702034*^9, 3.7710829414310856`*^9}},
 FontSize->18,ExpressionUUID->"ff699e9e-ba98-4d91-bec1-a5ce70272f1c"],

Cell[TextData[StyleBox["Let\[CloseCurlyQuote]s simulate the logic gate XOR \
with 2 inputs in SystemModeler, a software that models circuits behaviors \
amongst other things. ",
 FontSize->18]], "Text",
 CellChangeTimes->{
  3.7710829479113383`*^9, 3.771085007073473*^9, {3.7710851677613697`*^9, 
   3.771085171092354*^9}, {3.771101899188077*^9, 
   3.7711019005872617`*^9}},ExpressionUUID->"192c1272-5592-4fef-a405-\
fe6615c6e6d8"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"WebImageSearch", "[", 
      RowBox[{"#", ",", "\"\<Images\>\"", ",", 
       RowBox[{"Method", "\[Rule]", "\"\<Google\>\""}]}], "]"}], "&"}], "[", 
    "\"\<xor gate\>\"", "]"}], "[", 
   RowBox[{"[", "5", "]"}], "]"}],
  FontSize->16]], "Input",
 CellChangeTimes->{{3.7707217485841103`*^9, 3.770721750960826*^9}, {
  3.770721794341843*^9, 3.7707217996366916`*^9}, {3.7707219886086054`*^9, 
  3.7707220021394033`*^9}, {3.770722033356003*^9, 3.7707220430660143`*^9}, {
  3.770722095569682*^9, 3.7707221358210974`*^9}},
 FontSize->18,
 CellLabel->"In[40]:=",ExpressionUUID->"d61a146d-e7b3-4fcb-8a4f-4da363f123a3"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnXuwVdV9xwEfXK/xAQlIUCIxBi0mmmbuTGMmo+2QGW2jTceYNCPGIaYY
WlEC3DFSwwiJE6dSlGCo6EiahAnhoVDACHEYJklJKQEDyCMiD8FHILaaJpmO
08lMds9ncX8n+x7OuXfvc9c+e+19vn98vN5zzj17ncf68Ftr/dZvvff2aTfd
MWTQoEEzOyr/uenzX/6LGTM+P+tT51d++fTdM//+i3dP/ru/vLt78hcnz/jI
7adVbny1whWDBw06vfIziiIhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
Igh+uXNNJIQQvvHlqDXfejAafv450dmdHVHnWUII4YezOoZG55zdGV3zkQ97
8dXSR78SDRkyJHryn78crXzygWjl43OFEGLAEAf91YSPRe8be6E3V513ztnR
/x7e5C1WE0KI6A8vRnNnfsGrq4jT/mvPOi/PJ4QQxn133yZXCSGCR64SQhQB
uUoIUQTkKiFEEZCrhBBFQK4SQhQBuUoIUQTkKiFEEZCrhBBFQK4SQhQBuUoI
UQTkKiFEEZCrhBBFQK4qDyd2rz3lff+Xr8+MJt50fTR54o2FYP79d7n6Z64G
2uNzoxc2fVvfJeGQq8rBj55+NLpw1LtcX4/f/uK/L3O3Dxo0qJBQu/GKy94b
3Tt1YrTzuW/pe9XGyFXZ8+CsKdH4yy+Pvr3gHzN7Xy6+aJTr26eddpqroVi9
73+2R4d/tiq6dOxFvfr/6NGjoxEjRgQH9WobeYvX9jfX/3n007WP6fvVhshV
2dN15Qei4cPf6WqwZnWNVU98NTq90pfp09S83/ejpRGeil7/iftJfHXBiGHV
Pj979uxo565d0ZYtW4Ji3bp10dKlSx2LFi2KJk+e7Dwfd9bgwYPduBYH5/3Z
itYhV2XLyse/Fr3v4rFubHbx6IsyHccwN2X9+UNXXHqylvQb/3HSV797PmKc
OHToUHf/sGHDorVr10b79++Pdu7cGQwv7NkT7dm710HbDhw4ED3//PPRE088
EV17zbXOU/YacTKvOe/PWLQGuSpbPn3DBDduwRsfHD/e1YzO8nq3f/YT1b58
56RPOUc5V8Hbu6JePrvqKucBHLFjx45goX14a+++fdF3vv2v0UevvrpXnMX7
+/oL+s6VHbkqO45sXRmNvmDUyXmq3++Npk++JWI8mOU1cSJz0TZWem75I38c
C/aMBxk/WT+feudUF7vk7aMk4FWctXv37mjunDluXG2vg/k64sa8P3ORHXJV
djDuY/z3u5d+GHEOx/YfLolGDB+ZbZ+qxFFch/PU6MN46/+ObY6it7ZF0Ykt
zlVv7vtBZHPxnZ2d0Zo1a9zYK28XpYmz8OuGDRvcuNB8xWvOcv1C5ItclR0T
PvZnbtyHs4D1QOKs7im39Pv+4LdmebsSPzH+sz7Mdbktfj/5Szb38/EJE9z4
irglbw+lgTkt1geYf4+PCXm9eX/2wj9yVTb85/rF0UWj3u3OicVZ9pMxYF/j
wOl3fCZ6z4UXDAhipnhOFeuD3Ba/H8xV/Fzy5BI3vsrbP83GWA888EB05pln
Vl/zrLtubfvvYNmQq7Lhy/9wWzTukktOeR8Y/w0/b1i0/jv/VPc9Yp44j5xL
5qsZBxYttgLafPDgQZfjwPfPXlPW6xiitchV2fAn739/dPcX/rbu+0BcNekz
N9a9j7EZa3lemPjX1fiK/E/WJLktfj+5DfHYirFg3u5pFuIrXkPcV7V5/KK4
yFX+WfHY3Mr7cH7DOXT+vWd8+Nrzq7N9n/7wopuXci6q8N1vfMXN8bs8Bqj8
P/lep/XkkF5/3XWFHAfW+opcrLiv+Dzy/k6IgSNX+efgT7/f7z6QVq6vW2xF
DFXvfubRbE3w2WefLdSaYCNfLVy4MDrjjNPd63pH51kR84d5fy/EwJCryg/r
jjbOO8WhlfiKegYWg3R3dxcm36ovmL9iH5G9Lr7jv9r3A30vC4xcVX7i4zzW
Gd34L3Y/eQzV2Ouqq1weQBHn2OPQfpw78ZZbqr7Kcj+myB65qj340w9c5vrr
5ZdefOpnU3EXtaO4n3V/9gkWfRwItsewq6tLc+0lQK5qD+770m3V9cB6+6fJ
obD+zNipDONAIF+UOTjbj3N2Z8fJGhQBfCYi5XdYrmoLmMs3F7naBDXjQD4z
6hZw/4033FD49cA4ePfBBx+svn7ycvP+PER65Kr2wepXsXe53v30Ye4fO3Zs
tH379uDrLyTF9jyTk9HL1wF8JiI5clX7YC6qm7tQibOYd+f+jo6OaP369a6e
Qd6e8QXzb88991x1LIi3f7lzjb6nBUKuah9sPzNjvV/trvmMKq4iV9TijsWP
Le4zh52Yi/tZM6x3H/NEta6z24lxjHr7euxxtfDYgcR6jAXjeQx33PrJoL+n
h376/cTto241+yRY6wReGzUn+uqL1CyqJe/X3BdyVftgdfbIs6o3v07uVXUv
3Zw5DefX8QUxCj7jZ9xJ3Ldt2za312XlypVVt+AZbmfPHjWzqI1wzz33RMuW
LXN/b86z5+bva+Gx1Dludo3S1gXJy+A1kisa6nkTfFbsG220F8tgTYQ9W9Sc
ZS/prLsmRbO/dLsb57MflZpE9ca7/N3Yi97jHmPwWH7y93m//nrIVe1DfK2v
3t7poz97qlrjGJc0dFXFK5s2bXJ10NnzjIPMScRK5JOef/Y7ogUPP9JTk3iP
q5HFY9/9rpEuh4A6NNTL4fdP33xz9OMf/9g9777K31MzgX5K34lDf8QzeKtZ
X9E+HGs1JujfeX8u9WAvgTmkUbzD/ineJ+JlV3ueetW2f+qtbS73lfo41Exz
NWJjf/v0k193txNLU++MvP4frVvsPMX+sBBzO+Sq9iEeN7m9gTVrgdTgs/l3
/NHXWiD3se9u2LnnRtOnT3e/M04jlsI/kyZNqo4R8RCOwU2c+cCYj1gKx+Gl
kcPf6a7HY/f3uIo6XzgJJ5JzsHHjRhdX4Tmex7mtifEg16adVqOPHI7Q9t/w
OfH6v/fN+92/B43iIjzl7qPuK7UUX/+Jq5XtaitSA7bHXdSGxUuurhePrYCr
Ro0YdTJ/4+1dJ/++53nwZIgOl6vaB76X9M1qTmSNq/ie29lcSfIWiIGIv3DN
8uXLqw7ASxYn8Ry4DH/hMTvrweq8sxdm1r33un6Hm44cOeJcxd7udWvXVWsW
81yHDx92uQd2vWZjK6vbbrn8ofXLaq3rE1tcLQzcUfsYfM3jnF+o94qbKj8Z
M1b9Fauzz9wVbnJnw1Z+N1dxvpFzFY/vqc3Ptb/4uZuCek9ArmofmKv16So7
s8vGdN0zZjqPEG/xt/iI2In7eb56c/V4aPPmzW6Mh/eOHj1adRVrkbgNJ4F5
jJiDs7maXaekXbTFYitqEbo+/Pu9QXxvqSfk5owq7bGxWvz8aeIt5prcOdt2
TlGPq/Caq9sVPxMEl1VgHdj5rfK8zMXzPhJrfe+Jr0XLFs11PmOei+d4ZUfG
NUCaQK5qHw56dpXFKIzNcA2emjZtWtVJuIx5cuaZmMOq93y2BshcFtckzjJX
MQ/Pfp+nnnoqWr16tfudmI3xJTHZQPYs0kbiOIutPtp1ZTRr5ufd+c5Z01eN
ZYt3+KxwCp8J7nJ/0zMPRezkcuRiNfQtLmIN0H221P6JjQ25j9tdvFbxG2NI
XEV8ZrVq+X+ujatcvBXAdzaOXNU+ZOEq4h3mkuhPFlMRC5FLStxD/IN3yBVo
5CogxiFXE1cxzmPMGF+jAubG6E/4b6D7Fd0YtOLS2nNSWwE5I40+IzyEL3AR
/w/8O0BM5OahKp7BJc5dlbEbuSfESgb7Prmf2hrkMLjPuef8IuateB/5nHEV
12FuzGrxczvfEXyX9XlLzSBXtQ++XUVss2vXTvdY4h2bq2JciAdsvZC+RrxV
7/l4Dh6Pg6iJEB/nsY5ITMXcFHNd8+bNc89l8/ADiats/Dp69OjqHDsOaQX4
pN7nw3ofr4/5MzzDnBHrd3iL98OtAVScg7fc51dx1es/X+3up+YrP93abCVG
5P95Hmpp9+UqN7a0OS+oPCePO+/c4cGtOchV7YNvV3E/eVjEO+QBcAYWMVR1
DbBnnIbDgDir1i88jrVBYjLiqb7mqw4dOuR8Rn90PhxgXihz+hbrEKf88sBG
1/ezhFqwbp6pzufDnDj+qJejgGOcdyouwUuuPrbNnzNnxVivAjGRxVzudpvP
qjyWtV/eO343V1XXAW0cWRl30g7myELb4y1XtQ9p5tb7q2fscqZWP+2cgj9Y
A7T+z5oe7rKzks1nxEmM8fAO3rI1Pq5leQh2Jg3Pu/rp1b3Gejx+ypQpLvaw
dcamYqqefFX2Pdp+m7w/GyBearQmSXzFOJvxms07uTFhbA3Q5tarc1s2tx47
w9bNc/WsA+IjcrTIq2JvO/DcxHAh5vTLVe0DOdqD+6i1wJyFnXHaV1xFX9+6
daubD+ffadbxXF5BT5xDDEW/YvznXLN9h3s+5qBmzpjhxnPETOQNcDt9g3ku
vLavJ1YjzmL8V+sqxpI8D3Nkza4D1u61CeG8G/IxWdtrVBsej7BGwfwSa3SW
f1W73ofr3L9DNWdtM9YjjmL9j9iJuIpYjc8pPifIvxnKWxd5wzyE9c9VT3z1
lM+Iscl555zt7mcc18hV+IPxGp5ibS7+OOKrFStWuHkr1v4shsJt7K2hb9An
LRcdr+Es/s7GhI/Mf9jlOZBfFfcR982fP9/1pwULFjQ1v147TxVKTAX9nRUS
32uNT3CXW6+L+Yq+5875jnmK35nDqo3ZeL7jO/+tF3m/B30hV7UP8b3J9c6m
4N9eGyMS//RVbw/3uLox9fYuV27jPpxATGWxGK5h7MZcOXNUxFa2Tzn+9/wt
Y7R617WcLa7fbEyFM+PzVHl/Ls3CvBW+59+gat55Dcw5Mbbk35UQc6bSIFe1
D4x1rE5xvfnb+H7Bhx56qM/5Kss772tOqN46HbfbXHm9ufb+ntvua2YNkGuy
X+fcc891r5Hxbt6fyUBhrZB5J7y19Jtz3N4+xvrMR3EfY0Xm29nrmXdbB4pc
1T7wfW7YR3tyBa0OA/mdZai5Hncc7mV+zHxMnnben4kPiKuYM2d8bWNr5p5w
FPnoebfPF3JV+8C5EPTRevvLwFw2YsSIAa2zhYidGWieYv4m788jC8hLCS3X
wBdyVXvAHCxjP/op+zxq1wDBXMa8dr0aeEWFsSZzZ2PGjKmOgUOtWyUaI1e1
B3ZWfKPaVfEzBPuqXVU06o397rvrc/p+FhC5KhuYu2aPQi15rQuzXm170U75
fGJzVWC5Tnl7xgeWW2qvrevK+vtbRPjIVdnAPlLWZ+J5duTDMO+ZR81FO0+r
0dnDzN9wP3lHA92/EgrEU6tWraqu+3We1aGxX4GRq7KB/VrkLDLPSX1Z4iz+
n9vZF1ovvykr4nlVjAVr56poF7XHrR5oGcZ/zLfhXP6N0Dlb5UCuygac5Opq
kDtMnl5PPVnqBLPXoZWxlZ211Wj8x1x7mcZ/rsZDJS60Wnpw+2c/0fbfyaIj
V2UDrnLr4uwpJY4hj/jtXW7OijPq6s1vZwG5gTZn7s4HiNe+7ImvLhz1Lnf/
uHHjTvb1Ao//8BR58PG5dJ2zXA7kqmxgvoq5KfZwEEMB5yExLuRno7+jFgL7
U+vNy6cFT9mcOvmdjIHszBK7/74v3Vbt05yBVeTxn3mKcay9JvIwXn9B38cy
IFdlA3UZqWtC3qXBv+/s2yXHmFpG9f6O+7KqR2l7/epR9PxPcqiYo4p76j0X
XhBkLV7RHHJVNth8VbXGUA/MY7MXwtURqvN3ljveatjPW9SYiliK/c7xcR+e
Kmv+drsiV2VDL1fFzxp5e5cbA7r6jHX+jvEfa3XsVWsWziWZPPHGXvtJvrN4
TvV+/p+x6ek981jVPIUCxlT4lTpZ1NKy18t+R3mqfMhV2VCdW7ezcO38tcrv
5Dg12pPnhbe2RZYvRS5C9TwpO5P3Dy+6uo/VWnN9nAcfKsz/02bWLa0WFXzo
iktPnkEcwHdA+EWuygZcxdw6cQy1OpY+er/7f8Z45Ii6+owZXZu5Muu7/H+v
2pGV/1/5+Nw/5nF3dVXX+PP2TxJszwxjPuoZW15YX3muohzIVdnAGMvOXYvD
upyrjZbRdcmFYM3P1sCooR4/H4CYw86BJ4+besK1te5CxM4fBWq5s55qjuL1
sp6Z92cuskWuyhZcYWR9rbiHiDdcbnzsrBPOFbCxoYu5uruDHvvhJ9b37Cwb
ah1zvnN8TQAfZ+l+EQ5yVXlgX6714V5nmbAG+dY2l7tt97Nmxll8eCAkGN8Z
dm4ze4+ZO7d40eq6TL/jM/qetRFyVTmwfTRuT98NE/54fnhP3vysu26t3k/M
Rd0Xcj+nT58eBNR35yf5UcROwPkStu+4Ot6rwDiaPNa833PRWuSqcmA5pKfU
u6w4y+qsFxn2MvIayenI+70W+SBXlQf28dSeAWB1qchZZ19g6Fxx2XurMKZl
3Mr6aaM8f9E+yFXlhj0m1OAuCnm/XyJc5CohRBGQq4QQRUCuEkIUAblKCFEE
5CohRBGQq/zzm2M7ol8f+7koAXyWeX+fxEnkKv+8cuQX0YGDL0cvHTwiCgyf
4dHDB9r6uxwScpV/XjuyPzp46HB06NAhUWD4DF85/GJbf5dDQq7yj1xVDuSq
sJCr/NNqV1Ev4fjx4+5n3v07xPbIVeVArvJPK12FD6jpSS1ffubtB65PrSna
Q/2po0eP5u4cuaocyFX+aaWrXnvttWj106vd/uS1a9e63/Ps36+++qqrOUV7
li9fnnt75KryIFf5pxlXEY8Qgxw+nO7vnKtWr3Z1FNatW9eUG+zacXy4asWK
Fanbw+vn+vwd5BmXyVVhIVf5J62r6J/UwWTMdPDgwVS+MldRT6VZV3FNxo9b
t251UDeY58E73NcqV/G3PJ42rFq1KlqzZo1rF3NfeThLrgoLuco/aVyFl+ij
1BQeNmyYO//qxIkTLXEV1yamuv6669y5y9QLBdpBezZv3uzalrWr8CE+4nrU
A6U+Ma+HmsXUBaWGKS5P2xaeF8e98cYb7mda78pVYSFX+SeNq+h/nM3e2dnp
4HyWNGPBgbgKT3Gd0ReMisaMGRM99dRTDnyJIzh3jzMa0sQ0zbiKxzz77LPO
kThz/vz57jl4PZMmTTpZ7/Tqq1099jRt4bHEqrNnz3bPn9p1clVQyFX+SeMq
/s2fde+9zg3Tpk1z/fKZZ55J7BwfrsJT1DanLcQ3v/3tb925Vu6MiQcfTBXn
pXUVbSDeGTdunPMU5z+/+eab1fEg/49reD7eH9rC47mP/691Ou0HHsPrWPLk
kuo8P7+nGdfKVWEhV/knqats/Ecsde0117p5GuuTeKPVriIO4Tb8gGdoy0MP
PZSpq/AK+Q08nvNquHZtbATjL7/cxV3kQ/A3OJSzTDkv0F4HDuJ8CdzGYx55
5JHq2fG8v5w7wbWSvkdyVVjIVf5J6ir69aZNm6rxC/0UZ4wdO7Y6l9RKV9G/
+ftt27a585hpB3PbWY4BcfLEW25x65jEVPXGaTyme8ZM95y8VuIjc5C1z84P
w2fEaBaP4TgeZ/8eML6Uq4qJXOWfpK6iD3LuFZ4hpqIPElukyZXy4apxl1wS
dXR0uH5NP8cbzFUxj0Yb08xJp3UV9+Od4cPf2XA+irhu0aJF7jn5yfvEHDzz
e7WuMu/SDnwVHwPye5o5drkqLOQq/yRxleUR4Qf6quUI4AfW4hjfJBkH+nAV
8RNuYk6dWIQ4h7kj4pDt27dnFlfZGJgYjuvhkHqxJPGezZ8ldRXX5e/McZzZ
zO9JX4dcFR5ylX+SuIq+tHHjRhfDdJ7V4XxBPwP6FvFNo77r21V4iv5N3IEf
+UlukzsX9eabXR9Pui6ZNq4iZiI/Aj8z9qznRVt/iI8B5ar2Q67yTxJX0f+Y
B6YfceawxTSMAem73E4+ZJIxlM+5dX4HHNJfvOPLVTbuxSu1sSRt4TloC2ul
5Kni0qqrdu2quorHy1XlRa7yT3+usvEf80SMAemfQL8lZrC+Tg5kf+NAn66y
PS3Wp4m3iO/S5HuldRXPzTgTD3Etcj4td9PmnMw3jIt5j4B4j1xRm1PjNnKp
8Bdeq3XVsmXL3OPS7O2Wq8JCrvJPf66iHzF3Th9ibj3uo6rHKv125MiRru/2
NV/kawyIM4lZGFNt2LDB5bLTvnnz5qWKR5rJBeX5Fy5c6P4GZ5KPSltwGPGm
3W7vRfzxOIs2s4bI/BpjanMV8Fzm/T179zqSeleuCgu5yj/9uYoYgBiBuIB+
XbtOH5+fWbp0aZ/93cs6YMWLXIvYBtjjgr8Ym/F8afYnNrsf0ObPbb6O+Mj2
2uAj3GXvE+0GbuexPIZ2k+OOY/Euj7U1PxzG41jrJF8sqXvlqrCQq/zTn6vo
Z8yrE1tZLFV7PzmPzFeRy5BVXGXXJo5iPoc8Sdb42Y9CDJNmTn2grjJfcV3y
C8iDYvzGGK/e3mXLEV25cqV7rL12Hr9+/fpej+M5eV0LFizo9/2Uq8JFrvJP
krl120PSyAVWF6W/fuWjzgJtsb0pYDFJ2ucZqKvir5vY09rSl2ftsfY4m+eq
fU6ei8eleV1yVVjIVf5pea29AbrKJwN1VUjIVWEhV/nnzeMvR8dP/Kq6ZpUl
rBsyhsNV7Nfh91ZctxGs2zHPjatwZ97tSUIjn8pVYSFX+Ye5H/bNtgLmdMjT
Yv2ru7vb/d6qazdqj60LsAc77/YkgfWLerkMclVYyFX+ueYjH46GDh3q1p1a
AetluIGfrbpmX/DaQ2pPf21lnZCxa+3coVwVFnKVf36xe1v0s+07XJ26rGG9
kDiOMSD5jvzeiuv21R7LaWLtjXymPNvTH+RwkfuuMWD4yFX+OX7sQPTy0WOn
nLeQBcy3kPuAq8g1sLWuvLBaxLgKZ1kOeujIVeEjV/kn7TqgrbM3kyeQxTrg
QNqTxzqgtdf32YhyVVjIVf5JUxeUOIRxE2tn5Ganzb/06SprD7U2aY+dIZPG
Aa10lcVx7AOkvdRZSLs/Wa4qDnKVf5LWr6Ifs9+NfX+4hnpzrKHVm+fN2lXW
HuqTsr+G56PGJmuM8ToGobjK9s+wr4b9NayDUleH3HtfvpKrwkKu8k8SVzGv
ZPty2VdLjpSd2cI+vKQ1zn25ius9/PDD7vrU2qM97Fm0/dVJ+38rXGVetf2A
+JXXTs1CnMX74eO6clVYyFX+6c9VxASMr3ivqMNkNU2sZhTxDOtnSeaLfLiK
6zDuI66jv8fzOlnPj9e0C8FV8foJeJR8U95DxtDEWLRZriofcpV/+nNVvCYv
Py2Gor9Z3Tn27yaJZXy4iuuQD8l12QdsNWr4yX5fyz9I0p5WuIp2EYta/Srb
/8ft1CkkZ4o5rGb3NMpVYSJX+ac/V9Gn7CzAeE0YXICj0pzL58NVXMfO4Is/
Bz/5ndu5P0n991bFVcR/1CxlPt3m0uysDa5N/sZAry1XhYVc5Z8k9auYE6JP
xWuMx2vwsV8m67MhauMUrhs/F56fliuV9KyKrF0Vr7lFnar4vH88LiUvVq4q
F3KVf5LEVf25ivXAEFxl5xdOvXNqIVxl6xXEp3JVuZCr/JPEVXYuRO0Y0OaN
WJNr1XxVX2NAm8PGASG4ytrVaAxo7yuO7av2lVxVPOQq/ySZW7dz0fkZn1s3
Z7TiLNN4exrNrTNvliZOafXcevysZm5nXZW1QPJrNbdeLuQq/6TJWWB93c6x
oc8xriGnMek5Vz5zFohTyJnAnbQHh/F7kjMqWumqeLzHvB45C+RXMJ5mDdDO
NBzodeSqsJCr/JM2F5QcUGqr27mAaXKvfeWCcj3OTbBcUNpjuZbUeAotF5Tr
2PvF+0hciOeJqeJ5DHJVeZCr/JNmjw1jvtEXjHK1noinOEsqTUzge48N62js
sbH2cOZWmrNsWrnHhrkqvIqfiKeIARk7a49NOZGr/JN27zLjK2opMe5L28+y
2Lts7bG9wK04c6tZX/H85KvTXvud91GuKh9ylX+aqQmTZn9wVq4yaEez7cmr
JgykPR9MrioWcpV/dI6NzrER/pGr/CNXyVXCP3KVf+QquUr4R67yj1wlVwn/
yFX+kavkKuEfuco/cpVcJfwjV/knjavICyCHyfa0pM0TyCpngefBO2lzlfLK
WeC9sxrsclU5kav8k8RV9CnLCeIsUvLX2Vtjtyftc75zQdn7Qw4o9Z+oV5d2
/2+rc0FxPOeR8h5u3bp1wPuV5apwkav8k8RV9ClqAbB3mfMM2NdC/6bWSZoa
AT732OCoRYsWReMuucS1hf12SerA5OEqYj/2f7N3mT02XI/9jEnP1JCriodc
5Z/+XGV7WXABnqLeCn3M6rKkqRPgy1U4Zv369e4cCNtjd/111wXrKtpFPUJq
Q1jdQrmq3MhV/unPVfF6m9Rhop4JcQI/8RR1mRjPJKkV4DOu4uwc6kHxHJxp
E7KriDupAUMtG7ueXFVu5Cr/JKm3bjXsmBeyGIrbGYOlqQvje74K1zAW5Nyv
kF1l83q0j9cvV5Ufuco/SWoYW33zeK2leA055tpbdY5NHOK7Iriq9vXLVeVH
rvJPkrjK6tixhhU/G8LOuOqeMbNlZ0PIVXJVEZCr/JMkrrLz4OPr7K7fPb1a
cZVcJeogV/kniavqnRtTe2ZEq+er5Cq5KmTkKv/05yr6F/XMrVY463/MFfOz
3jyWXCVXCbkqC/pzVfw8zjFjxrh1d85iYTxIXhP5oUlrnMtVclW7IFf5J0ne
On1szZo17v3CV8y1k9NE/nqac1iychVnQ9h5YCG7inGyxaica5G2vXJVcZCr
/JN07zL9bOPGjS7vmr01U6ZMcbFVmvMNfLuKWI5rs3eFs7bSnl3ValexLkH+
Ku8dr9/HWVtyVZjIVf5JU2eBvsW4xUhbKyCrmjB4tJkzYVrtKssJbea9k6uK
hVzlH9WvUv0q4R+5yj9ylVwl/CNX+UeukquEf+Qq/8hVcpXwj1zlH7lKrhL+
kav8I1fJVcI/cpV/5Cq5SvhHrvJPGleRe0l/Jj+omXNjfLuKNlhulf0M2VV2
DpDOsSk/cpV/0pxjQx+j3jo1YprJE/flKtrD327evNnl0X9w/HhXD559QElr
v7fSVdZe3sOFCxe6NlNPR3nr5UWu8k/Sc2zYT/PxCROcZ+xMiLR7b325ir/D
MexZZn8ie1bYW33GGaf3qrMciqu4Dm7CqVwLqAut/YDlRa7yT5q9y+wP5mw7
6iukOb/Gp6sYh+LOrq6uaOTIkdHu3btd3Qf2MI8dO9ZBHJPknNVWuYr3CTfx
nlmNetVZKDdylX+SzlfR/+lzOCFPV/E3zzzzjOvv99xzT696WlYTkDrwSZ67
1fNVtNHaLleVG7nKP2nm1olnOJMzT1fFz9XBL9YGnmvlypWp6q200lV2zqLq
V7UHcpV/iuYqHDT1zqmuv3Nuoc1Px88xnDZtWnCuir9+uar8yFX+KaKr7KwK
1gHjruJ3bmeuXa4SeSJX+adorqJ/U1uP/r5hw4bqc8TnsTiPXa4SeSJX+ado
ruKatpa25Mklvc6BXvzYYnc7P5O0Ta4SWSFX+adorrJcL3KpaANra9zGT37n
9m3btlXPMZSrRB7IVf5pxlWdnZ25uQq4LrnfFlvhHDurkLms0HJB5ar2Q67y
T9HiKmvH/v373Tlb9HvO1Bk8eLDbZ0P+V5KYSq4SWSJX+Sft3mVcsHbtWnfW
VpLc8CxcZb7i+uxPnD9/vsv/5LaknsrDVbT3hT173H6b7du3p37/5KriIFf5
p5maMLYPt9m4wueZW1b3Iel5qnm6ynzV7PsnVxUHuco/ql+l+lXCP3KVf+Qq
uUr4R67yj1wlVwn/yFX+kavkKuEfuco/cpVcJfwjV/lHrpKrhH/kKv804yrL
bQrFVc22Jw9X0Vau6zO3Sq4KD7nKP2nz1slV37tvn8sbT5vP5NtV8fZAyK6y
tu7YscPl0fL+pc37l6uKg1zln6Suoq+Ra81+O2qaU+8urz021h72+1Crivak
2QfYalfZ+Vq0kf1JQ4YMcW1mD6MvX8lVYSFX+Sfp2RC4hX7GuTF2jk1errIa
oHaODXsB2RuY9lyYVrjKcuvZq2jn11Bni3M2aDf7bXxcV64KC7nKP0nP3GLc
Mm/ePDeGCWHvMnVh6Pd79u6NRowYEayreM5Vq1ZVawBy5g7tZF8g7yPOkqvK
h1zlnzRjQPoYZ1zl7SpgbtrcRHwVqqto0+TJk10Mhe+t5jK3E2sNHTrU+X+g
+wPlqrCQq/xTxJowcV9R9yFkV/GcH736ahf70VZb/6OtnBnGtRkTDvTaclVY
yFX+kauycxXtY76KM6HHX355r9wK2srZYFybs6LlqnIhV/lHrsrPVXPnzHHX
pgaXXFUu5Cr/yFX5jQGnT59+yjmHclU5kKv8I1e1bm59y5YtvebWPz5hgnsv
WRPU3Hq5kKv8I1dlH1dRX5lrzJwxw+UscOYOZ+2ceeaZTb2PclX4yFX+acZV
9DHW20NxFefqEKOE6Crmq7iO5YLOnj07Wrp0qZu/wvnxPAa5qjzIVf5J6yrG
K11dXdG0adNS9+2sXMV8EOOskPfY0E722BADdnR0uDbzHmiPTTmRq/zTTJ0F
9rZB2v6UVZ2FZtvT6r3LPD+uJza135tpt1wVPnKVf5pxla3Fh+KqZtuTV00Y
aKa9clVxkKv80+pae7Y3jjMG865th6s2btxYzcf0WaOl1chVYSFX+aeVrrI9
x93d3W4dzPcZec20h7143TNmunyCvNsjV5UHuco/rXSV+YGzR33XxWwW2wNt
Nabybo9cVQ7kKv+02lVCrmoH5Cr/yFXlQK4KC7nKP3JVOZCrwkKu8o9cVQ7k
qrCQq/wjV5UDuSos5Cr/yFXlQK4KC7nKP68c+UV04ODL0UsHD4sCw2d49PCB
tv4uh4Rc5Z/fHNsR/ffRXaIE/PrYz9v6uxwScpUQogjIVUKIIiBXCSGKgFwl
hCgCWbjqdy/90MvzCSGE4/d7o7kzv+DNVd/9xldc3aIPXXFp1HXlZUII4YkP
RMPPP8ebq+DOSZ+Kbv/sJ4QQwit33PrJaP79d3lzlRBCCCGEEEIIIYQQQggh
hBBCCCGEEEK0G/8PaX4WOg==
    "], {{0, 227}, {299, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{299, 227},
  PlotRange->{{0, 299}, {0, 227}}]], "Output",
 CellChangeTimes->{
  3.7707220062534065`*^9, 3.770722047852222*^9, {3.770722100027767*^9, 
   3.770722139937097*^9}},
 FontSize->18,
 CellLabel->"Out[40]=",ExpressionUUID->"ea9420cf-9d2d-4695-93b0-70f02677336d"]
}, Open  ]],

Cell[TextData[StyleBox["Here is the K-map of the XOR gate, rearranged from \
the truth table. ",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.771085177544614*^9, 3.7710851917080383`*^9}, {
  3.7710854475554657`*^9, 3.7710854493746243`*^9}, {3.771085552176588*^9, 
  3.7710855688703623`*^9}, {3.771090608477965*^9, 
  3.771090609484273*^9}},ExpressionUUID->"c771daf5-2fd8-40a9-a1ca-\
31261d0bebd4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{"Prepend", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"BooleanTable", "[", 
          RowBox[{
           RowBox[{"x", "\[Xor]", "y"}], ",", 
           RowBox[{"{", "x", "}"}], ",", 
           RowBox[{"{", "y", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<1\>\"", ",", "\"\<0\>\""}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<x/y\>\"", ",", "\"\<1\>\"", ",", "\"\<0\>\""}], "}"}]}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.770689268377796*^9, 3.770689276848157*^9}},
 FontSize->16,
 CellLabel->"In[9]:=",ExpressionUUID->"7d79e44d-e944-4291-bcef-d3d99bed7cac"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"x/y\"\>", "\<\"1\"\>", "\<\"0\"\>"},
    {"\<\"1\"\>", "False", "True"},
    {"\<\"0\"\>", "True", "False"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7706892777753253`*^9},
 FontSize->24,
 CellLabel->"Out[9]=",ExpressionUUID->"709d88a0-e975-4f23-993f-36db8249a51f"]
}, Open  ]],

Cell["\<\
Our system is an Or-gate with two ports each receiving a stepwise electrical \
signal.\
\>", "Text",
 CellChangeTimes->{{3.7710810892001066`*^9, 3.7710811782068963`*^9}},
 FontSize->18,ExpressionUUID->"15edef43-1bf9-4757-b022-b40446be74de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xorGateConnectedToDigitalgEntries", "=", 
   GraphicsBox[
    TagBox[
     TooltipBox[
      DynamicModuleBox[{WSM`Typeset`PackagePrivate`p = {
        InsetBox[
         GraphicsBox[{{}, {
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-35., 33.131}, {-30., 33.131}, {-30., 
                16.564999999999998`}, {14., 16.564999999999998`}}]]}, {{{1., 
              0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-35., -2.761}, {-30., -2.761}, {-30., 16.565}, {14., 
                16.565}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"=1\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {0., 60.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -70.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.14153846153846156`]}]}, 
                    PlotRange -> {{-50., 50.}, {-80., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -70.}, {0., -70.}, {100., 20.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {20., 16.565}], {{{0.1, 
                   0.}, {0., 0.1}}, {18., 14.9085}}], {{{1., 0.}, {0., 1.}}, {
                  0., 0.}}], {}}, "\"xorGate1\"", LabelStyle -> 
               "TextStyling"], Annotation[#, "xorGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "xorGate1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-45., 33.13}], {{{0.1, 0.}, {0., 
                   0.1}}, {-40.5, 29.817}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-45., -2.761}], {{{0.1, 0.}, {0., 
                   0.1}}, {-40.5, -2.4849}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse2\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse2", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse2"}]& ]}}, 
          PlotRange -> {{-49.8648, 31.16640000000001}, {-12.77279999999999, 
           43.11359999999999}}, PlotRangePadding -> 0, Frame -> None, 
          FrameTicks -> False, GridLines -> None, GridLinesStyle -> 
          RGBColor[0.9, 0.9, 0.9], Epilog -> {}, {
          Frame -> None, PlotRangePadding -> 0}], {18, 278.356425673074}, {
         Left, Top}, {334, 230.35642567307397`}], 
        InsetBox[
         BoxData[
          FormBox[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
              "], {{0, 24}, {24, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", 
            ImageSizeRaw -> {24, 24}, PlotRange -> {{0, 24}, {0, 24}}], 
           TraditionalForm]], 
         Offset[{6, -6}, 
          Scaled[{0, 1}]], 
         Scaled[{0, 1}], {24, 24}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {0, 0}, {0, 0}, {
         400, Automatic}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {400, 0}, {0, 0}, {
         296.356425673074, Automatic}, {0, 1}], {
         RGBColor[0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
         RectangleBox[
          Offset[{0, 0}, {0, 0}], 
          Offset[{0, 27}, {400, 0}], RoundingRadius -> 5], 
         RectangleBox[
          NCache[
           Offset[{0, 
             Rational[27, 2]}, {0, 0}], 
           Offset[{0, 13.5}, {0, 0}]], 
          Offset[{0, 27}, {400, 0}]]}, {
         RGBColor[0.8705882352941177, 0.8705882352941177, 0.8705882352941177], 
         LineBox[{
           Offset[{0, 27}, {0, 0}], 
           Offset[{0, 27}, {400, 0}]}]}, {
         EdgeForm[
          RGBColor[
          0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
         FaceForm[None], 
         RectangleBox[{
           Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 1}, {
          Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 1, 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
          RoundingRadius -> Offset[5]]}, {
         RGBColor[
         0.43137254901960786`, 0.43137254901960786`, 0.43137254901960786`], 
         InsetBox[
          FormBox[
           StyleBox[
           "xorgate", FontSize -> 9, FontFamily -> "Helvetica", StripOnInput -> 
            False], TraditionalForm], 
          Offset[{12, 12}, {0, 0}], {-1, 0}]}}, 
       WSM`Typeset`PackagePrivate`appearanceState = "Expanded", 
       WSM`Typeset`PackagePrivate`expandedeval = True, 
       WSM`Typeset`PackagePrivate`expandedprimitives = {
        InsetBox[
         GraphicsBox[{{}, {
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-35., 33.131}, {-30., 33.131}, {-30., 
                16.564999999999998`}, {14., 16.564999999999998`}}]]}, {{{1., 
              0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-35., -2.761}, {-30., -2.761}, {-30., 16.565}, {14., 
                16.565}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"=1\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {0., 60.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -70.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.14153846153846156`]}]}, 
                    PlotRange -> {{-50., 50.}, {-80., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -70.}, {0., -70.}, {100., 20.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {20., 16.565}], {{{0.1, 
                   0.}, {0., 0.1}}, {18., 14.9085}}], {{{1., 0.}, {0., 1.}}, {
                  0., 0.}}], {}}, "\"xorGate1\"", LabelStyle -> 
               "TextStyling"], Annotation[#, "xorGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "xorGate1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-45., 33.13}], {{{0.1, 0.}, {0., 
                   0.1}}, {-40.5, 29.817}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-45., -2.761}], {{{0.1, 0.}, {0., 
                   0.1}}, {-40.5, -2.4849}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse2\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse2", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse2"}]& ]}}, 
          PlotRange -> {{-49.8648, 31.16640000000001}, {-12.77279999999999, 
           43.11359999999999}}, PlotRangePadding -> 0, Frame -> None, 
          FrameTicks -> False, GridLines -> None, GridLinesStyle -> 
          RGBColor[0.9, 0.9, 0.9], Epilog -> {}, {
          Frame -> None, PlotRangePadding -> 0}], {18, 278.356425673074}, {
         Left, Top}, {334, 230.35642567307397`}], 
        InsetBox[
         BoxData[
          FormBox[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
              "], {{0, 24}, {24, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", 
            ImageSizeRaw -> {24, 24}, PlotRange -> {{0, 24}, {0, 24}}], 
           TraditionalForm]], 
         Offset[{6, -6}, 
          Scaled[{0, 1}]], 
         Scaled[{0, 1}], {24, 24}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {0, 0}, {0, 0}, {
         400, Automatic}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {400, 0}, {0, 0}, {
         296.356425673074, Automatic}, {0, 1}], {
         RGBColor[0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
         RectangleBox[
          Offset[{0, 0}, {0, 0}], 
          Offset[{0, 27}, {400, 0}], RoundingRadius -> 5], 
         RectangleBox[
          NCache[
           Offset[{0, 
             Rational[27, 2]}, {0, 0}], 
           Offset[{0, 13.5}, {0, 0}]], 
          Offset[{0, 27}, {400, 0}]]}, {
         RGBColor[0.8705882352941177, 0.8705882352941177, 0.8705882352941177], 
         LineBox[{
           Offset[{0, 27}, {0, 0}], 
           Offset[{0, 27}, {400, 0}]}]}, {
         EdgeForm[
          RGBColor[
          0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
         FaceForm[None], 
         RectangleBox[{
           Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 1}, {
          Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 1, 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
          RoundingRadius -> Offset[5]]}, {
         RGBColor[
         0.43137254901960786`, 0.43137254901960786`, 0.43137254901960786`], 
         InsetBox[
          FormBox[
           StyleBox[
           "xorgate", FontSize -> 9, FontFamily -> "Helvetica", StripOnInput -> 
            False], TraditionalForm], 
          Offset[{12, 12}, {0, 0}], {-1, 0}]}}, 
       WSM`Typeset`PackagePrivate`expandedopt = {
       PlotRange -> {{0, 400}, {0, 296.356425673074}}, 
        ImageSize -> {400, 296.356425673074}, PlotRangePadding -> 0}, 
       WSM`Typeset`PackagePrivate`expandedsize = {410, 306.356425673074}, 
       WSM`Typeset`PackagePrivate`expandedrange = {{0, 400}, {
        0, 296.356425673074}}}, 
       DynamicWrapperBox[
        DynamicBox[{WSM`Typeset`PackagePrivate`p, 
          Which[
           And[
           "normal" === "normal", WSM`Typeset`PackagePrivate`appearanceState === 
            "Minimal"], 
           InsetBox[
            BoxData[
             FormBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (
                If[WSM`Typeset`PackagePrivate`expandedeval === False, If[
                    TrueQ[WSMLink`Private`$WSMLinkIsLoaded], 
                    WSM`Typeset`PackagePrivate`appearanceState = "Eval"; 
                    Module[{
                    WSM`Typeset`PackagePrivate`cellobj$, 
                    WSM`Typeset`PackagePrivate`cellEditDup$}, 
                    If[
                    MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["f21a3bdf-410e-4603-a6bb-525a3d47dc62"]}]]], 
                    WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                    WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = 
                    Dynamic[
                    WSM`Typeset`PackagePrivate`expandedsize, 
                    TrackedSymbols :> {
                    WSM`Typeset`PackagePrivate`expandedeval}]; 
                    CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = 
                    Dynamic[
                    WSM`Typeset`PackagePrivate`expandedrange, 
                    TrackedSymbols :> {
                    WSM`Typeset`PackagePrivate`expandedeval}]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null]; Null, 
                  WSM`Typeset`PackagePrivate`appearanceState = "Expanded"; 
                  Module[{
                    WSM`Typeset`PackagePrivate`cellobj$, 
                    WSM`Typeset`PackagePrivate`cellEditDup$}, 
                    If[
                    MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["f21a3bdf-410e-4603-a6bb-525a3d47dc62"]}]]], 
                    WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                    WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = 
                    WSM`Typeset`PackagePrivate`expandedsize; 
                    CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = 
                    WSM`Typeset`PackagePrivate`expandedrange; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null]; Null), Appearance -> None, 
               ContentPadding -> False, ImageSize -> {Automatic, Automatic}, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              TraditionalForm]], 
            Offset[{6, -6}, 
             Scaled[{0, 1}]], 
            Scaled[{0, 1}]], 
           And[
           "normal" === "normal", WSM`Typeset`PackagePrivate`appearanceState === 
            "Expanded"], 
           InsetBox[
            BoxData[
             FormBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (
                WSM`Typeset`PackagePrivate`appearanceState = "Minimal"; 
                Module[{
                  WSM`Typeset`PackagePrivate`cellobj$, 
                   WSM`Typeset`PackagePrivate`cellEditDup$}, 
                  If[
                   MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["f21a3bdf-410e-4603-a6bb-525a3d47dc62"]}]]], 
                   WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                   WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                   If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; 
                   CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = {99, 93}; 
                   CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = {{-10, 89}, {-26, 67}}; 
                   If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null), Appearance -> None, ContentPadding -> 
               False, ImageSize -> {Automatic, Automatic}, Evaluator -> 
               Automatic, Method -> "Preemptive"], TraditionalForm]], 
            Offset[{10, -10}, 
             Scaled[{0, 1}]]], True, {}]},
         ImageSizeCache->{{-1.4142135623731065`, 
          370.4142135623731}, {-141.24822335119518`, 135.16340779866715`}},
         TrackedSymbols:>{WSM`Typeset`PackagePrivate`p}], 
        Which[WSM`Typeset`PackagePrivate`appearanceState === "Minimal", 
          WSM`Typeset`PackagePrivate`p = {
             InsetBox[
              BoxData[
               FormBox[
                GraphicsBox[
                 TagBox[
                  RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UNASiP2BGMT+PwpGwSgYysABNxhop1EZAH1Ut9UPKxrGns3s9QyIdQGi+Cr3
Ye/Z8BzX2HL35CYPoH9HgmfTOz3zZngNb89WrfMF+jEo0QXiWZ8wZyBZscp3
WHoWEptAVLLYB+hxYBQD2cAsPCw9OwJLYzyevbbt/unF137/+DOwTqUc4PTs
+oBSrtJ6hnog6tGYM8FyRZ/J8i7dxRAE9PtAO5wcQEzMHpl2cX3+gZfX30G4
lzfc2VZzbOCcTD4gI8+OenZIgFHPjnoWDgbEs3j6ocS3B4aEZyH13dVV/7Gi
Uc/iAqSmjSHtWVLBqGdpCkY9O8I9++PTz0enXlDX6lMLrkx1XLM8aRfdEEHP
ArsqQLQuf3+v8dKlsTuAvqaWZ8+vuDHVcfXg9CxQ2Y7641Tseg/aZAz044en
n6lr9aD1LC3AqGdpCkY9O+pZgmDwdwT+gx05Qrp4/6ndeYdPWSY3eQxCz1IF
OJA+ZTk8PEvklOWQ9iypU5ZD2rOkTlkOac8OidKYKoAYz9478hToQbiWYenZ
TLHM+Q7zgWia7bI+42VT7FatSNoFRHP8Nu3rPDPQDicH4PGsl5nX/f33gWhr
xaFFYVvOrbj56NQLCBqiE9Nk5NmhC0Y9O+rZYQBGPTvq2eEBKO8Uj4JRMApo
CgB5w5XL
                   "], {{0, 57}, {79, 0}}, {0, 255}, ColorFunction -> 
                   RGBColor], 
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                  Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                 ImageSizeRaw -> {79, 57}, PlotRange -> {{0, 79}, {0, 57}}], 
                TraditionalForm]], {0, 0}, {0, 0}, {79, 57}], {
              RGBColor[
              0.43137254901960786`, 0.43137254901960786`, 
               0.43137254901960786`], 
              InsetBox[
               FormBox[
                StyleBox[
                "\"xorgate\"", FontSize -> 9, FontFamily -> "Helvetica", 
                 StripOnInput -> False], TraditionalForm], 
               NCache[{
                 Rational[79, 2], 
                 Rational[-29, 2]}, {39.5, -14.5}], {0, 0}]}, {
              EdgeForm[
               RGBColor[
               0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
              FaceForm[None], 
              
              RectangleBox[{-10, -25}, {88, 67}, RoundingRadius -> 
               Offset[5]]}, 
             InsetBox[
              BoxData[
               FormBox[
                GraphicsBox[
                 TagBox[
                  RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
                   "], {{0, 24}, {24, 0}}, {0, 255}, ColorFunction -> 
                   RGBColor], 
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                  Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                 ImageSizeRaw -> {24, 24}, PlotRange -> {{0, 24}, {0, 24}}], 
                TraditionalForm]], 
              Offset[{6, -6}, 
               Scaled[{0, 1}]], 
              Scaled[{0, 1}], {24, 24}]}; Null, 
          WSM`Typeset`PackagePrivate`appearanceState === "Eval", 
          WSM`Typeset`PackagePrivate`p = {{
              EdgeForm[WSM`Typeset`PackagePrivate`$bordercolor], 
              FaceForm[None], 
              RectangleBox[{
                Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 1}, {
               Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 1, 
                Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
               RoundingRadius -> Offset[5]]}, 
             InsetBox[
              Evaluate[
               ToBoxes[
                ProgressIndicator[Appearance -> "Percolate"], 
                StandardForm]]]}; 
          Module[{WSM`Typeset`PackagePrivate`md$}, {
              WSM`Typeset`PackagePrivate`expandedsize, 
               WSM`Typeset`PackagePrivate`md$} = 
             WSM`Typeset`PackagePrivate`getExpandedGraphic[
              "xorgate", "f21a3bdf-410e-4603-a6bb-525a3d47dc62"]; {
              WSM`Typeset`PackagePrivate`expandedprimitives, 
               WSM`Typeset`PackagePrivate`expandedopt} = 
             WSM`Typeset`PackagePrivate`separateGraphics[
              WSM`Typeset`PackagePrivate`md$]; 
            WSM`Typeset`PackagePrivate`expandedrange = Replace[PlotRange, 
               Flatten[WSM`Typeset`PackagePrivate`expandedopt]]; 
            WSM`Typeset`PackagePrivate`expandedeval = True; 
            WSM`Typeset`PackagePrivate`expandedprimitives = 
             Join[WSM`Typeset`PackagePrivate`expandedprimitives, {{
                 EdgeForm[WSM`Typeset`PackagePrivate`$bordercolor], 
                 FaceForm[None], 
                 RectangleBox[{
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 
                   1}, {Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 
                   1, 
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
                  RoundingRadius -> Offset[5]]}, 
                
                With[{WSM`Typeset`PackagePrivate`leftmost$ = 
                  Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                  WSM`Typeset`PackagePrivate`bottommost$ = 
                  Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1]}, {
                  RGBColor[
                  0.43137254901960786`, 0.43137254901960786`, 
                   0.43137254901960786`], 
                  InsetBox[
                   FormBox[
                    StyleBox[
                    "xorgate", FontSize -> 9, FontFamily -> "Helvetica", 
                    StripOnInput -> False], TraditionalForm], 
                   
                   Offset[{12, 12}, {
                    WSM`Typeset`PackagePrivate`leftmost$, 
                    WSM`Typeset`PackagePrivate`bottommost$}], {-1, 0}]}]}]; 
            Null]; WSM`Typeset`PackagePrivate`appearanceState = "Expanded"; 
          Null, WSM`Typeset`PackagePrivate`appearanceState === "Expanded", 
          WSM`Typeset`PackagePrivate`p = 
           WSM`Typeset`PackagePrivate`expandedprimitives; Null]; Null,
        ImageSizeCache->{{-1.4142135623731065`, 
         370.4142135623731}, {-141.24822335119518`, 135.16340779866715`}},
        SynchronousUpdating->False,
        TrackedSymbols:>{WSM`Typeset`PackagePrivate`appearanceState}],
       Initialization:>(
        WSM`Typeset`PackagePrivate`expandedeval = 
         Not[WSM`Typeset`PackagePrivate`expandedeval]; 
        WSM`Typeset`PackagePrivate`expandedeval = 
         Not[WSM`Typeset`PackagePrivate`expandedeval]; Null)],
      "xorgate"],
     WSM`ModelTag["xorgate"]],
    Editable -> False,
    SelectWithContents -> True,
    BoxID -> "f21a3bdf-410e-4603-a6bb-525a3d47dc62",
    ContentSelectable->False,
    DefaultBaseStyle->{
     "Graphics", FrontEnd`GraphicsHighlightColor -> RGBColor[0, 0.46775, 1], 
      ComponentwiseContextMenu -> {"GraphicsBox" -> {
          MenuItem["Copy Model", 
           KernelExecute[
            CopyToClipboard[
             ReleaseHold[
              MakeExpression[
               MakeBoxes[
                SystemModel["xorgate"]], StandardForm]]]], MenuEvaluator -> 
           Automatic], 
          MenuItem["Copy Model Name", 
           KernelExecute[
            CopyToClipboard[
             StringJoin["\"", "xorgate", "\""]]], MenuEvaluator -> Automatic],
           Delimiter, 
          MenuItem["Simulate Model", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                RowBox[{"SystemModelSimulate", "[", "\"xorgate\"", "]"}]], 
               "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], 
          MenuItem["Show Preferred Plots in Model", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                RowBox[{"SystemModelPlot", "[", "\"xorgate\"", "]"}]], 
               "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], 
          MenuItem["Show Model Information", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                RowBox[{"SystemModel", "[", 
                  RowBox[{"\"xorgate\"", ",", "\"Summary\""}], "]"}]], 
               "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], Delimiter, 
          MenuItem["Open in SystemModeler Model Center", 
           KernelExecute[
            WSMLink`WSMModelCenter["xorgate"]], MenuEvaluator -> Automatic], 
          MenuItem["Open in SystemModeler Simulation Center", 
           KernelExecute[
            WSMLink`WSMSimulationCenter["xorgate"]], MenuEvaluator -> 
           Automatic]}}},
    ImageSize->Dynamic[
     FE`WSM`Typeset`PackagePrivate`expandedsize437, 
      TrackedSymbols :> {FE`WSM`Typeset`PackagePrivate`expandedeval437}],
    PlotRange->Dynamic[
     FE`WSM`Typeset`PackagePrivate`expandedrange437, 
      TrackedSymbols :> {FE`WSM`Typeset`PackagePrivate`expandedeval437}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xorgate", "=", 
   RowBox[{"SystemModelPlot", "[", 
    RowBox[{
     RowBox[{"SystemModelSimulate", "[", 
      RowBox[{"xorGateConnectedToDigitalgEntries", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<pulse1.y\>\"", ",", "\"\<pulse2.y\>\""}], "}"}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List","ListIcon",GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["4", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["736", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
         Typeset`open]},
        "IconizedObject"]],
      {PlotStyle -> Dashing[{Small, Small}], 
       PlotLegends -> {"30% duty cycle step", "60% duty cycle step"}, 
       PlotStyle -> Thickness[Large], 
       AxesLabel -> {"time(sec)", "voltage(V)"}},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.771085590528596*^9, {3.7710858316110544`*^9, 3.7710858704354987`*^9}, 
   3.7710859319914656`*^9, {3.771086039211007*^9, 3.7710860441902885`*^9}, 
   3.7710888979217186`*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"29131169-476a-4a47-be30-6a658de97dab"],

Cell[TextData[StyleBox["The simulated output is constant and maximal in \
voltage (4 volts \[DoubleLeftRightArrow] True) when the entries are in \
different states. As predicted by the table.",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.7710816460651255`*^9, 3.7710818287339644`*^9}, {
  3.7710818861439247`*^9, 3.7710818981702557`*^9}, {3.7711019863082047`*^9, 
  3.771101999644594*^9}},ExpressionUUID->"49d7ce70-9f15-4bd1-a512-\
54fc557034d6"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"Column", "[", 
   RowBox[{"{", 
    RowBox[{
     StyleBox[
      RowBox[{"x", "orgate"}]], ",", 
     RowBox[{"SystemModelPlot", "[", 
      RowBox[{
       RowBox[{"SystemModelSimulate", "[", 
        RowBox[{
         StyleBox[
          RowBox[{"x", "orGateConnectedToDigitalgEntries"}]], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.5"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "\"\<xorGate1.y\>\"", "}"}], ",", 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"List","ListIcon",GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["List", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["3", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["672", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
           Typeset`open]},
          "IconizedObject"]],
        {PlotLegends -> {"XOR gate output"}, PlotStyle -> {
           RGBColor[1, 0, 0], 
           Thickness[Tiny]}, AxesLabel -> {"time(sec)", "voltage(V)"}},
        SelectWithContents->True,
        Selectable->False]}], "]"}]}], "}"}], "]"}],
  FontSize->14]], "Input",
 CellChangeTimes->{{3.7706522301645517`*^9, 3.770652261884716*^9}, {
   3.7706523279755173`*^9, 3.770652355112908*^9}, 3.770654029771451*^9, {
   3.7706837226860127`*^9, 3.7706837386863966`*^9}, {3.770684145513487*^9, 
   3.7706841477760468`*^9}, {3.7710859758174334`*^9, 
   3.7710859990680428`*^9}, {3.7710860514424133`*^9, 3.7710860622666273`*^9}},
 FontSize->14,
 CellLabel->"In[62]:=",ExpressionUUID->"d88b20e7-6ade-4677-acf1-449257396ff6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
           TagBox[
            TooltipBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJx13HnwbvUcwPE7jaExhuwJCdnGmDQYk/WSPXumacydpmmUbJWQNpdKskdl
3yXJkiS0C0m0SCJJkj37lp3xO+c99/saZ+b5/fPMa9Rzn+c553zen/P8bu66
x77P3HOzdevW/ewm69ZNj///s8X6f5/0x8ufssf9H/n/Xj/8z43PP/ulxz5h
8b8/ffiQ25z8+OsOftbin991+KDr77n95p/csPj3dx9+2LVPe9M79tlj8XzP
GT7ziTfb7L5H7bV4/r2HH3LahQec+4HnL/68Fw6fvvWRv37G6fss/vz9ht97
/jan7L/3ixevZ//hq/8x/YEvWby+lw7fcbtrtr3xYS9bvN4Dhp/9nIeuPePL
F6//wOF3v2v6OWjxfg4evurSv+38kxMOWby/Q4fvcKNdbn6/U1+xeL8bh3fd
YXrCVy7e/6uGn/zg1z1q95+9avF5HDb8m2dMz3jY4vM5fPgNL/zFv0764+GL
z+uI4fsedbu1t3DE4vN79fBFH3rs5//8n1cvPs8jh1+w9mlteaPXLD5fvumV
x+/38Jsetfi8+ePT293itYvPn580Pd3tXrc4Hvyr6eO+0+sXx4enT++yu71h
cbz4PhuO/vIN937j4vjx19eebavt3rQ4nvy8t/720Ec+6M2L48trL27tLR+9
ON78rJ+c8J7zt3nL4vjzR9Y+vSuP584H/st/rjjw+nu+dXF+8GPmE4A7X/i4
Lac3dMzi/OH55Z3CnU/8gPnn2MX5xUec9421M4g73/jba0d/1x2OW5x/q333
+Q/gzk9+yd7TAXnb4nzlr9xw77Ujzp2/bx++9fyCufOZp1d72oXc+f2O4VPf
9/sTL9iJO995s/kD4M7/dw4/cz6BuOuBPzy93Su46+Ndw3+anm5X7nrhR0+X
w9Xc9fPu4WOm03k37nri6w6eDgh3fb1nePv5hOeuNz7sbTuunULc9ffe4W/d
bTrA3PXId53O7t9y1+f7hl88XS77cdcrf2k6Hf/MXb/vH77lfIFy1/Mqb75+
/jj/wV3vHxieX+6h3PXPPX5wuHnAH7tgp7UrnpsP/PS1q/VWR3Dzgv8+ffrn
c/ODP7jVdIF8aLh5wk+YDzg3X/gPJ04vkJs3/M61V7d2RQ03f3j9g3Zbu8Q+
PNw84l/+a3rD3Hzi6ezZcDQ3r3h+u5dx84vnp7vV8cPNM57H1c7cfOPGCzfv
eB4PV3Lzj185Xd5bfmS4ecj3mi8obh7yN+fLi5uP/PLp8riGm5d8l+l03vqE
4eYnf206/Xbn5invOx9ebr7y7RsAw83bjw5/cXp523Lzl5+71/TDzWOeLu7f
n8jNZ56m5YHXc/P6xOHd5ifk5jffeB5Y3Dzn6Wjc5mRuvvMuvcDh5v3Hhv87
XW7bc/OfPzqdzvtzPeCnzm+Y6wP/dTocN3C9OGn4/dPbfTDXD37c/AFyPeHf
Tbk4k+sLv33H+YobrjcfH37EfEC4/vDPp/G6kesRz+PvPK5PPI+XzT4xXK94
vnx35PrF8+VxJHc683x0L+D6xt85cA7YcL3jV0wf3xO5/vE95hOQ6yFfcvH0
w/WRX3bsNFA/NVwv+c7zCc31k786r5NcT/lF0zi9nOsr37YLZLje8jnTONiF
6y/vOa9PXH95Pp2v4nrM8+my1acXfeb5cGzges2tD1y/eX66a7nHUxbXO9d3
7vrnes/NA67/3Hzg9gFuXnD7ATc/uH2Bmyfc/sDNF26f+Mxi3nD7BTd/uH2D
m0fc/sHNJ24f4eYVt59w84vbV7h5xu0v3HzjBs6pi3nH7Tfc/OP2HW4ecvsP
z6f7Rm4f4tZN7vTj5ie3L3HzlNufuPn62eH2KW7ecvsVN3+5fYubx9z+xc1n
bh/j5jW3n3Hzm9vXuHnO7W/cfD9tuH2Om/fcfsfNf27f43rA7X+rXS+4/ZDr
B7cvcj3h9keuL9w+yfXmc8Ptl1x/uH2T6xG3f3J94vZRrlfcfsr1i9tXuZ5x
+yvXN26f/fyid9x+y/WP23e5HnL7L9dHbh/mvm7g1k+un9y+zPWU25+5vnL7
9BcWveX2a66/3L7N9Zjbv7k+c/s412tu/eD6ze3rXM+5/Z17PH3Rd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nev7GYu+c33n+s71nes713eu71zf
ub6v8qbvP7nec73nes/1nus9F8Azh+s913uu91zvud5zvefuh/gtc++5+yOu
91zvud5zved6z/X+rOF6z/We6z3Xe673XO+53nO953rP9Z4br1zvud5zved6
z/X+7OF6z/We6z3Xe673XO+5vnN95/rO9Z3rO9d3ru9c37m+c30/Z7i+c33n
+s71nes713eu71zfub5zfef6zvWd6zvXd67v5w7Xd67vXN+5vnN95/rO9Z3P
mvvO3Q/zLeYTms+Yc7La9Z7rPdd7rvdc7784XO+53nO953rP9Z7rPdd7rvdc
77necx8n13uu91zvucfzFtc/139uHnD7ADcfuP2AmxfcvsDND25/4OYJt09w
84XbL7h5w+0b3Pzh9g9uHnH7yCpvuh/h9hVufnH7CzfPuH2Gm2/cfsPNO27f
4eYft/98abh5yO1D3Hzk9iNuXnL7Ejc/uf2Jm6fcPsXNV26/4uYtt29x85fb
v7h5zO1f3Hzm9jFuXnP7GTe/uX2Nm+fc/sbNd26f4+Y9t99x8//Lwy1AXA+4
/Y/rA7cPcr3g9kOuH9y+yPWE2x+5vnD7JM85OID7Pom7v+S+X+LuN7nvm7j7
T24f5W5/uHHD9YrbV7l+cfsr1zNun+X6xu23Xxmud9y+y/WP23+5HnL7MNdH
bj/mesnty1w/uf2Z6ym3T3N95fZrrrfcvs31l9u/uR5z+zjXZ24/53rN7etc
v7n9nes5t89zj+cP13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3r
O9d3ru9c37mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6/lXFz3nes71nOs5
13Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3n
es71nOs513Ou51zPL1j0nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5+0fu
+yKu51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOdfzry16vtr1nes7
13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c6cP
13eu71zfub5zfef6zj1euOg713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvX964u+c33n
+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9X+VN369yved6z/We
6z3Xe673XO+53nO953rP9Z7r/TeGCwLXe673XO+53nO953rP9Z7rPdd7rvdc
77nec73nes99f8z9voj7Ppn7/RHXe673XO+53nPjges913uu91zvud5zved6
f9Fwfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes7
13eu71zfub5zfef6zvWd6zvXd67v3OPFw/Wd6zvXd67vXN9Xu95zved6z/We
6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5z
ved6f8lwved6z/We6z3Xe673XO+53nO953rP9Z7rPdf7Vd7Uf67/XP+5/nO9
53rP9Z7rPdd7rvdc77nec73nes/1nus913uu95cOFwSu91zvud5zved6z/We
6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nfJ/NP595zved6z/We6z3Xe673
XO+53nO953r/zeF6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73n
es/1nus913uu91zvud5zvecOL9d7rvdc77nec73nHi9bXO9c/7kThNsHuHnA
7QfcfOD2BW5ecPsCNz+4/YGbJ9w+wc0Xbr/g5g23b3Dzh9s/uHnE7SPcfOL2
E57H1V7cvsLzuNmH21+43z9y+wz3+0huv+G+z+T2He77TW7/4b7v5PYh7vtP
bj/i7o+4fYm7X+L2J26ecvsUN1+5/Yqbt9y+xc1fbv/i5jG3j3HzmdvPuHnN
7Wvc/Ob2N26ec/scN9+/Ndx+x817bt/j5j+3/3E94PZBrg/cfsj1gtsXuX5w
+yPXE26f5PrC7Zdcb7h9k+sPt39yPeL2Ua5P3H7K9YrbT7l+cfsq1zNuf+X6
xu2zXO+4/ZbrH7fvcj3k9l+uj9w+zPWS24+5fnL7MtdTbn/m+srt01xvuf2a
6y+3b3M95vZvrs/cPr7a9Zvb17mec/s793j5ou9c37kBwfWd6zvXd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfufsRru/c/QnXd67v
XN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd
yzHXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+f3vRd67vXN+5vnN95/rO9Z3r
O9d3ru9c3/mBc99XedP3RVzvud5zved6z/We6z3Xe673XO+53nO953rP9Z7r
Pdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO9
53rP9Z7rPdd7rvdc77nec73n+s71nes713eu79zjFcP1nes7NyC4vnN95/rO
9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5
vnPfR/Khc99Xu95zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77ne
c73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53n9nuN5zved6z/We
6z3Xe95mDsoqb+o/13+u/1z/uft7rvdc77nec73nes/1nus913uu91zvud5z
ved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvfc43eH6z3Xe25A
cL3nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/dz3O/j+T6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c
37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9v3K4vnN9
5/rO9Z3rO9d37n6e6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71
nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7me
cz3nes71nOs513Ou51zPucuD6znXc67nXM+5nnM953rO9ZzrOff4vUXPuZ5z
A4HrOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWcd54Dstr1nes7
13eu71zfub5zfef6zvWd6zvXd67v3N8/4vrO/X0kru9c37m+c33n+s71nes7
13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c32/
atF3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfV/lTd/Xc73nes/1
nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nH
7w/Xe6733IDges/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO95+7f
ub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m/f8z1nfv7yFzf
ub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3LHdd3/vHc99Wu91zvud5zved6
z/We6z3X+6uH6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus9
13uu91zvud5zved6z/We6z3Xe673XO+53nO953rPr5l7v8qb+s/1n+s/13+u
91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1
nus913uu99zjD4brPdd7bkBwved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP
9Z7rPdd77r9H4nrP9Z7rPdd7rvdc77nec73nes/1nus913uu99z9PNd3ru9c
37m+c33n+s71nev7NcP1nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfefu57mecz3nes71
nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7me
cz3nes71nOs59/jDRc+5nnMDges513Ou51zPuZ5zPed6zvWc6znXc67nXM+5
nnM953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6znX
c67nXM+5nnM953rO/ffGXM+5/z/r1a7vXN+5vnN95/rO9Z3rO9d3ru9c37m+
c33n+s71nes713eu71zfr130nes713eu71zfub5zfef6zvWd6zvXd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvX
d67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfudOP6zvX
d67vXN+5vnN95/rOPf5ohbdY/z8KxtU2
               "]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJx13HnwdfUcwPFnGkNjDNmTLTvTGBqMyRrZs6WmaUzTNA3JljZJEkmyp91O
UsmSJCRLRdKmTUmSkC37lp3xO+ft+b7Gmbm/f+68Rt3n3nvO+bw/5/6e3GuX
VzzvhRusW7fup7dYt256/P+fDbf818l/uOJZuzz08f/vLYf/ceBLvrzPkU9b
/O/PHX7NHU556o/2327xz+8w/Oob77/5hp/ccfHv7zz8mOuf845jd99l8Xwv
GD7z6bfaYLNDd108/27Djzr9/H2/+qGXLP68lw2fcY9DfrXNGbsv/vw9ht9/
7qan7rXbnovXs9fwtX+f/sC9F69vn+G7PuS6+978oFcuXu++w89/waPXnvFV
i9e/3/B73zP9vHrxfvYfvuaSv257wwmvWby/A4bvcrPtb/3g0167eL8HDu+w
xfSEr1u8/9cPP/ORb3nCzj99/eLzOGj419tMz3jQ4vN5w/DbXvbzf578hzcs
Pq+Dhzc79E5rb+Hgxef3xuGLjnvy5//07zcuPs9Dhl+69mltfLM3LT5fvuXV
x+/x2Fseuvi8+ePT293ozYvPn58xPd2d3rI4HvzL6eO+21sXx4enT++ye79t
cbz4QTse9rWbHvj2xfHjC9aebZOHvGNxPPnFh//mgMc/4p2L48trL27tLR+2
ON683Q0nvO/cTd+1OP780bVP7+rjufOB//zvK/e78f6HL84PftJ8AnDnCx+1
8fSGjlicPzy/vFO584kfNv8cuTi/+OCzL1w7g7jzjb+9dvR32OKoxfm3yhtt
eZ/5D+DOT957t+mAHD3c+cpfv+mBa0ecO3+PGb79/IK585mnV3v6+dz5fezw
aR/43Unnbc2d77zB/AFw5/+7h583n0Dc9cAfmd7uldz18Z7hP05PtwN3vfAT
p8vhWu76ee/wEdPpvBN3PfGP9p8OCHd9vW948/mE5643PujordZOIe76e//w
5feeDjB3PfK9prP7N9z1+YHhPafLZQ/ueuVzptPxT9z1+8Hh284XKHc9r/b8
cf6du94/NDy/3AO46597/PBw84A/dt7Wa1c8Nx/4uWtX6+0O5uYF/2369M/l
5gd/eJPpAjluuHnCT5sPODdf+PcnTS+Qmzf87rVXt3ZFDTd/eMtH7LR2iX1k
uHnEv/jn9Ia5+cTT2bPjYdy84vntXsbNL56f7nbHDzfPeB5X23LzjRsv3Lzj
eTxczc0/ft10eW/80eHmIT9gvqC4eciXzpcXNx/5VdPlcR03L/me0+l8jxMW
85O/OZ1+O3PzlF8xH15uvvKdGwCLeXvi8FnTy7svN3/5RbtOP9w85uni/t1J
3HzmaVrudyM3r08a3ml+Qm5+883ngcXNc56Oxh1O4eY7b98LXMz7jw3/Z7rc
NufmP584nc57cT3gZ89vmOsD/2U6HDdxvTh5+IPT230k1w9+yvwBcj3h3065
OJPrCx+z1XzFLXrz8eHHzQeE6w//bBqvB3I94nn8nc31iefxssEnFr3i+fLd
iusXz5fHIdzpzPPRPY/rG1+13xywRe/4tdPH93Suf3y/+QTkesjfunj64frI
rzxyGqifWvSS7z6f0Fw/+RvzOsn1lF8+jdMruL7yHbtAFr3lr0zjYHuuv/zC
eX3i+svz6XwN12OeT5dNPr3oM8+HY0eu19z6wPWb56e7nns8dXG9c33nrn+u
99w84PrPzQduH+DmBbcfcPOD2xe4ecLtD9x84faJzyzmDbdfcPOH2ze4ecTt
H9x84vYRbl5x+wk3v7h9hZtn3P7CzTdu4Jy2mHfcfsPNP27f4eYht//wfLof
yO1D3LrJnX7c/OT2JW6ecvsTN18/O9w+xc1bbr/i5i+3b3HzmNu/uPnM7WPc
vOb2M25+c/saN8+5/Y2b76cPt89x857b77j5z+17XA+4/W+VN/xfL7j9kOsH
ty9yPeH2R64v3D7J9eZzw+2XXH+4fZPrEbd/cn3i9lGuV9x+yvWL21e5nnH7
K9c3bp/9/HC94/Zbrn/cvsv1kNt/uT5y+zD3dQO3fnL95PZlrqfc/sz1ldun
vzBcb7n9musvt29zPeb2b67P3D7O9ZpbP7h+c/s613Nuf+cezxiu71zfub5z
fef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9f3Lw7Xd67vXN+5vnN95/rO9Z3r
O9f31a73XO+53nO953rP9Z4L4JnD9Z7rPdd7rvdc77nec/dD/K6599z9Edd7
rvdc77nec73nev+l4XrP9Z7rPdd7rvdc77nec73nes/1nhuvXO+53nO953rP
9f7Lw/We6z3Xe673XO+53nN95/rO9Z3rO9d3ru9c37m+c33n+v6VRd+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes71/evLvrO9Z3rO9d3ru9c37m+85fm
vnP3w3yb+YTmL845WeX1349xved6z/We6/1Zw/We6z3Xe673XO+53nO953rP
9Z7rPfdxcr3nes/1nns8e7jrn+s/Nw+4fYCbD9x+wM0Lbl/g5ge3P3DzhNsn
uPnC7RfcvOH2DW7+cPsHN4+4fWS1m1fcvsLNL25/4eYZt89w843bb7h5x+07
3Pzj9p9zhpuH3D7EzUduP+LmJbcvcfOT25+4ecrtU9x85fYrbt5y+xY3f7n9
i5vH3P7FzWduH+PmNbefcfOb29e4ec7tb9x85/Y5bt5z+x03/7823ALE9YDb
/7g+cPsg1wtuP+T6we2LXE+4/ZHrC7dP8pyDfbnvk7j7S+77Je5+k/u+ibv/
5PZR7vaHGzdcr7h9lesXt79yPeP2Wa5v3H779UXvuH2X6x+3/3I95PZhro/c
fsz1ktuXuX5y+zPXU26f5vrK7ddcb7l9m+svt39zPeb2ca7P3H7O9Zrb17l+
c/s713Nun+cez130nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO
9Z3rO9d3rudcz7mecz3nes71nOs513Ou51zPuZ5zPed6/o1Fz7mecz3nes71
nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7me
cz3nes71nOs51/PzFj3nes71nOs513Ou51zPuZ5zPed6zvWc6znXc+7+kfu+
iOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9fybi56v8vrvs7i+
c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO3f6
cH3n+s71nes713eu79zj+cP1nes713eu71zfub5zfef6zvWd6zvXd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6fsFwfef6
zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+r7a9Z7rPdd7rvdc
77nec73nes/1nus913uu91zvLxwuCFzvud5zved6z/We6z3Xe673XO+53nO9
53rP9Z7rPff9Mff7Iu77ZO73R1zvud5zved6z40Hrvdc77nec73nes/1nuv9
RcP1nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c
37m+c33n+s71nes713eu71zfub5zjxcv+s71nes713eu76u8/n6e6z3Xe673
XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We
6z3X+28N13uu91zvud5zved6z/We6z3Xe673XO+53nO9X+36z/Wf6z/Xf673
XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1/pLhgsD1nus913uu91zvud5z
ved6z/We6z3Xe673XO+53nO953rP9Z7rPff7ZP7J3Huu91zvud5zved6z/We
6z3Xe673XO8vHa73XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zved6z/We6z3Xe+7wcr3nes/1nus913vu8bLF9c71nztBuH2Amwfc
fsDNB25f4OYFty9w84PbH7h5wu0T3Hzh9gtu3nD7Bjd/uP2Dm0fcPsLNJ24/
4Xlc7crtKzyPm925/YX7/SO3z3C/j+T2G+77TG7f4b7f5PYf7vtObh/ivv/k
9iPu/ojbl7j7JW5/4uYpt09x85Xbr7h5y+1b3Pzl9i9uHnP7GDefuf2Mm9fc
vsbNb25/4+Y5t89x8/3y4fY7bt5z+x43/7n9j+sBtw9yfeD2Q64X3L7I9YPb
H7mecPsk1xduv+R6w+2bXH+4/ZPrEbePcn3i9lOuV9x+yvWL21e5nnH7K9c3
bp/lesftt1z/uH2X6yG3/3J95PZhrpfcfsz1k9uXuZ5y+zPXV26f5nrL7ddc
f7l9m+sxt39zfeb28VVef7/O7etcz7n9nXu8Yri+c33nBgTXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfefuR7i+c/cnXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvX
dy7HXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+v7t4frO9Z3rO9d3ru9c37m+
c33n+s71nes7P3zu+2rXe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1
nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77ne
c73nes/1nus913uu91zvud5zfef6zvWd6zvXd+7xykXfub5zA4LrO9d3ru9c
37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3r
O/d9JB8w932V19/Pc73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+5
3nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5fNVzvud5zved6
z/We6z1vOgdltes/13+u/1z/uft7rvdc77nec73nes/1nus913uu91zvud5z
ved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvfc43eG6z3Xe25A
cL3nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/dz3O/j+T6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c
37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9v3rRd67v
XN+5vnN95/rO3c9zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7me
cz3nes71nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddz
rudcz7mecz3nes71nOs5d3lwPed6zvWc6znXc67nXM+5nnM95x6/u+g513Nu
IHA953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zPuZ7ztnNAVnn9/TzX
d67vXN+5vnN95/rO9Z3rO9d3ru9c37m/f8T1nfv7SFzfub5zfef6zvWd6zvX
d67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6
fs1wfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes7
13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9f31a73XO+53nO9
53rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe+7x
e8P1nus9NyC43nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvuft3
ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd+7vH3N95/4+Mtd3
ru9c37m+c33n+s71nes713eu71zfub5zfedyx/Wdfzz3fZXX389zved6z/We
6z3Xe673XO+vHa73XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPb9p7v1q13+u/1z/uf5z
ved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zvecevz9c77necwOC6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77ne
c73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec/89Etd7rvdc77nec73nes/1nus913uu91zvud5zvefu57m+c33n
+s71nes713eu71zfr1v0nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfefu57mecz3nes71
nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7me
cz3nes71nOs59/iDRc+5nnMDges513Ou51zPuZ5zPed6zvWc6znXc67nXM+5
nnM953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6znX
c67nXM+5nnM953rO/ffGXM+5/z/rVV5/P8/1nes713eu71zfub5zfef6zvWd
6zvXd67vXN+5vnN95/rO9f364frO9Z3rO9d3ru9c37m+c33n+s71nes713eu
71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71
nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru/c6cf1
nes713eu71zfub5zfecef7jS/wWcvufu
               "]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ], {}, {}, {}}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ], {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"time(sec)\"", TraditionalForm], 
           FormBox["\"voltage(V)\"", TraditionalForm]}, 
         AxesOrigin -> {0, 2.9444444444444446`}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {
            FormBox["\"t\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 0.5}, {2.9444444444444446`, 4.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"30% duty cycle step\"", "\"60% duty cycle step\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
           TagBox[
            TooltipBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                NCache[
                 Rational[1, 120], 0.008333333333333333]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1:eJx13HvQvvWcwPHfNIbGmNU6JqdYxzGGBmNY1o92HdZZpmlM0zQNySkJSRJJ
cg45n0mSY9qQnEKScxJtkhzW7ua4llhrmX2u6+35vsZ35n7+uec16v7d931d
1+f9ue7nl5sd9ORHPGaXHTt2/ORqO3Ysj3/9s9vO/zvt1xc++KA73uuvvXP4
f495/CefdtL9p//9YcPPus4H7/fDox45/fP7DT/zilvttev795/+/QOH73H5
Q1/2ukMPmp7v0cNnP+Aau9zuhIOn5z9k+O5nnn/Ep9/2+OnPe+LwWTc5/mcP
P+vQ6c8/bPjN5+55+uGHPGV6PYcPX/qH5Q986vT6njZ8wztcdourHvv06fUe
MfyoR//91jM+Y3r9Rw6/8Q3LzzOn93PU8CVf//0+Pz7lWdP7O3r4BlfZ929u
f8azp/d7zPB+d1ue8DnT+3/u8IPu+qJ7H/iT506fx7HDP3/48ozHTp/P84Zf
8sT/+ONpv37e9HkdN3y7E6639RaOmz6/5w9/5R3/9NHf/On50+d5/PATtj6t
3a/ygunz5atffPJh97z6CdPnze9d3u5uL5w+f/7n5emu96LpePBPl4/7Ri+e
jg8vn94FN3/JdLz4tvuf+Lkrb/PS6fjxl7aebY87vGw6nvy4V/7i6Hvd5eXT
8eWtF7f1lk+cjjc/8senvOncPV8xHX9+19and/HJ3PnAv/3TRUdecatXTucH
/+N6AnDnC7969+UNvWo6f3h9eadz5xPfaf05aTq/+Lhzvrx1BnHnG39r6+jv
d7dXT+ffJu+68+/WP4A7P/mphywH5DXDna/8+Stvs3XEufP3tcPXXl8wdz7z
8mrPPJ87v183fMZbfnXqeQ/kznfeZf0AuPP/9cOPWE8g7nrgdy5v9yLu+njD
8H8vT7cfd73wfZbL4VLu+nnj8KuW0/kA7nriHx61HBDu+nrT8F7rCc9db3zs
a/beOoW46+/Nw9+8+XKAueuRb7ac3b/grs+3DD9luVwO465X/uxyOv6Gu37f
Ovy36wXKXc+bvNvO9eP8A3e9v214fblHc9c/9/j2aR7we8574NYVz80HftjW
1Xqt47h5wf+zfPrncvOD377HcoG8Y5onfP/1gHPzhf/r1OUFcvOGX7/16rau
qGn+8M67HLB1ib1zmkf8n39c3jA3n3g5e/Y/kZtXvL7dC7j5xevTXevkaZ7x
Oq724eYbN164ecfreLiYm3/8nOXy3v1d0zzkW68XFDcP+Rvr5cXNR37Gcnlc
xs1LvulyOt/klOHmJ39xOf0O5OYpP3k9vNx85es3AIabt+8e/szy8m7BzV9+
7MHLDzePebm4f3UqN595mZZHXsHN61OHD1ifkJvffNV1YHHznJejcZ0PcvOd
9+0FDjfv3zP85+Vy24ub//zu5XQ+nOsBP2R9w1wf+HfL4biS68Vpw29d3u5d
uX7wfdcPkOsJ/3LJxdlcX/i1e69X3HC9ee/wP6wHhOsP//syXo/hesTr+DuH
6xOv42WX9w3XK14v3725fvF6eRzPnc68Ht3zuL7xt49cAzZc7/jZy8f3AK5/
fMv1BOR6yF/76vLD9ZGfftIyUD8wXC/5xusJzfWTv7Cuk1xP+UnLOL2Q6ytf
twtkuN7yp5ZxsC/XX37Muj5x/eX1dL6E6zGvp8seH5r6zOvh2J/rNbc+cP3m
9eku5x5Pn653ru/c9c/1npsHXP+5+cDtA9y84PYDbn5w+wI3T7j9gZsv3D7x
4WnecPsFN3+4fYObR9z+wc0nbh/h5hW3n3Dzi9tXuHnG7S/cfOMGzhnTvOP2
G27+cfsONw+5/YfX0/0Ybh/i1k3u9OPmJ7cvcfOU25+4+fovw+1T3Lzl9itu
/nL7FjePuf2Lm8/cPsbNa24/4+Y3t69x85zb37j5fuZw+xw377n9jpv/3L7H
9YDb/zZ517/0gtsPuX5w+yLXE25/5PrC7ZNcbz4y3H7J9YfbN7kecfsn1ydu
H+V6xe2nXL+4fZXrGbe/cn3j9tmPDtc7br/l+sftu1wPuf2X6yO3D3NfN3Dr
J9dPbl/mesrtz1xfuX36Y8P1ltuvuf5y+zbXY27/5vrM7eNcr7n1g+s3t69z
Pef2d+7xrOH6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33/+HB9
5/rO9Z3rO9d3ru9c37m+c33f5O3ec73nes/1nus913sugGdPved6z/We6z3X
e6733P0Qv2LtPXd/xPWe6z3Xe673XO+53n9i6j3Xe673XO+53nO953rP9Z7r
Pdd7brxyved6z/We6z3X+09Oved6z/We6z3Xe673XN+5vnN95/rO9Z3rO9d3
ru9c37m+f2q4vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu758eru9c
37m+c33n+s71nes7f2LtO3c/zNdcT2j++JqTTd7uPdd7rvdc77nef2bqPdd7
rvdc77nec73nes/1nus913vu4+R6z/We6z33eM5w1z/Xf24ecPsANx+4/YCb
F9y+wM0Pbn/g5gm3T3DzhdsvuHnD7Rvc/OH2D24ecfvIJm/PK25f4eYXt79w
84zbZ7j5xu033Lzj9h1u/nH7z2enecjtQ9x85PYjbl5y+xI3P7n9iZun3D7F
zVduv+LmLbdvcfOX27+4ecztX9x85vYxbl5z+xk3v7l9jZvn3P7GzXdun+Pm
PbffcfP/c8MtQFwPuP2P6wO3D3K94PZDrh/cvsj1hNsfub5w+ySvOTiC+z6J
u7/kvl/i7je575u4+09uH+Vuf7hxw/WK21e5fnH7K9czbp/l+sbtt58frnfc
vsv1j9t/uR5y+zDXR24/5nrJ7ctcP7n9mespt09zfeX2a6633L7N9Zfbv7ke
c/s412duP+d6ze3rXL+5/Z3rObfPc4/nDtd3ru9c37m+c33n+s71nes713eu
71zfub5zfef6zvWd6zvXd67vXN+5nnM953rO9ZzrOddzrudcz7mecz3nes71
nOv5F6aecz3nes71nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO
9ZzrOddzrudcz7mecz3nes71nOs513Ou5+dNPed6zvWc6znXc67nXM+5nnM9
53rO9ZzrOddz7v6R+76I6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3n
es71/ItTzzd517/0nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO
9Z3rO9d3ru9c37m+c6cP13eu71zfub5zfef6zj2eP1zfub5zfef6zvWd6zvX
d67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6
zvWd6zvXd67vXxqu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3
ru9c3zd5u/dc77nec73nes/1nus913uu91zvud5zved6/+Wp91zvud5zved6
z/We6z3Xe673XO+53nO953rP9Z7rPff9Mff7Iu77ZO73R1zvud5zved6z40H
rvdc77nec73nes/1nuv9V6a+c33n+s71nes713eu71zfub5zfef6zvWd6zvX
d67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713fu8avD9Z3rO9d3
ru9c3zd5u/dc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+5
3nO953rP9Z7rPdd7rvdc77nef23qPdd7rvdc77nec73nes/1nus913uu91zv
ud5v8vb9Pdd/rv9c/7nec73nes/1nus913uu91zvud5zved6z/We6z3X+69P
ved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nvt9Mv/b
2nuu91zvud5zved6z/We6z3Xe673XO+/MfWe6z3Xe673XO+53nO953rP9Z7r
Pdd7rvdc77nec73nes/1nus913uu91zvud5zved6zx1ervdc77nec73nes89
XjBd71z/uROE2we4ecDtB9x84PYFbl5w+wI3P7j9gZsn3D7BzRduv+DmDbdv
cPOH2z+4ecTtI9x84vYTXsfVwdy+wuu4OZTbX7jfP3L7DPf7SG6/4b7P5PYd
7vtNbv/hvu/k9iHu+09uP+Luj7h9ibtf4vYnbp5y+xQ3X7n9ipu33L7FzV9u
/+LmMbePcfOZ28+4ec3ta9z85vY3bp5z+xw337853H7HzXtu3+PmP7f/cT3g
9kGuD9x+yPWC2xe5fnD7I9cTbp/k+sLtl1xvuH2T6w+3f3I94vZRrk/cfsr1
ittPuX5x+yrXM25/5frG7bNc77j9lusft+9yPeT2X66P3D7M9ZLbj7l+cvsy
11Nuf+b6yu3TXG+5/ZrrL7dvcz3m9m+uz9w+vsnb38dz+zrXc25/5x4vHK7v
XN+5AcH1nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3
ru9c37n7Ea7v3P0J13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3r
O9d3ru9c37m+c33n+s71ncsx13eu71zfub5zfef6zvWd6zvXd67vXN+5vn9r
uL5zfef6zvWd6zvXd67vXN+5vnN95/rOd177vsnbved6z/We6z3Xe673XO+5
3nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3X
e673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913eu71zfub5zfece
Lxqu71zfuQHB9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd
6zvXd67vXN+5vnN95/rO9Z37PpKPXvu+ydu953rP9Z7rPdd7rvdc77nec73n
es/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc
77nec73/9tR7rvdc77nec73nes97rkHZ5O37e67/XP+5/nP391zvud5zved6
z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zv
ud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus9
13uu91zvucfvTL3nes8NCK73XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1
nus913uu91zvud5zved6z/We6z3Xe673XO+5+3nu95Fc37m+c33n+s71nes7
13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n
+s71nes713eu7xcP13eu71zfub5zfef6zt3Pcz3nes71nOs513Ou51zPuZ5z
Ped6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou
51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOXd5cD3nes71nOs513Ou
51zPuZ5zPece/3XqOddzbiBwPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddz
rudcz7me8z5rQDZ5+/t6ru9c37m+c33n+s71nes713eu71zfub5zf/+I6zv3
95G4vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd
6zvXd67vXN+5vnN95/rO9f2S4frO9Z3rO9d3ru9c37m+c33n+s71nes713eu
71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71
nes713eu75u83Xuu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/1nus99/jdqfdc77kBwfWe6z3Xe673XO+53nO953rP9Z7r
Pdd7rvdc77nec73nes/dv3N95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu
71zfub5zf/+Y6zv395G5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes7lzuu
7/yjte+bvN17rvdc77nec73nes/1nuv9pVPvud5zved6z/We6z3Xe673XO+5
3nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3X
e37B2vtN3r6/5/rP9Z/rP9d7rvdc77nec73nes/1nus913uu91zvud5zved6
z/We6z3Xe673XO+53nO953rP9Z7rPdd77vF7U++53nMDgus913uu91zvud5z
ved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zved6z/We6z3Xe673XO+53nP/PRLXe673XO+53nO953rP9Z7rPdd7
rvdc77nec73n7ue5vnN95/rO9Z3rO9d3ru9c3y8bru9c37m+c33n+s71nes7
13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n
+s71nes7dz/P9ZzrOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc
6znXc67nXM+5nnM953rO9ZzrOddzrudcz7nH708953rODQSu51zPuZ5zPed6
zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zP
uZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOfffG3M95/7/rDd5+/t6ru9c
37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vlw/Xd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67v
XN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd
6zvXd67vXN+5vnN9504/ru9c37m+c33n+s71nes79/iDDd5t5/8DAhvuNg==

               "]]}, 
             TemplateBox[{"\"xorGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"xorGate1.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               PointSize[
                NCache[
                 Rational[1, 120], 0.008333333333333333]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"xorGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"xorGate1.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"xorGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"xorGate1.y"}], "Tooltip"]& ], {}}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"xorGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"xorGate1.y"}], "Tooltip"]& ], {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"time(sec)\"", TraditionalForm], 
           FormBox["\"voltage(V)\"", TraditionalForm]}, 
         AxesOrigin -> {0, 2.9444444444444446`}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {
            FormBox["\"t\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 0.5}, {2.9444444444444446`, 4.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"XOR gate output\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7710860141685076`*^9, 3.771086052417466*^9, 
  3.7710878553041105`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"e8f413ec-bc84-4dc3-8db4-b9c8503d5c84"]
}, Open  ]],

Cell[TextData[{
 StyleBox["2.", "Section",
  FontSize->48,
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" ", "Section",
  FontSize->48],
 StyleBox["Combinational Circuit-multiple inputs/gates", "Section",
  FontSize->48,
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.770639864616952*^9, 3.770639903581395*^9}, 
   3.770652450378993*^9, {3.770689664504446*^9, 3.7706896824414897`*^9}, {
   3.770689747470565*^9, 3.7706897476654773`*^9}},
 FontSize->18,ExpressionUUID->"f910c63f-5e40-4ed6-a72d-fb77d90f9ba7"],

Cell["\<\
This is about the combination of logic gates, and its application.  So here \
are some examples of combining circuit examples with more than 2 inputs. It \
is harder to calculate the input-output truth table.
Lets take a 4 inputs combinational circuit:\
\>", "Text",
 CellChangeTimes->{{3.771102048075871*^9, 3.7711020728358603`*^9}, {
  3.771102103542285*^9, 3.771102161128379*^9}},
 FontSize->18,ExpressionUUID->"d4605972-dd68-427f-a678-3d89fc26d9f0"],

Cell["\<\
Here is the truth table of the new nand logic gate that we introduce (nor \
gate simply produce the opposite output that the previously seen or-gate)\
\>", "Text",
 CellChangeTimes->{{3.7711022290105333`*^9, 3.7711023404720373`*^9}},
 FontSize->18,ExpressionUUID->"bb9fe373-9061-40be-96d4-2f0dcd4ae747"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{"Prepend", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"BooleanTable", "[", 
          RowBox[{
           RowBox[{"x", "\[Nand]", "y"}], ",", 
           RowBox[{"{", "x", "}"}], ",", 
           RowBox[{"{", "y", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<1\>\"", ",", "\"\<0\>\""}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<x/y\>\"", ",", "\"\<1\>\"", ",", "\"\<0\>\""}], "}"}]}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7711023698290625`*^9, 3.7711024061894565`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"905ba48f-0b9e-4bc3-a936-35ca7ed82538"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"x/y\"\>", "\<\"1\"\>", "\<\"0\"\>"},
    {"\<\"1\"\>", "False", "True"},
    {"\<\"0\"\>", "True", "True"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.771102407253095*^9},
 FontSize->24,
 CellLabel->"Out[68]=",ExpressionUUID->"2a183999-bbb0-486b-a59d-3d39960a2c87"]
}, Open  ]],

Cell["Our new model now combines all four gates:", "Text",
 CellChangeTimes->{{3.7711023657390337`*^9, 3.7711023875118685`*^9}, {
  3.7711024226699505`*^9, 
  3.7711024312880187`*^9}},ExpressionUUID->"6b8bafd6-ea93-4c02-9cc8-\
457b7cee9e81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourGateConnectedToDigitalgEntries", "=", 
   GraphicsBox[
    TagBox[
     TooltipBox[
      DynamicModuleBox[{WSM`Typeset`PackagePrivate`p = {
        InsetBox[
         GraphicsBox[{{}, {
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-80., 35.}, {-75., 35.}, {-75., 20.}, {-64.377, 
                20.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-80., 5.}, {-75., 5.}, {-75., 20.}, {-64.377, 
                20.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               LineBox[{{-48.378, 20.}, {-25., 
                20.}, {-25., -30.}, {-1., -30.}}]]}, {{{1., 0.}, {0., 1.}}, {
              0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               LineBox[{{-80., -30.}, {-20., -30.}, {-1., -30.}}]]}, {{{1., 
              0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{15., -30.}, {20., -30.}, {20., -45.}, {
                39., -45.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-80., -30.}, {-75., -30.}, {-75., 20.}, {-64.377, 
                20.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{15., -70.}, {20., -70.}, {20., -45.}, {
                39., -45.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               LineBox[{{-80., -70.}, {-1., -70.}}]]}, {{{1., 0.}, {0., 
              1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-80., -30.}, {-77.5, -30.}, {-77.5, -61.736}, {
                5., -61.736}, {-1., -70.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 
              0.}}]}, {
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {2., -130.}, {0,
                     0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-90., 35.}], {{{0.1, 0.}, {0., 
                   0.1}}, {-81., 31.5}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-90., 5.}], {{{0.1, 0.}, {0., 
                   0.1}}, {-81., 4.5}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse2\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse2", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse2"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\">=1\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 60.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -70.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.14153846153846156`]}]}, 
                    PlotRange -> {{-50., 50.}, {-80., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -70.}, {0., -70.}, {100., 20.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {-58.377, 20.}], {{{0.1, 
                   0.}, {0., 0.1}}, {-52.539300000000004`, 18.}}], {{{1., 
                  0.}, {0., 1.}}, {0., 0.}}], {}}, "\"orGate1\"", LabelStyle -> 
               "TextStyling"], Annotation[#, "orGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "orGate1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-90., -30.}], {{{0.1, 0.}, {0., 
                   0.1}}, {-81., -27.}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse3\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse3", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse3"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-90., -70.}], {{{0.1, 0.}, {0., 
                   0.1}}, {-81., -63.}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse4\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse4", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse4"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"&\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {0., 60.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -71.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.1556923076923077]}]}, 
                    PlotRange -> {{-50., 50.}, {-82., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -71.}, {0., -71.}, {100., 22.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], {
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Bevel"], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    DiskBox[{56., 0.}, {6., 6.}, {0., 6.283185307179586}]}, 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {56., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {5., -30.}], {{{0.1, 0.}, {
                   0., 0.1}}, {4.5, -27.}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"nandGate1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "nandGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "nandGate1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"=1\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {0., 60.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -70.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.14153846153846156`]}]}, 
                    PlotRange -> {{-50., 50.}, {-80., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -70.}, {0., -70.}, {100., 20.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {45., -45.}], {{{0.1, 0.}, {
                   0., 0.1}}, {40.5, -40.5}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"xorGate1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "xorGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "xorGate1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\">=1\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 60.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -70.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.14153846153846156`]}]}, 
                    PlotRange -> {{-50., 50.}, {-80., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -70.}, {0., -70.}, {100., 20.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], {
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Bevel"], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    DiskBox[{56., 0.}, {6., 6.}, {0., 6.283185307179586}]}, 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {56., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {5., -70.}], {{{0.1, 0.}, {
                   0., 0.1}}, {4.5, -63.}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"norGate1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "norGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "norGate1"}]& ]}}, 
          PlotRange -> {{-95.0232, 56.21520000000001}, {-80.1576, 44.8776}}, 
          PlotRangePadding -> 0, Frame -> None, FrameTicks -> False, 
          GridLines -> None, GridLinesStyle -> RGBColor[0.9, 0.9, 0.9], 
          Epilog -> {}, {Frame -> None, PlotRangePadding -> 0}], {18, 282}, {
         Left, Top}, {283.0385811355523, 234}], 
        InsetBox[
         BoxData[
          FormBox[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
              "], {{0, 24}, {24, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", 
            ImageSizeRaw -> {24, 24}, PlotRange -> {{0, 24}, {0, 24}}], 
           TraditionalForm]], 
         Offset[{6, -6}, 
          Scaled[{0, 1}]], 
         Scaled[{0, 1}], {24, 24}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {0, 0}, {0, 0}, {
         349.0385811355523, Automatic}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {349.0385811355523, 0}, {0, 0}, {
         300, Automatic}, {0, 1}], {
         RGBColor[0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
         RectangleBox[
          Offset[{0, 0}, {0, 0}], 
          Offset[{0, 27}, {349.0385811355523, 0}], RoundingRadius -> 5], 
         RectangleBox[
          NCache[
           Offset[{0, 
             Rational[27, 2]}, {0, 0}], 
           Offset[{0, 13.5}, {0, 0}]], 
          Offset[{0, 27}, {349.0385811355523, 0}]]}, {
         RGBColor[0.8705882352941177, 0.8705882352941177, 0.8705882352941177], 
         LineBox[{
           Offset[{0, 27}, {0, 0}], 
           Offset[{0, 27}, {349.0385811355523, 0}]}]}, {
         EdgeForm[
          RGBColor[
          0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
         FaceForm[None], 
         RectangleBox[{
           Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 1}, {
          Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 1, 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
          RoundingRadius -> Offset[5]]}, {
         RGBColor[
         0.43137254901960786`, 0.43137254901960786`, 0.43137254901960786`], 
         InsetBox[
          FormBox[
           StyleBox[
           "fourinput", FontSize -> 9, FontFamily -> "Helvetica", 
            StripOnInput -> False], TraditionalForm], 
          Offset[{12, 12}, {0, 0}], {-1, 0}]}}, 
       WSM`Typeset`PackagePrivate`appearanceState = "Expanded", 
       WSM`Typeset`PackagePrivate`expandedeval = True, 
       WSM`Typeset`PackagePrivate`expandedprimitives = {
        InsetBox[
         GraphicsBox[{{}, {
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-80., 35.}, {-75., 35.}, {-75., 20.}, {-64.377, 
                20.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-80., 5.}, {-75., 5.}, {-75., 20.}, {-64.377, 
                20.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-48.378, 20.}, {-25., 
                20.}, {-25., -30.}, {-1., -30.}}]]}, {{{1., 0.}, {0., 1.}}, {
              0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               LineBox[{{-80., -30.}, {-20., -30.}, {-1., -30.}}]]}, {{{1., 
              0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{15., -30.}, {20., -30.}, {20., -45.}, {
                39., -45.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-80., -30.}, {-75., -30.}, {-75., 20.}, {-64.377, 
                20.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{15., -70.}, {20., -70.}, {20., -45.}, {
                39., -45.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               LineBox[{{-80., -70.}, {-1., -70.}}]]}, {{{1., 0.}, {0., 
              1.}}, {0., 0.}}], 
            GeometricTransformationBox[{
              JoinForm["Round"], 
              CapForm["Butt"], 
              RGBColor[
               NCache[{
                 Rational[46, 85], 
                 Rational[3, 17], 
                 Rational[163, 255]}, {0.5411764705882353, 
                0.17647058823529413`, 0.6392156862745098}]], 
              Dashing[{}], 
              AbsoluteThickness[1], 
              Arrowheads[{}], 
              ArrowBox[
               
               LineBox[{{-80., -30.}, {-77.5, -30.}, {-77.5, -61.736}, {
                5., -61.736}, {-1., -70.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 
              0.}}]}, {
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-90., 35.}], {{{0.1, 0.}, {0., 
                   0.1}}, {-81., 31.5}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-90., 5.}], {{{0.1, 0.}, {0., 
                   0.1}}, {-81., 4.5}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse2\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse2", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse2"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\">=1\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 60.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -70.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.14153846153846156`]}]}, 
                    PlotRange -> {{-50., 50.}, {-80., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -70.}, {0., -70.}, {100., 20.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {-58.377, 20.}], {{{0.1, 
                   0.}, {0., 0.1}}, {-52.539300000000004`, 18.}}], {{{1., 
                  0.}, {0., 1.}}, {0., 0.}}], {}}, "\"orGate1\"", LabelStyle -> 
               "TextStyling"], Annotation[#, "orGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "orGate1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-90., -30.}], {{{0.1, 0.}, {0., 
                   0.1}}, {-81., -27.}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse3\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse3", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse3"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[42, 85], 
                    Rational[181, 255], 
                    Rational[26, 85]}, {0.49411764705882355`, 
                    0.7098039215686275, 0.3058823529411765}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -130.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-180., -80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -130.}, {2., -130.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[127, 255], 0, 
                    Rational[127, 255]}, {
                    0.4980392156862745, 0, 0.4980392156862745}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    
                    LineBox[{{-36., 40.}, {-30., 40.}, {-30., 40.}, {-18., 
                    40.}, {-18., 40.}, {-14., 40.}, {-14., 80.}, {14., 80.}, {
                    14., 40.}, {14., 40.}, {14., 40.}, {28., 40.}, {30., 
                    40.}, {36., 40.}}]]}, {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}}}, {0., 0.}], {-90., -70.}], {{{0.1, 0.}, {0., 
                   0.1}}, {-81., -63.}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"pulse4\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "pulse4", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "pulse4"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"&\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {0., 60.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -71.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.1556923076923077]}]}, 
                    PlotRange -> {{-50., 50.}, {-82., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -71.}, {0., -71.}, {100., 22.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], {
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Bevel"], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    DiskBox[{56., 0.}, {6., 6.}, {0., 6.283185307179586}]}, 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {56., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {5., -30.}], {{{0.1, 0.}, {
                   0., 0.1}}, {4.5, -27.}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"nandGate1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "nandGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "nandGate1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"=1\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {0., 60.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -70.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.14153846153846156`]}]}, 
                    PlotRange -> {{-50., 50.}, {-80., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -70.}, {0., -70.}, {100., 20.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {45., -45.}], {{{0.1, 0.}, {
                   0., 0.1}}, {40.5, -40.5}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"xorGate1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "xorGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "xorGate1"}]& ], 
            TagBox[
             TagBox[
              TooltipBox[{
                GeometricTransformationBox[
                 GeometricTransformationBox[
                  GeometricTransformationBox[
                   GeometricTransformationBox[{{}, {{{{}}, {
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    JoinForm["Round"], 
                    CapForm["Butt"], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    Dashing[{}], 
                    AbsoluteThickness[1], 
                    Arrowheads[{}], 
                    ArrowBox[
                    LineBox[{{50., 0.}, {100., 0.}}]]}, {{{1., 0.}, {0., 
                    1.}}, {0., 0.}}]}, 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\"", PrivateFontOptions -> {
                    "OperatorSubstitution" -> False}, StripOnInput -> False], 
                    TraditionalForm], {2., -120.}, {0, 0}, 
                    BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> Scaled[0.0882]}]}, 
                    PlotRange -> {{-198., 202.}, {-170., -70.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    2., -120.}, {2., -120.}, {400., 100.}, {{1, 0}, {0, 
                    1}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 
                    1}}, {0., 0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[71, 85], 
                    Rational[2, 3], 1}, {
                    0.8352941176470589, 0.6666666666666666, 1}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    
                    RectangleBox[{-50., -100.}, {50., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\">=1\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., 60.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.2830769230769231]}]}, 
                    PlotRange -> {{-50., 50.}, {40., 80.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., 60.}, {0., 60.}, {100., 40.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"Gate\"", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False], TraditionalForm], {0., -70.}, {0, 
                    0}, BaseStyle -> {
                    FontFamily -> "Arial", FontSize -> 
                    Scaled[0.14153846153846156`]}]}, 
                    PlotRange -> {{-50., 50.}, {-80., -60.}}, ImagePadding -> 
                    None, ImageMargins -> None, PlotRangePadding -> None], {
                    0., -70.}, {0., -70.}, {100., 20.}, {{1, 0}, {0, 1}}], {{{
                    1., 0.}, {0., 1.}}, {0., 0.}}], {{{1, 0}, {0, 1}}, {0., 
                    0.}}], 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], {
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Bevel"], 
                    Thickness[0.0016666666666666668`], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]]}], 
                    DiskBox[{56., 0.}, {6., 6.}, {0., 6.283185307179586}]}, 
                    RGBColor[
                    NCache[{
                    Rational[64, 255], 
                    Rational[64, 255], 
                    Rational[64, 255]}, {0.25098039215686274`, 
                    0.25098039215686274`, 0.25098039215686274`}]], 
                    GeometricTransformationBox[{}, {56., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{}, {
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]], 
                    EdgeForm[{
                    Opacity[1], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    RectangleBox[{-100., -100.}, {100., 100.}, RoundingRadius -> 
                    0.], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}], {}}, {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}]}, {{{}}}}, {-60., 0.}], {{{0.1,
                     0.}, {0., 0.8}}, {-54., 0.}}], {{{1., 0.}, {0., 1.}}, {
                    0., 0.}}], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{{{{{}}, {}}, 
                    GeometricTransformationBox[{
                    FaceForm[
                    RGBColor[{1, 1, 1}]], 
                    EdgeForm[{
                    Opacity[1], 
                    JoinForm["Round"], 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]]}], 
                    
                    PolygonBox[{{-100., 100.}, {100., 
                    0.}, {-100., -100.}, {-100., 100.}}], 
                    RGBColor[
                    NCache[{
                    Rational[46, 85], 
                    Rational[3, 17], 
                    Rational[163, 255]}, {0.5411764705882353, 
                    0.17647058823529413`, 0.6392156862745098}]], 
                    GeometricTransformationBox[{}, {0., 0.}]}, {{{1., 0.}, {
                    0., 1.}}, {0., 0.}}]}, {{{}}}}, {100., 0.}], {{{0.1, 
                    0.}, {0., 0.1}}, {90., 0.}}], {{{1., 0.}, {0., 1.}}, {0., 
                    0.}}]}, {}, {}}}}, {0., 0.}], {5., -70.}], {{{0.1, 0.}, {
                   0., 0.1}}, {4.5, -63.}}], {{{1., 0.}, {0., 1.}}, {0., 
                  0.}}], {}}, "\"norGate1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "norGate1", "Tooltip"]& ], 
             Annotation[#, {"WSMComponent", "norGate1"}]& ]}}, 
          PlotRange -> {{-95.0232, 56.21520000000001}, {-80.1576, 44.8776}}, 
          PlotRangePadding -> 0, Frame -> None, FrameTicks -> False, 
          GridLines -> None, GridLinesStyle -> RGBColor[0.9, 0.9, 0.9], 
          Epilog -> {}, {Frame -> None, PlotRangePadding -> 0}], {18, 282}, {
         Left, Top}, {283.0385811355523, 234}], 
        InsetBox[
         BoxData[
          FormBox[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
              "], {{0, 24}, {24, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", 
            ImageSizeRaw -> {24, 24}, PlotRange -> {{0, 24}, {0, 24}}], 
           TraditionalForm]], 
         Offset[{6, -6}, 
          Scaled[{0, 1}]], 
         Scaled[{0, 1}], {24, 24}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {0, 0}, {0, 0}, {
         349.0385811355523, Automatic}], 
        InsetBox[
         GraphicsBox[
          RasterBox[
          RawArray["UnsignedInteger8",{{{255, 255, 255, 255}}, {{255, 255, 
            255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255,
             255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255,
             255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{
            255, 255, 255, 255}}, {{255, 255, 255, 255}}, {{255, 255, 255, 
            255}}, {{255, 255, 255, 252}}, {{255, 255, 255, 248}}, {{255, 255,
             255, 244}}, {{255, 255, 255, 238}}, {{255, 255, 255, 233}}, {{
            255, 255, 255, 226}}, {{255, 255, 255, 221}}, {{255, 255, 255, 
            211}}, {{255, 255, 255, 205}}, {{255, 255, 255, 193}}, {{255, 255,
             255, 187}}, {{255, 255, 255, 174}}, {{255, 255, 255, 168}}, {{
            255, 255, 255, 152}}, {{255, 255, 255, 144}}, {{255, 255, 255, 
            128}}, {{255, 255, 255, 120}}, {{255, 255, 255, 101}}, {{255, 255,
             255, 92}}, {{255, 255, 255, 72}}, {{255, 255, 255, 62}}, {{255, 
            255, 255, 40}}, {{255, 255, 255, 30}}, {{255, 255, 255, 7}}, {{
            255, 255, 255, 0}}}], {{0, 0}, {1, 48}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          AspectRatio -> Full, ImageSize -> {1, 48}, 
           PlotRange -> {{0, 1}, {0, 48}}}], {349.0385811355523, 0}, {0, 0}, {
         300, Automatic}, {0, 1}], {
         RGBColor[0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
         RectangleBox[
          Offset[{0, 0}, {0, 0}], 
          Offset[{0, 27}, {349.0385811355523, 0}], RoundingRadius -> 5], 
         RectangleBox[
          NCache[
           Offset[{0, 
             Rational[27, 2]}, {0, 0}], 
           Offset[{0, 13.5}, {0, 0}]], 
          Offset[{0, 27}, {349.0385811355523, 0}]]}, {
         RGBColor[0.8705882352941177, 0.8705882352941177, 0.8705882352941177], 
         LineBox[{
           Offset[{0, 27}, {0, 0}], 
           Offset[{0, 27}, {349.0385811355523, 0}]}]}, {
         EdgeForm[
          RGBColor[
          0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
         FaceForm[None], 
         RectangleBox[{
           Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 1}, {
          Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 1, 
           Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
          RoundingRadius -> Offset[5]]}, {
         RGBColor[
         0.43137254901960786`, 0.43137254901960786`, 0.43137254901960786`], 
         InsetBox[
          FormBox[
           StyleBox[
           "fourinput", FontSize -> 9, FontFamily -> "Helvetica", 
            StripOnInput -> False], TraditionalForm], 
          Offset[{12, 12}, {0, 0}], {-1, 0}]}}, 
       WSM`Typeset`PackagePrivate`expandedopt = {
       PlotRange -> {{0, 349.0385811355523}, {0, 300}}, 
        ImageSize -> {349.0385811355523, 300}, PlotRangePadding -> 0}, 
       WSM`Typeset`PackagePrivate`expandedsize = {359.0385811355523, 310}, 
       WSM`Typeset`PackagePrivate`expandedrange = {{0, 349.0385811355523}, {0,
         300}}}, 
       DynamicWrapperBox[
        DynamicBox[{WSM`Typeset`PackagePrivate`p, 
          Which[
           And[
           "normal" === "normal", WSM`Typeset`PackagePrivate`appearanceState === 
            "Minimal"], 
           InsetBox[
            BoxData[
             FormBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (
                If[WSM`Typeset`PackagePrivate`expandedeval === False, If[
                    TrueQ[WSMLink`Private`$WSMLinkIsLoaded], 
                    WSM`Typeset`PackagePrivate`appearanceState = "Eval"; 
                    Module[{
                    WSM`Typeset`PackagePrivate`cellobj$, 
                    WSM`Typeset`PackagePrivate`cellEditDup$}, 
                    If[
                    MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["10198df4-e39d-42b3-ba79-39e476216935"]}]]], 
                    WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                    WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = 
                    Dynamic[
                    WSM`Typeset`PackagePrivate`expandedsize, 
                    TrackedSymbols :> {
                    WSM`Typeset`PackagePrivate`expandedeval}]; 
                    CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = 
                    Dynamic[
                    WSM`Typeset`PackagePrivate`expandedrange, 
                    TrackedSymbols :> {
                    WSM`Typeset`PackagePrivate`expandedeval}]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null]; Null, 
                  WSM`Typeset`PackagePrivate`appearanceState = "Expanded"; 
                  Module[{
                    WSM`Typeset`PackagePrivate`cellobj$, 
                    WSM`Typeset`PackagePrivate`cellEditDup$}, 
                    If[
                    MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["10198df4-e39d-42b3-ba79-39e476216935"]}]]], 
                    WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                    WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = 
                    WSM`Typeset`PackagePrivate`expandedsize; 
                    CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = 
                    WSM`Typeset`PackagePrivate`expandedrange; 
                    If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null]; Null), Appearance -> None, 
               ContentPadding -> False, ImageSize -> {Automatic, Automatic}, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              TraditionalForm]], 
            Offset[{6, -6}, 
             Scaled[{0, 1}]], 
            Scaled[{0, 1}]], 
           And[
           "normal" === "normal", WSM`Typeset`PackagePrivate`appearanceState === 
            "Expanded"], 
           InsetBox[
            BoxData[
             FormBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (
                WSM`Typeset`PackagePrivate`appearanceState = "Minimal"; 
                Module[{
                  WSM`Typeset`PackagePrivate`cellobj$, 
                   WSM`Typeset`PackagePrivate`cellEditDup$}, 
                  If[
                   MathLink`CallFrontEnd[
                    FrontEnd`BoxReferenceFind[
                    FE`BoxReference[
                    EvaluationBox[], {
                    FE`Parent["10198df4-e39d-42b3-ba79-39e476216935"]}]]], 
                   WSM`Typeset`PackagePrivate`cellobj$ = EvaluationCell[]; 
                   WSM`Typeset`PackagePrivate`cellEditDup$ = 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate]; 
                   If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    False]; CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, ImageSize}] = {88, 93}; 
                   CurrentValue[
                    FrontEnd`SelectionObject, {
                    GraphicsBoxOptions, PlotRange}] = {{-10, 78}, {-26, 67}}; 
                   If[WSM`Typeset`PackagePrivate`cellEditDup$, 
                    CurrentValue[
                    WSM`Typeset`PackagePrivate`cellobj$, CellEditDuplicate] = 
                    True]; Null]]; Null), Appearance -> None, ContentPadding -> 
               False, ImageSize -> {Automatic, Automatic}, Evaluator -> 
               Automatic, Method -> "Preemptive"], TraditionalForm]], 
            Offset[{10, -10}, 
             Scaled[{0, 1}]]], True, {}]},
         ImageSizeCache->{{-1.4815750733716584`, 
          325.4142135623731}, {-142.9142135623731, 137.78198083213437`}},
         TrackedSymbols:>{WSM`Typeset`PackagePrivate`p}], 
        Which[WSM`Typeset`PackagePrivate`appearanceState === "Minimal", 
          WSM`Typeset`PackagePrivate`p = {
             InsetBox[
              BoxData[
               FormBox[
                GraphicsBox[
                 TagBox[
                  RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UNASiF2AGMT+PwoGMXBABQPtHIoA0P0li32cXBwCYl2GgV9SWz08/J3cvB2H
gV+CEl0S69yji92GgV/qtvpBkI+Jz/76/bPc1iyL2XZk2sWX198NtOtIA8h+
8bDwAPplYdCG1el71ucf2FZzbKBdRxpA9gtyGru84Q6aXwZ/cUekX7p0F19d
9R+OBqd3cNUvQ9EvuMAw88tcv017Wk5BEKZfLq65faDv7KNTL3ChL6+/DbQn
oGBzxeEuvSW9hlCE6ZdZnusmWKxYFr9jRdIuTLQgdMvqjL0D7Qko2FF/bLb3
RjgX0y+/f/wBIlzagfEC9BFdXIoAuPI+Qb/gN3ag/FIw2xvYtvQKchoGfoks
cAO2LV3cHfH45T+JvYOB8ktyk0fRfO+sCV4QF7699+E/Nr+QBAbKL/B6P0Ij
op6hvld/MaTgmhewmWxjB9wvkHi5d+QpsGrAbI+RBAaJXyBg1C9wMKjql6Ho
F1xg1C9wMOoXGoFRv8DBQPlloMoxqg+GAM2p2eiXWOcOb49BAK39gtzwpqJf
8mZ4ARvJwKYy3fwC9AiN/OIX5QxEw8MvwAZ/1Tpf0Gi/ndP9/ff3d5zYXnNs
Y8lhYIcdz9AEfnRm0fXZ3huAJFaE6ZdzOy8fm3np6qa7QL0/Pv0k2y/w9liY
Vth8h/n9xkuBbf4+42WzfTZgHZcgBi2J3j7JeiUuhOmXWL/EqQ6rp9itWhC6
ZX3+Acr9Au+LUZjACAKsaezD08+/f/yhpDDH2k4eEL9AAB6/EOykDxW/EFNc
YPUsrf2Cy97/lPkFK6CDX3ABkvxCzDDvAPrl5t5HPYZLiCn6gF6eZL1qTdY+
/AYObLwA6wJiqiSgyoP95yAjYHjAUEljxIBRv1AFUFK/YAWD0y/EgAGpX7Da
+58yvwDNATaSQ1JBSy/gZl7bdn+q4xqyG5bEIDLaMMT4BdgXc/NG74uR3don
BpHXHiPGL0CPAOPFJ8yZWn0igoB2foG3LV1sXIB9sW2Vh84vv0nneNm35vC+
7jMnZ18+vfgaVfwSohMC6ouZLpvpQvPMguaXjOBcYA6d5rwWKAv0DuV+gcQ1
2V1U4gHWNEa5vVj7L7QGtBu7GE5+IaNhMHTtHfwAAP+YO0I=
                   "], {{0, 57}, {68, 0}}, {0, 255}, ColorFunction -> 
                   RGBColor], 
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                  Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                 ImageSizeRaw -> {68, 57}, PlotRange -> {{0, 68}, {0, 57}}], 
                TraditionalForm]], {0, 0}, {0, 0}, {68, 57}], {
              RGBColor[
              0.43137254901960786`, 0.43137254901960786`, 
               0.43137254901960786`], 
              InsetBox[
               FormBox[
                StyleBox[
                "\"fourinput\"", FontSize -> 9, FontFamily -> "Helvetica", 
                 StripOnInput -> False], TraditionalForm], 
               NCache[{34, 
                 Rational[-29, 2]}, {34, -14.5}], {0, 0}]}, {
              EdgeForm[
               RGBColor[
               0.5843137254901961, 0.807843137254902, 0.9411764705882353]], 
              FaceForm[None], 
              
              RectangleBox[{-10, -25}, {77, 67}, RoundingRadius -> 
               Offset[5]]}, 
             InsetBox[
              BoxData[
               FormBox[
                GraphicsBox[
                 TagBox[
                  RasterBox[CompressedData["
1:eJzN1VlI1FEUx/FJzT3TxkooKitaaHkoIYOKjAha6MESErJwyMSgkUahlRZ6
CqJoh6CihbaHiuihoH2lImgvMtozjTKzUtP09L3c86c/k+NGD/3hM/7nD/Ob
M+eee031FWbOD/N4PEXRvGTmLs4IBHKXzkjkTZa/qCDfnzdvsr84Lz8vkO4L
52GKioC0fDWqX/iJH6jAG9zFaWxFAcajB2I8erUi3/mOBtShGl/wHg9xFjtR
iEnohbh25tejBpUoxWNcxC4swlT0Rfw/yP+AJziP3Qhofn8ktCHf6b+TX635
pj+PcE5sf0z9U5CKTu3IN+tr+u+s71vcF7u+27FQ/vS/Lf1xanfm5zs+4SXu
4CQ2Ih/j0FNav77BtZvefxXb+xLcwBGsxVyMQndEt5DfKH/3vVZr/yx29h+I
7b2ZnSWYieHogo6u/MYQnJ7Ua1+cdS3T2m/iONZjASaKXdvOCHPlN4TgZNdq
tunLR7wSu2/NvjJzuQLZSEMKYj2uSzOC1WnNNdqTSs1+LXbPXsZhrNPazdwM
RJK7N5pfozW6mWdmDqvEzmKZ1m2yr+IYNqEYWRiptcd7gi793Sbnm/6t0nor
tOZ3eI57uKI934ZlyMEY9EEiIprIN7NWrlnlqlRn5IXYM+a22HPgKLZgOXzI
wAB4xXVmBuU/1Xko0TqfaabZm7dwCaewDxvEzuIczR6CrohDhxD55vPXxO6V
69rfCziDE9iPzVgDP2aJPecHo5vpubjmsYn8vTiIQ+oA9mCH2NleJfbsysU0
pKOfq+7wUNmab9Zppda3Wu/NsyKx/5NmYzrGYpjY88Xs0djm6nblm32drbOQ
o/fmmTnLJ2A0hoo9F5ORgKiWcl355swYIXb/pem9eTYIvcXOtVdzY1pTc1B+
kv7eZOXV90maafoQ2dZcV364fj5KRapm1+1/uX4DOnc/KA==
                   "], {{0, 24}, {24, 0}}, {0, 255}, ColorFunction -> 
                   RGBColor], 
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                  Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                 ImageSizeRaw -> {24, 24}, PlotRange -> {{0, 24}, {0, 24}}], 
                TraditionalForm]], 
              Offset[{6, -6}, 
               Scaled[{0, 1}]], 
              Scaled[{0, 1}], {24, 24}]}; Null, 
          WSM`Typeset`PackagePrivate`appearanceState === "Eval", 
          WSM`Typeset`PackagePrivate`p = {{
              EdgeForm[WSM`Typeset`PackagePrivate`$bordercolor], 
              FaceForm[None], 
              RectangleBox[{
                Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 1}, {
               Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 1, 
                Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
               RoundingRadius -> Offset[5]]}, 
             InsetBox[
              Evaluate[
               ToBoxes[
                ProgressIndicator[Appearance -> "Percolate"], 
                StandardForm]]]}; 
          Module[{WSM`Typeset`PackagePrivate`md$}, {
              WSM`Typeset`PackagePrivate`expandedsize, 
               WSM`Typeset`PackagePrivate`md$} = 
             WSM`Typeset`PackagePrivate`getExpandedGraphic[
              "fourinput", "10198df4-e39d-42b3-ba79-39e476216935"]; {
              WSM`Typeset`PackagePrivate`expandedprimitives, 
               WSM`Typeset`PackagePrivate`expandedopt} = 
             WSM`Typeset`PackagePrivate`separateGraphics[
              WSM`Typeset`PackagePrivate`md$]; 
            WSM`Typeset`PackagePrivate`expandedrange = Replace[PlotRange, 
               Flatten[WSM`Typeset`PackagePrivate`expandedopt]]; 
            WSM`Typeset`PackagePrivate`expandedeval = True; 
            WSM`Typeset`PackagePrivate`expandedprimitives = 
             Join[WSM`Typeset`PackagePrivate`expandedprimitives, {{
                 EdgeForm[WSM`Typeset`PackagePrivate`$bordercolor], 
                 FaceForm[None], 
                 RectangleBox[{
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1] + 
                   1}, {Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 2] - 
                   1, 
                   Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 2]}, 
                  RoundingRadius -> Offset[5]]}, 
                
                With[{WSM`Typeset`PackagePrivate`leftmost$ = 
                  Part[WSM`Typeset`PackagePrivate`expandedrange, 1, 1], 
                  WSM`Typeset`PackagePrivate`bottommost$ = 
                  Part[WSM`Typeset`PackagePrivate`expandedrange, 2, 1]}, {
                  RGBColor[
                  0.43137254901960786`, 0.43137254901960786`, 
                   0.43137254901960786`], 
                  InsetBox[
                   FormBox[
                    StyleBox[
                    "fourinput", FontSize -> 9, FontFamily -> "Helvetica", 
                    StripOnInput -> False], TraditionalForm], 
                   
                   Offset[{12, 12}, {
                    WSM`Typeset`PackagePrivate`leftmost$, 
                    WSM`Typeset`PackagePrivate`bottommost$}], {-1, 0}]}]}]; 
            Null]; WSM`Typeset`PackagePrivate`appearanceState = "Expanded"; 
          Null, WSM`Typeset`PackagePrivate`appearanceState === "Expanded", 
          WSM`Typeset`PackagePrivate`p = 
           WSM`Typeset`PackagePrivate`expandedprimitives; Null]; Null,
        ImageSizeCache->{{-1.4815750733716584`, 
         325.4142135623731}, {-142.9142135623731, 137.78198083213437`}},
        SynchronousUpdating->False,
        TrackedSymbols:>{WSM`Typeset`PackagePrivate`appearanceState}],
       Initialization:>(
        WSM`Typeset`PackagePrivate`expandedeval = 
         Not[WSM`Typeset`PackagePrivate`expandedeval]; 
        WSM`Typeset`PackagePrivate`expandedeval = 
         Not[WSM`Typeset`PackagePrivate`expandedeval]; Null)],
      "fourinput"],
     WSM`ModelTag["fourinput"]],
    Editable -> False,
    SelectWithContents -> True,
    BoxID -> "10198df4-e39d-42b3-ba79-39e476216935",
    ContentSelectable->False,
    DefaultBaseStyle->{
     "Graphics", FrontEnd`GraphicsHighlightColor -> RGBColor[0, 0.46775, 1], 
      ComponentwiseContextMenu -> {"GraphicsBox" -> {
          MenuItem["Copy Model", 
           KernelExecute[
            CopyToClipboard[
             ReleaseHold[
              MakeExpression[
               MakeBoxes[
                SystemModel["fourinput"]], StandardForm]]]], MenuEvaluator -> 
           Automatic], 
          MenuItem["Copy Model Name", 
           KernelExecute[
            CopyToClipboard[
             StringJoin["\"", "fourinput", "\""]]], MenuEvaluator -> 
           Automatic], Delimiter, 
          MenuItem["Simulate Model", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                RowBox[{"SystemModelSimulate", "[", "\"fourinput\"", "]"}]], 
               "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], 
          MenuItem["Show Preferred Plots in Model", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                RowBox[{"SystemModelPlot", "[", "\"fourinput\"", "]"}]], 
               "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], 
          MenuItem["Show Model Information", 
           FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], After, Cell], 
             FrontEnd`NotebookWrite[
              FrontEnd`InputNotebook[], 
              Cell[
               BoxData[
                RowBox[{"SystemModel", "[", 
                  RowBox[{"\"fourinput\"", ",", "\"Summary\""}], "]"}]], 
               "Input"]], 
             FrontEnd`SelectionMove[
              FrontEnd`InputNotebook[], Previous, Cell], 
             FrontEnd`SelectionEvaluateCreateCell[
              FrontEnd`InputNotebook[]]}]], Delimiter, 
          MenuItem["Open in SystemModeler Model Center", 
           KernelExecute[
            WSMLink`WSMModelCenter["fourinput"]], MenuEvaluator -> Automatic], 
          MenuItem["Open in SystemModeler Simulation Center", 
           KernelExecute[
            WSMLink`WSMSimulationCenter["fourinput"]], MenuEvaluator -> 
           Automatic]}}},
    ImageSize->Dynamic[
     FE`WSM`Typeset`PackagePrivate`expandedsize499, 
      TrackedSymbols :> {FE`WSM`Typeset`PackagePrivate`expandedeval499}],
    PlotRange->Dynamic[
     FE`WSM`Typeset`PackagePrivate`expandedrange499, 
      TrackedSymbols :> {FE`WSM`Typeset`PackagePrivate`expandedeval499}]]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.771086310955653*^9, {3.771086396673029*^9, 3.771086404286304*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"27370600-b091-47d6-ac76-45e143c2beb7"],

Cell[TextData[StyleBox["Below  is the timing diagram simulated the above \
circuit:",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.771088836091583*^9, 3.7710888661057158`*^9}, {
  3.7710906774096346`*^9, 3.7710906948829083`*^9}, {3.7711026866536846`*^9, 
  3.771102689129256*^9}},ExpressionUUID->"93553f68-6e8c-4891-b925-\
2f745a71e936"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourinput", "=", 
   RowBox[{"SystemModelPlot", "[", 
    RowBox[{
     RowBox[{"SystemModelSimulate", "[", 
      RowBox[{"fourGateConnectedToDigitalgEntries", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<pulse1.y\>\"", ",", "\"\<pulse2.y\>\"", ",", "\"\<pulse3.y\>\"", 
       ",", "\"\<pulse4.y\>\""}], "}"}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List","ListIcon",GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["4", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["848", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
         Typeset`open]},
        "IconizedObject"]],
      {PlotStyle -> Dashing[{Small, Small}], 
       PlotLegends -> {
        "50% duty cycle step (A)", "80% duty cycle step (B)", 
         "30% duty cycle step (C)", "40% duty cycle step (D)"}, PlotStyle -> 
       Thickness[Large], AxesLabel -> {"time(sec)", "voltage(V)"}},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7710862674185257`*^9, 3.771086298437276*^9}, {
   3.771086421773327*^9, 3.7710864633467784`*^9}, 3.7710866696648617`*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"c7c7588a-f34a-477a-9e7e-9c2f83cc0b9a"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"Column", "[", 
   RowBox[{"{", 
    RowBox[{"fourinput", ",", 
     RowBox[{"SystemModelPlot", "[", 
      RowBox[{
       RowBox[{"SystemModelSimulate", "[", 
        RowBox[{"fourGateConnectedToDigitalgEntries", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.5"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "\"\<xorGate1.y\>\"", "}"}], ",", 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"List","ListIcon",GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["List", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["3", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["664", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
           Typeset`open]},
          "IconizedObject"]],
        {PlotLegends -> {"output"}, PlotStyle -> {
           RGBColor[1, 0, 0], 
           Thickness[Tiny]}, AxesLabel -> {"time(sec)", "voltage(V)"}},
        SelectWithContents->True,
        Selectable->False]}], "]"}]}], "}"}], "]"}],
  FontSize->14]], "Input",
 CellChangeTimes->{{3.7710865191245627`*^9, 3.7710865294478054`*^9}, {
   3.7710865712915597`*^9, 3.771086589120971*^9}, 3.7710866564234943`*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"375689ee-83fd-4576-8f71-31095a94f58c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
           TagBox[
            TooltipBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                NCache[
                 Rational[1, 180], 0.005555555555555556]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJx123nwdfUcwPFnGhNjDMmWbNmZxqTBGPtD9iyRaRrTNE2jJGlDKolKsofK
LkslWZKEypakQqUSSZLs2ZPsjN8573m+r3Fm7vPPndfEfe6955zP+3Pu7/fc
c9d9nrvbRuvWrfvTzdetmx7//88m6/99yg2XP3PXBz/u/71++J+H7vmllx3z
1MV/3274lbc/9SnXHfy8xf9+x+GDrr/f1rf45E6L//8uw4++9tlvedfeuy6e
7wXDZz/tVhttedTui+ffY/iRZ1x4wFc+uOfi79tr+My7H/nb55y59+Lv33f4
/edtcdr+e+y3eD37D1/9j+kvfOni9b1s+C5bXXOfjQ97+eL1HjD8/Bc8au0Z
X7F4/QcOv/c905+DFu/n4OGrLvnb9j876ZWL93fI8J1vtsOtH3T6qxbv99Dh
HR8xPeGrF+//NcPPePgbHr/LL16z+DwOG/7dc6ZnPGzx+Rw+/Ka9fvWvU244
fPF5HTG85VF3XHsLRyw+v9eu9Lc//KTP3/if1y4+3yOHX7z26W12s9ctPm++
5ZUn7PuYWx61+Pz549Pb3+T1i+PBT5+e7o5vWBwf/s308d/1jYvjxdOneem9
3rQ4fvzAnY4+96YHvHlxPPmba8+2+VZvWRxfftHbf3/I4x721sXx5rUXt/aW
j14cf37ez05633lbvG1xPvCJa5/elSdw5wf/5T9XHHj9/d6+OF/4ifMJwZ0/
fOxm0xt6x+J84vnlncadX/yQ+c8xi/ONjzjnW2tnEHf+8XfXjv6Ojzh2cf6t
9r3nv4A7P/mle0wH5LjF+cpfv+kBa0ecO3/fOXy7+QVz5zNPr/aMC7nz+13D
p3/gjyefvy13vvNG8wfAnf/vHn7ufAJx1wN/ZHq7V3DXx3uG/zw93Y7c9cJP
mC6Hq7nr573D75hO552564mvO3g6INz19b7hrecTnrve+LDjtlk7hbjr7/3D
l91rOsDc9cj3nM7u33PX5weG95sul32565W/Np2ON3LX7/HDt50vUO56Xu35
4/wHd71/cHh+uYdw1z/3+KHFPOCPnb/t2hXPzQfebu1q3fQIbl7w36dP/zxu
fvCHNp8ukA8v5gk/dT7g3HzhP508vUBu3vC7117d2hW1mD+8/mE7r11iH1nM
I/71v6Y3zM0nns6enY7m5hXPb/dSbn7x/HSbnrCYZzyPq+25+caNF27e8Twe
ruTmH796urw3O3ExD/n+8wXFzUP+znx5cfORXzFdHtdw85LvMZ3Odz9pMT/5
gun024Wbp7zPfHi5+cp3agAs5u1Hh786vbz7cPOXX7j79Iebxzxd3H88mZvP
PE3LA6/n5vXJwzvPT8jNb954HljcPOfpaNz+VG6+8w69wMW8/9jwf6fLbWtu
/vNHp9N5f64H/Kz5DXN94L9Oh+MmrhenDB8/vd2Hc/3gJ88fINeTVb7F+j9M
+Tib6w2/c5v5ChyuPx8ffux8gLge8S+ncXso1yeex+E5XK94HjcbfWK4fvF8
OW/D9Yzny+VI7vTm+Wifz/WOv3fgHLTh+sevmj6+p3E95PvOJyTXR774oukP
10t++THTgP3UcP3ku80nONdT/sa8XnJ95ZdM4/Vyrrd8hy6Y4frLX57Gww5c
j3m3eZ3ierza8+l+Fddrnk+fzT89XL95Pjw7cT3n1guu7zw/3bXc42nDzQOu
/9x84PYBbl5w+wE3P7h9gZsn3P7AzRdun+DmDbdfcPOH2zc+M9w84vYPbj5x
+wg3r7j9hJtf3L7CzS9uf+HmGbfPcPON22+4eccNoNMX84/bf7h5yO1D3Hzk
9iOeT/dDuX2JW0e504+bp9w+xc1Xbr/i5u1nh9u3uPnL7V/cPOb2MW4+c/sZ
N6+5fY2b39z+xs1zbp/j5ju333Hz/ozh9j1u/nP7H9cDbh/k+sDth6tdP7j9
kesJt09yfeH2S6433L7J9edzw+2fXI+4fZTrE7efcr3i9lWuX9z+yvWM22e5
vnH7Ldc7bt/9/KJ/3P7L9ZDbh7k+cvsx10tuX+a+juDWU66f3D7N9ZTbr7m+
cvv2Fxa95fZvrr/cPs71mNvPuT5z+zrXa24d4frN7fNcz7n9nns8c9F3ru9c
37m+c33n+s71nes713eu71zfub5zfef6zvWd6/tZi75zfef6zvWd6zvXd67v
XN+5vq/yhu8ruN5zved6z/We6z0XwLOH6z3Xe673XO+53nO95+6P+G1z77n7
Ja73XO+53nO953rP9f6Lw/We6z3Xe673XO+53nO953rP9Z7rPTdeud5zved6
z/We6/2Xhus91/vVrv9c/7n+c/3nes/1nus913uu91zvud5zved6z/X+y8P1
nus913uu91zvud5zved6z/We6z3Xe673XO+53nO9/8pwved6z/We6z3Xe673
XO/5i3Pvuftlvs18gvNZc15Wu/5z/ef6z/Wf6/9Xh+s/13+u/1z/uf5z/ef6
z/Wf6z/Xf+7j5PrP9Z/rP/d4zmIecPsANx+4/YCbD9y+wM0Lbn/g5ge3T3Dz
hNsvuPnC7RvcvOH2D27+cPsIN4+4/WS1m1fc/sLNL26f4eYZt99w843bd7h5
x+0/3Pzj9qGvLeYhtx9x85Hbl7h5ye1P3Pzk9ilunnL7FTdfuX2Lm7fc/sXN
X24f4+Yxt49x85nbz7h5ze1r3Pzm9jdunnP7HDffuf2Om/fcvsfN/3OHW4i4
HnD7INcHbj/kesHti1w/uP2R6wm3T3J94fZLnnNwAPf9Ene/yX3fxN1/ct8/
cfej3H7K3Q5x44brFbe/cv3i9lmuZ9x+y/WN23e/vugdt/9y/eP2Ya6H/NB5
P17lDffL3P7M9ZPbp7mecvs111du3+Z6y+3fXH+5fZzrMbefc33m9nWu19z+
zvWb2+e5nnP7Pdd3bt/nHs8brvdc77nec73nes/1nus913uu91zvud5zved6
z/We6/1q13+u/1z/uf5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdf7bwzX
e673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6
z/We6z3Xe673XO+53nO953rP9f784YLA9Z7rPdd7rvdc77nec73nes/1nus9
13uu99z9Jff9Etd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6/0F
w/We6z3Xe673XO+578O4vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu
71zfub5zpwvXd67vXN+5vnN95/rOPV646DvXd67vXN+5vnN95/rO9Z3rO9d3
ru9c37m+c33nes71nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO
9fybi55zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz1f5Q33
81zfub5zfef6zvWd6zvXd67vXN+5vnN95/r+reECwPWd6zvXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c98ncz9P4r5f5n6+xPWd6zvXd67v3Hjg+s71nX86
93216z3Xe673XO+/PVzvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z33eNFwved6z/We6z3X
+9Wu/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n
+s/1n+s/13+u/1z/uf5fPFz/uf5z/ef6z/Wf6z/Xf67/XP+5/nP95/rP9X+1
2we4fYDbB7h9gOs/13+u/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nP9v2TRf67/
XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uZ8388/n/nP9
5/rP9Z/rP9d/7v6e6z3Xe673XO+/s+g913uu91zvud5zved6z/We6z3Xe673
XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nju8XO+53nO953rP9Z57vHSF
N3y/x+0D3AnD7QfcfOD2BW5ecPsDNz+4/YGbJ9w+wc0Xbr/g5g23b3Dzh9s/
uHnE7SPcfOL2E25ecfsKz+Nrd25/4Xn87M3tM9zPK7n9hvv5JbfvcN9vcvsP
930ntw9x339y+xH3fSi3L61291PcPsXdX3H7FTdvuX2Lm7/c/sXNY24f4+Yz
t59x85rb17j5ze1v3Dzn9jluvnP7HTfvuX2Pm/+XDbf/cT3g9kGuD9x+yPWC
2xe5fnD7I9cTbp/k+sLtl1xvuH2T6w+3f3I94vZRrk/cfsr1ittXuX5x+yvX
M25/5frG7bNc77j9lusft+9yPeT2X66P3D7M9ZLbj7l+cvsy11Nuf+b6yu3T
XG+5/ZrrL7dvcz3m9m+uz9w+zvWa28+5fnP7Otdzbn/n+s7t89zj5Yu+c33n
BgLXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5z
fefuT7i+c/crXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nOs513Ou51zP
uZ5zPed6zvWc6znXcy6/XM+5nnM953rO9ZzrOddzrudcz7mecz3nev7dRc+5
nnM953rO9ZzrOddzrudcz7mecz3nft9rlTd8f8T1nes713eu71zfub5zfef6
zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zf
ub5zfef6zvWd6zvXd67vXN+5vvMP5r6vdr3nes/1nus913uu91zvud5zvece
rxiu91zvuYHB9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We
6z3Xe673XO+53nO953rP9Z77vpIPmXu/2vWf6z/Xf67/XP+5/nP95/rP9Z/r
P9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nP9
5/rP9f97w/Wf6z/Xf67/XP+5/vMWc2BWu32A2we4fYDbB7j7e67/XP+5/nP9
5/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf67/
XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/d3/P9Z7rPdd7rvdc77ne
c73nes/1nnv8/qL3XO+5AcH1nus913uu91zvud5zved6z/We6z3Xe673XO+5
3nO953rP9Z7rPdd7rvdc77ner/KG+32u/1z/uf5z9/vczy+53nO953rP9Z7r
Pdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO9
53rP9Z7rPdd7rvdc768crvd8qwbYStd/rv9c/7n+c/f/XO+53nO953rP9Z7r
Pdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO9
53rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z10eXO+53nO9
53rP9Z7rPdd7rvdc77nHHwzXe6733IDges/1nus913uu91zvud5zved6z/We
6z3Xe673XO+53nO953rP9Z7rPdd7rvdc37m+c33n+s71nes713eu79zvK3F9
535/ies713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c
37m+c33n+s71nes713eu71zfr1r0nbuf53rO9ZzrOddzrudcz7mecz3nes71
nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7me
cz3nes71nOv5Km+4n+f6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+
c33n+s71nes713eu71zfub5zjz8cru9c37kBwfWd6zvXd67vXN+5vnN95/rO
9Z3rO9d3ru+rXe+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zv
ud5zved6z/We+/1lrvfc7zNzved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
Ln9c77l/P7Xa9Z/rP9d/rv9c/7n+c/3n+n/1cP3n+s/1n+s/13+u/1z/uf5z
/ef6z/Wf6z/Xf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u
/1z/+XVz/1e7fYDbB7h9gNsHuP5z/ef6z/Wf6z/Xf67/XP+5/nP95/rP9Z/r
P9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5zjz9a9J/rPzcguP5z/ef6z/Wf
6z/Xf67/XP+5/nP95/rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5z
ved6z/We6z3Xe673XO+53nO953rP9Z7rPffvmbjec73nes/1nus913uu91zv
ud6v8ob7fa7/XP+5/nP3+1zvud5zved6z/We6z3Xe6731wzXe673XO+53nO9
53rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673
vP/c+9Wu/1z/uf5z/efu/7nec73nes/1nus913uu91zvud5zved6z/We6z3X
e673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus99/jj4XrP9Z4bEFzv
ud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus9
13uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd77t8zc73nes/1
nus913uu91zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3r+7WLvnN95/rO
9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5
vnN95+7nuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3n
es71nOs513Ou51zPuZ5zPedOP67nXM+5nnM953rO9ZzrOff4kxXeZP3/AEH4
DLE=
               "]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                NCache[
                 Rational[1, 180], 0.005555555555555556]], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJx123nwdfUcwPFnGkNjGvuSkBAyxtBgTNaHbFkj0zSmaZqGJEmFNokk2VPZ
d9pkTULSRqkUWkSSJHv2LTvjd87bc17jO3Off+68Ju5z7z3nfN6fc3+/5+67
vfhZz9to3bp1v7/ZunXT4///2Xj9v07+wxVP2+2Bj/5/r1/8j0P3PPOlxz5p
+O/bL3757T71xOsPfvbwv99p8UE33HvrjT+x8/D/33XxI657xpvfufduw/M9
d/EZ222y0f2O3H14/j0WP+y0i/Y/+4N7Dn/fXotP3/yIXz3z9L2Hv3+fxe87
f4tT9ttj3+H17Lf4mr9Pf+FLhtf30sV3fsC1W970sJcNr3f/xc957sPXnvGA
4fUfuPg9757+HDS8n4MXX/3Nv+7w4xNePry/Qxbf6SY73uL+p75ieL+HLt5p
m+kJXzm8/1ctfupDX/+YXX/6quHzOGzxr585PeNhw+fz6sVv3Ovn/zz5D68e
Pq/DF9/vyDusvYXDh8/vNSt9yYcf//k//fs1w+d7xOIXrn16m97ktcPnzTe/
6rh9HnnzI4fPnz82vf1bvW44Hvzk6enu8Prh+PAvp4//Lm8YjhdPn+Zl93jj
cPz4vjsf9ZUbt3rTcDz5a2vPttkD3jwcX37B0b855NEPectwvHntxa295aOG
48/P/vEJ7z1/i7cO5wMfv/bpXXUcd37wn/995YE33Pvo4Xzhx80nBHf+8Ns2
nd7QMcP5xPPLO4U7v/hB859jh/ONDz/34rUziDv/+FtrR3+nbd42nH+rfKv1
95z/Au785JfsMR2Qty/ufOXzbtxq7Yhz5+87Ft92fsHc+czTqz3tIu78fufi
U9//u5MueAp3vvNG8wfAnf/vWvys+QTirgf+yPR2r+Suj3cv/uP0dDtx1ws/
drocruGun/csPmY6nXfhrie+/uDpgHDX13sXbz2f8Nz1xoe9fdu1U4i7/t63
+PJ7TAeYux757tPZ/Rvu+nz/4n2ny2Uf7nrlL0+n45+46/cDi289X6Dc9bza
88f5d+56/+Di+eUewl3/3OOHFjcP+KMXPGXtiufmA2+/drXe5nBuXvDfpk//
fG5+8Ic2my6QDy9unvCT5gPOzRf+/UnTC+TmDb9r7dWtXVGLmz+8/iG7rF1i
H1ncPOJf/HN6w9x84uns2fkobl7x/HYv4+YXz093m+MWN894Hlc7cPONGy/c
vON5PFzFzT9+5XR5b3r84uYh32e+oLh5yJfOlxc3H/mA6fK4lpuXfLfpdN78
hGF+8oXT6bcrN0/5xfPh5eYr37EBMMzbExefM728Lbn5y8/fffrDzWOeLu7f
ncTNZ56m5YE3cPP6pMW7zE/IzW++6TywuHnO09G43ae4+c479gKHef/Rxf+Z
LretufnPJ06n835cD/jp8xvm+sB/mQ7HjVwvTl78gentPpTrBz9h/gC5nqz2
b6d8nMH1ht+x7XwFDv352OJHzQeI6xH/bBq3h3J94nkcnsv1iudxs9HHh37x
fDlvy/WM58vlCO705vloX8D1jr994By0oX/8iunj247rId9rPiG5PvI3vj79
4XrJLzt2GrCfHPrJd51PcK6n/NV5veT6yi+axusVXG/59l0wQ3/5rGk87Mj1
mJ83r1Ncj1d7Pt2v5nrN8+mz2aeHfvN8eHbmes6tF1zfeX6667jHU4Z5wPWf
mw/cPsDNC24/4OYHty9w84TbH7j5wu0T3Lzh9gtu/nD7xmeGecTtH9x84vYR
bl5x+wk3v7h9hZtf3P7CzTNun+HmG7ffcPOOG0CnDvOP23+4ecjtQ9x85PYj
nk/3Q7l9iVtHudOPm6fcPsXNV26/4ubtZxe3b3Hzl9u/uHnM7WPcfOb2M25e
c/saN7+5/Y2b59w+x813br/j5v1pi9v3uPnP7X9cD7h9kOsDtx+udv3g9keu
J9w+yfWF2y+53nD7Jtefzy1u/+R6xO2jXJ+4/ZTrFbevcv3i9leuZ9w+y/WN
22+53nH77ueH/nH7L9dDbh/m+sjtx1wvuX2Z+zqCW0+5fnL7NNdTbr/m+srt
218Yesvt31x/uX2c6zG3n3N95vZ1rtfcOsL1m9vnuZ5z+z33ePrQd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nev7F4e+c33n+s71nes713eu71zf
ub6v8obvR7nec73nes/1nus9F8AzFtd7rvdc77nec73nes/dH/Fb595z90tc
77nec73nes/1nuv9lxbXe673XO+53nO953rP9Z7rPdd7rvfceOV6z/We6z3X
e673Zy6u91zvV7v+c/3n+s/1n+s913uu91zvud5zved6z/We6z3X+7MW13uu
91zvud5zved6z/We6z3Xe673XO+53nO953rP9f7sxfWe6z3Xe673XO+53nO9
5y/Nveful/mW8wnOX5zzssob+s/1n+s/13+u/+cM/ef6z/Wf6z/Xf67/XP+5
/nP95/rPfZxc/7n+c/3nHs9d3Dzg9gFuPnD7ATcfuH2Bmxfc/sDND26f4OYJ
t19w84XbN7h5w+0f3Pzh9hFuHnH7yWo3r7j9hZtf3D7DzTNuv+HmG7fvcPOO
23+4+cftQ19e3Dzk9iNuPnL7Ejcvuf2Jm5/cPsXNU26/4uYrt29x85bbv7j5
y+1j3Dzm9jFuPnP7GTevuX2Nm9/c/sbNc26f4+Y7t99x857b97j5/5XFLURc
D7h9kOsDtx9yveD2Ra4f3P7I9YTbJ7m+cPslzznYn/t+ibvf5L5v4u4/ue+f
uPtRbj/lboe4ccP1ittfuX5x+yzXM26/5frG7bvnDb3j9l+uf9w+zPWQHzzv
x6tdL7n9mesnt09zPeX2a66v3L7N9Zbbv7n+cvs412NuP+f6zO3rXK+5/Z3r
N7fPcz3n9nuu79y+zz2eP/Se6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77ne
c71f7frP9Z/rP9d/rvdc77nec73nes/1nus913uu91zvud5zved6/9Wh91zv
ud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus9
13uu91zvud5zved6z/We6/0FQ++53nO953rP9Z7rPdd7rvdc77nec73nes/1
nru/5L5f4nrP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zvb9w6D3X
e673XO+53nPfh3F95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5z
fedOF67vXN+5vnN95/rO9Z17vGjoO9d3ru9c37m+c33n+s71nes713eu71zf
ub5zfed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71/GtD
z7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nq/yhu9bub5z
fef6zvWd6zvXd67vXN+5vnN95/rO9f3ixQWA6zvXd67vXN+5vnN95/rO9Z3r
O9d3ru9c37m+c33nvk/mfp7Efb/M/XyJ6zvXd67vXN+58cD1nes7/2ju+2rX
e673XO+53l+yuN5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77ne
c73nes/1nus913uu91zvud5zved6z/We6z3Xe+7x64vrPdd7rvdc77ner/KG
/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6z/Wf6z/X
f67/XP+5/nP95/r/jaH/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+r/a7QPc
PsDtA9w+wPWf6z/Xf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+f3NxQeD6z/Wf
6z/Xf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n/t5M/9k7j/Xf67/
XP+5/nP95+7vud5zved6z/X+0sX1nus913uu91zvud5zved6z/We6z3Xe673
XO+53nO953rP9Z7rPdd7rvdc77nec73nes8dXq73XO+53nO953rPPV620l3/
3D7AnTDcfsDNB25f4OYFtz9w84PbH7h5wu0T3Hzh9gtu3nD7Bjd/uP2Dm0fc
PsLNJ24/4eYVt6/wPL525/YXnsfP3tw+w/28kttvuJ9fcvsO9/0mt/9w33dy
+xD3/Se3H3Hfh3L70mp3P8XtU9z9FbdfcfOW27e4+cvtX9w85vYxbj5z+xk3
r7l9jZvf3P7GzXNun+PmO7ffcfOe2/e4+X/54vY/rgfcPsj1gdsPuV5w+yLX
D25/5HrC7ZNcX7j9kusNt29y/eH2T65H3D7K9YnbT7lecfsq1y9uf+V6xu2v
XN+4fZbrHbffcv3j9l2uh9z+y/WR24e5XnL7MddPbl/mesrtz1xfuX2a6y23
X3P95fZtrsfc/s31mdvHuV5z+znXb25f53rO7e9c37l9nnu8Yug713duIHB9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd+7+
hOs7d7/C9Z3rO9d3ru9c37m+c33n+s71nes713eu71zPuZ5zPed6zvWc6znX
c67nXM+5nnM95/LL9ZzrOddzrudcz7mecz3nes71nOs513Ou598aes71nOs5
13Ou51zPuZ5zPed6zvWc6zn3+16rvPH/+s71nes713eu71zfub5zfef6zvWd
6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5z
fef6zvWd6zvXd67vXN+5vvN3576vdr3nes/1nus913uu91zvud5zvecer1xc
77necwOD6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zved6z/We6z33fSUfMvd+lTf0n+s/13+u/1z/uf5z/ef6z/Wf6z/X
f67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6
z/X/20P/uf5z/ef6z/Wf6z9vMQdmtdsHuH2A2we4fYC7v+f6z/Wf6z/Xf67/
XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6z/Wf
6z/Xf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/f3XO+53nO953rP9Z7rPdd7
rvdc77nH7yyu91zvuQHB9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5z
ved6z/We6z3Xe673XO+53q92/ef6z/Wf6z93v8/9/JLrPdd7rvdc77nec73n
es/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc
77nec73nes/1/qqh97xJA2yl6z/Xf67/XP+5+3+u91zvud5zved6z/We6z3X
e673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6
z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nLg+u91zvud5zved6
z/We6z3Xe6733ON3h95zvecGBNd7rvdc77nec73nes/1nus913uu91zvud5z
ved6z/We6z3Xe673XO+53nO95/rO9Z3rO9d3ru9c37m+c33nfl+J6zv3+0tc
37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3r
O9d3ru9c37m+c33n+n710Hfufp7rOddzrudcz7mecz3nes71nOs513Ou51zP
uZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71nOs5
13Ou56u84ft8ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67v
XN+5vnN95/rO9Z3rO/f4vcX1nes7NyC4vnN95/rO9Z3rO9d3ru9c37m+c33n
+s71fbXrPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673
XO+53nO/v8z1nvt9Zq73XO+53nO953rP9Z7rPdd7rvdc77nec73nes/lj+s9
9++nVnlD/7n+c/3n+s/1n+s/13+u/9cM/ef6z/Wf6z/Xf67/XP+5/nP95/rP
9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf67/XP/5
tXP/V7t9gNsHuH2A2we4/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u
/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nOP319c/7n+cwOC6z/Xf67/XP+5/nP9
5/rP9Z/rP9d/rv9c77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673
XO+53nO953rP9Z7rPdd7rvdc77nec/+eies913uu91zvud5zved6z/We6/1q
13+u/1z/uf5z9/tc77nec73nes/1nus913uu99cOved6z/We6z3Xe673XO+5
3nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/vNvV/t
+s/1n+s/13/u/p/rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We
6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec48/GHrP9Z4bEFzvud5zved6
z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zv
ud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd77t8zc73nes/1nus913uu
91zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3r+3VD37m+c33n+s71nes7
13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c/fz
XM+5nnM953rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc
6znXc67nXM+5nnOnH9dzrudcz7mecz3nes71nHv84QpvvP6/HIkfcQ==
               "]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[
                NCache[
                 Rational[1, 180], 0.005555555555555556]], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJx123nwdfUcwPFnGkNjDNmTLXumMTQ0JutD9r0yTWOapmlISJIkSaSSPS3K
LirJkiQkS6VFtlSikmQn+xaSjN8573m+r3Fm7vPPndfEfe6955zP+3Pu7/fc
a7eXbf+CjdatW/fnW6xbNz3+/5+N1//nlL9c9szdHvLY//f64X8f9OIv73v0
Uxb//TnDr7nDqU/+6QHPXfzvdxp+9XX332rjT+68+P/vOvyoa5/99uP22m3x
fM8fPuupt9poy8N3Xzz/HsOPOOOi/b76oRcv/r49h8+8x2G/2+7MvRZ//97D
7z9/89P22ePli9ezz/DVN0x/4SsWr2/f4bs++Jr73vzgVy5e737Dz3v+I9ee
8VWL17//8HvfM/159eL9HDB81cX/3OHnJ71m8f4OHL7LzXa89YNOf+3i/R40
vNM20xO+bvH+Xz/8jIe/+XG7/vL1i8/j4OHfbzc948GLz+cNw2/d89c3nvKX
Nyw+r0OGtzz8Tmtv4ZDF53foSn/rw0/8/N9uOnTx+R42/JK1T2/Tm71x8Xnz
La84Ye9H3/LwxefPH5/e/iZvWhwPftr0dHd68+L48G+nj/9ub1kcL54+zUvu
/dbF8eMH7nzE167f4m2L48nfWHu2zR789sXx5Rcd+YcDH7v1OxbHm9de3Npb
PmJx/Pm5Pz/pfedv/s7F+cAnrn16V5zAnR/895su3/+6+x+5OF/4CfMJwZ0/
fMym0xs6anE+8fzyTuPOL37o/OfoxfnGh5zzzbUziDv/+HtrR3+nbY5ZnH+r
fZ/5L+DOT37FHtMBedfifOXzrt9i7Yhz5++xw7efXzB3PvP0as+4iDu/jxs+
/QN/OvnCp3PnO280fwDc+f/u4e3nE4i7Hvgj09u9nLs+3jP81+npduKuF378
dDlczV0/7x0+ajqdd+GuJ/7pAdMB4a6v9w1vNZ/w3PXGB79r27VTiLv+3j98
6b2nA8xdj3yv6ez+A3d9fmD45dPlsjd3vfK50+n4N+76/eDwbecLlLueV3mT
9fPHeQN3vX9oeH65B3LXP/d4/HDzgD924dPXrnhuPvBz1q7W2x3CzQv+1/Tp
n8/NDz5+s+kC+fBw84SfMh9wbr7wn0+eXiA3b/jda69u7Yoabv7w+q13WbvE
PjLcPOLf3Di9YW4+8XT27HwEN694fruXcPOL56e73QnDzTOex9UO3Hzjxgs3
73geD1dw849fN13em5443DzkB8wXFDcP+bvz5cXNR37VdHlcw81Lvud0Ot/j
pOHmJ399Ov125eYpv2w+vNx85Ts3AIabtx8dPnt6effl5i+/cPfpDzePebq4
/3QyN595mpb7X8fN65OHd5mfkJvffPN5YHHznKejcYdTufnOO/YCh5v3Hxv+
73S5bcXNf/7odDrvw/WAnzW/Ya4P/I/pcFzP9eKU4Q9Ob/fhXD/4SfMHyPVk
tf845eMsrjd87LbzFThcfz4+/Jj5AHE94l9N4/Ygrk88j8NzuF7xPG42+sRw
/eL5ct6W6xnPl8th3OnN89G+kOsdf3//OWjD9Y9fO318T+V6yPebT0iuj/yd
b09/uF7yK4+eBuynhusn330+wbme8gXzesn1lV86jdfLuN7yHbtghusvf2Ua
DztyPeYXzOsU1+NV3nj9fLpfxfWa59Nns08P12+eD8/OXM+59YLrO89Pdy33
eNpw84DrPzcfuH2AmxfcfsDND25f4OYJtz9w84XbJ7h5w+0X3Pzh9o3PDDeP
uP2Dm0/cPsLNK24/4eYXt69w84vbX7h5xu0z3Hzj9htu3nED6PTh5h+3/3Dz
kNuHuPnI7Uc8n+4HcfsSt45ypx83T7l9ipuv3H7FzdvPDrdvcfOX27+4eczt
Y9x85vYzbl5z+xo3v7n9jZvn3D7HzXduv+Pm/RnD7Xvc/Of2P64H3D7I9YHb
D1e7fnD7I9cTbp/k+sLtl1xvuH2T68/nhts/uR5x+yjXJ24/5XrF7atcv7j9
lesZt89yfeP2W6533L77+eH6x+2/XA+5fZjrI7cfc73k9mXu6whuPeX6ye3T
XE+5/ZrrK7dvf2HRW27/5vrL7eNcj7n9nOszt69zvebWEa7f3D7P9Zzb77nH
Mxd95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5/cdF3ru9c37m+
c33n+s71nes71/fVrvdc77nec73nes/1ngvgWYvec73nes/1nus913vu/ojf
Ofeeu1/ies/1nus913uu91zvv7ToPdd7rvdc77nec73nes/1nus913tuvHK9
53rP9Z7rPdf7Ly96z/V+tes/13+u/1z/ud5zved6z/We6z3Xe673XO+53nO9
/8qi91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7r/VcXved6z/We6z3X
e673XO/5S3Pvuftlvs18gvMX57ysdv3n+s/1n+s/1/+zF/3n+s/1n+s/13+u
/1z/uf5z/ef6z32cXP+5/nP95x7PWcwDbh/g5gO3H3DzgdsXuHnB7Q/c/OD2
CW6ecPsFN1+4fYObN9z+wc0fbh/h5hG3n6zyhu+7uP2Fm1/cPsPNM26/4eYb
t+9w847bf7j5x+1D5w43D7n9iJuP3L7EzUtuf+LmJ7dPcfOU26+4+crtW9y8
5fYvbv5y+xg3j7l9jJvP3H7GzWtuX+PmN7e/cfOc2+e4+c7td9y85/Y9bv5/
bbiFiOsBtw9yfeD2Q64X3L7I9YPbH7mecPsk1xduv+Q5B/tx3y9x95vc903c
/Sf3/RN3P8rtp9ztEDduuF5x+yvXL26f5XrG7bdc37h997zhesftv1z/uH2Y
6yE/bN6PV7tecvsz109un+Z6yu3XXF+5fZvrLbd/c/3l9nGux9x+zvWZ29e5
XnP7O9dvbp/nes7t91zfuX2fezx/uN5zved6z/We6z3Xe673XO+53nO953rP
9Z7rPdd7rvervKH/XP+5/nP953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
9xcM13uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77ne
c73nes/1nus913uu91zvud5zved6z/X+wuGCwPWe6z3Xe673XO+53nO953rP
9Z7rPdd7rvfc/SX3/RLXe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1
nuv914frPdd7rvdc77nec9+HcX3n+s71nes713eu71zfub5zfef6zvWd6zvX
d67vXN+5vnN9504Xru9c37m+c33n+s71nXu8aLi+c33n+s71nes713eu71zf
ub5zfef6zvWd6zvXd67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71nOs5
13Ou51zPv7HoOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6znX
89Wu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/r+zUXfub5zfef6zvWd6zvX
d67vXN+5vnN95/rO9Z3rO9d37vtk7udJ3PfL3M+XuL5zfef6zvWdGw9c37m+
88/mvq92ved6z/We6/23Fr3nes/1nus913uu91zvud5zved6z/We6z3Xe673
XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu99zjtxe953rP9Z7r
Pdf71a7/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z
/ef6z/Wf6z/Xf67/XP+5/n9n0X+u/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nP9
X+UN3+dz+wC3D3D7ANd/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6f/Fw
QeD6z/Wf6z/Xf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n/t5M/9i
7j/Xf67/XP+5/nP95+7vud5zved6z/X+u8P1nus913uu91zvud5zved6z/We
6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes8dXq73XO+53nO953rP
PV6y0l3/3D7AnTDcfsDNB25f4OYFtz9w84PbH7h5wu0T3Hzh9gtu3nD7Bjd/
uP2Dm0fcPsLNJ24/4eYVt6/wPL525/YXnsfPXtw+w/28kttvuJ9fcvsO9/0m
t/9w33dy+xD3/Se3H3Hfh3L70ipvuJ/i9inu/orbr7h5y+1b3Pzl9i9uHnP7
GDefuf2Mm9fcvsbNb25/4+Y5t89x853b77h5z+173Py/dLj9j+sBtw9yfeD2
Q64X3L7I9YPbH7mecPsk1xduv+R6w+2bXH+4/ZPrEbePcn3i9lOuV9y+yvWL
21+5nnH7K9c3bp/lesftt1z/uH2X6yG3/3J95PZhrpfcfsz1k9uXuZ5y+zPX
V26f5nrL7ddcf7l9m+sxt39zfeb2ca7X3H7O9Zvb17mec/s713dun+ceLxuu
71zfuYHA9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvX
d67vXN+5+xOu79z9Ctd3ru9c37m+c33n+s71nes713eu71zfub5zPed6zvWc
6znXc67nXM+5nnM953rO9ZzLL9dzrudcz7mecz3nes71nOs513Ou51zPuZ5/
b9Fzrudcz7mecz3nes71nOs513Ou51zPud/3Wu36zvWd6zvXd67vXN+5vnN9
5/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67v
XN+5vnN95/rO9Z3rO9d3ru9c37m+85Vz31e73nO953rP9Z7rPdd7rvdc77ne
c4+XL3rP9Z4bGFzvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc
77nec73nes/1nus913uu91zvue8r+cC596td/7n+c/3n+s/1n+s/13+u/1z/
uf5z/ef6z/Wf6z/Xf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/
13+u/1z/v7/oP9d/rv9c/7n+c/3nzefArPKG74e5fYDbB7h9gLu/5/rP9Z/r
P9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nP9
5/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z9/dc77nec73nes/1
nus913uu91zvuccfDNd7rvfcgOB6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/1nus913uu91zvV7v+c/3n+s/1n7vf535+yfWe6z3Xe673
XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We
6z3Xe673XO+53nO953p/xXC951s1wFZ4Q/+5/nP95/rP3f9zved6z/We6z3X
e673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6
z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus9d3lwved6
z/We6z3Xe673XO+53nO95x6vHK73XO+5AcH1nus913uu91zvud5zved6z/We
6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77m+c33n+s71nes713eu71zfud9X
4vrO/f4S13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c
37m+c33n+s71nes713eu71zfub5fNVzfuft5rudcz7mecz3nes71nOs513Ou
51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71
nOs513Ou51zPuZ6vdn3n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c48/XPSd6zs3ILi+c33n+s71nes713eu71zf
ub5zfef6zvV9tes913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7r
Pdd7rvdc77nec7+/zPWe+31mrvdc77nec73nes/1nus913uu91zvud5zved6
z+WP6z3376dWu/5z/ef6z/Wf6z/Xf67/XP+vXvSf6z/Xf67/XP+5/nP95/rP
9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf67/XP+5
/nP95zfO/V/lDd/nc/sAtw9w+wDXf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+
c/3n+s/1n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf+7xR8P1n+s/NyC4/nP95/rP
9Z/rP9d/rv9c/7n+c/3n+s/1nus913uu91zvud5zved6z/We6z3Xe673XO+5
3nO953rP9Z7rPdd7rvdc77nec73nes/1nus99++ZuN5zved6z/We6z3Xe673
XO+53q92/ef6z/Wf6z93v8/1nus913uu91zvud5zved6f81wved6z/We6z3X
e673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6
z/vMvV/lDf3n+s/1n+s/d//P9Z7rPdd7rvdc77nec73nes/1nus913uu91zv
ud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nHHw/Xe6733IDg
es/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc
77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nP/npnrPdd7
rvdc77nec73n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+vHa7vXN+5
vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvX
d67vXN+5+3mu51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudc
z7mecz3nes71nOs513Ou51zPudOP6znXc67nXM+5nnM953rOPf5kpf8HAKj/
yg==
               "]]}, 
             TemplateBox[{"\"pulse3.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse3.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[
                NCache[
                 Rational[1, 180], 0.005555555555555556]], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJx123nwdfUcwPFnGkNjDNkTkp1pDA3G2B+yr6WmaUzTNA3JVinaJJJkD6Ws
ifaQJKSiIskSlUiSJFv2LTvjd857nu9rnJn7/HPnNXGfe+855/P+nPv7Pffc
dc/nvXCjdevW/eEW69ZNj///Z+P1/z71j1c8e9eHPP7/vX74nwe/5LxXHvm0
xX/fZvjVdzj9qdcfuP3if7/j8AE33m+rjT++0+L/v8vwY6577tuP2WPXxfO9
YPicp99qoy0P323x/LsPP+qsS/b94odfsvj7XjZ89uaH/Xrbs/dY/P17DX/w
oi3O2Hv3Vyxez97D1/xj+gv3Wby+Vw7f9cHX3ufmh7xq8Xr3HX7+Cx699oz7
LV7//sPvf9/054DF+zlw+Opv/W27G0589eL9HTR8l5vtcOsHnfmaxfs9eHjH
R05P+NrF+3/d8LMe8eYn7PKz1y0+j0OGf7Pt9IyHLD6f1w+/9WW/+Nepf3z9
4vM6dHjLw++09hYOXXx+b1jhTdZ/4yNP/uyf/8N9vocNv3Tt09v0Zm8c7vPm
W151/F6PveXhw33+fNr09jd503DHg58xPd2d3jzc8eFfTR//3d4y3PHi6dO8
7F5vHe748QN3OuJLNz3gbcMdT/7a2rNt9uC3D3d8+cXv+u1Bj3/4O4Y73rz2
4tbe8hHDHX/e/oYTP3DRFu8c7nzgE9Y+vauO584P/st/rtz/xvu9a7jzhZ80
nxDc+cNHbTq9oXcPdz7x/PLO4M4vfuj858jhzjc+9IKvr51B3PnH31k7+js+
8qjhzr/Vvvf8F3DnJ++z+3RA3rM4X/nLNz1g7Yhz5+/Rw7efXzB3PvP0as+6
hDu/jxk+80O/P/niZ3LnO280fwDc+f/e4efNJxB3PfBHp7d7JXd9vG/4T9PT
7chdL/zE6XK4hrt+3j/87ul03pm7nvj6A6cDwl1fHxjeaj7hueuND3nP1mun
EHf9fXD48ntNB5i7Hvme09n9W+76/NDwK6bLZS/ueuULp9Pxz9z1e+zwbecL
lLueV3v+OP/BXe8fHp5f7kHc9c89HreYB3zKxc9cu+K5+cDbrF2ttzuUmxf8
9+nTv4ibH3zcZtMF8pHFPOGnzQecmy/8h5OnF8jNG37v2qtbu6IW84fXP3zn
tUvso4t5xL/81/SGufnE09mz0xHcvOL57V7GzS+en+52xy/mGc/jajtuvnHj
hZt3PI+Hq7j5x6+dLu9NT1jMQ77/fEFx85C/PV9e3Hzk/abL41puXvI9ptN5
8xMX85O/Op1+u3DzlPecDy83X/nODYDFvD1p+Pzp5d2Hm7/8ot2mP9w85uni
/v3J3HzmaVrufyM3r08e3nl+Qm5+883ngcXNc56Oxh1O5+Y779ALXMz7U4b/
O11uW3Hzn0+aTue9uR7wc+Y3zPWB/zodjpu4Xpw6fOz0dh/B9YOfMn+AXE9W
eeP1v5vycQ7XGz566/kKHK4/pw0/bj5AXI/459O4PZjrE8/j8AKuVzyPm40+
Nly/eL6ct+Z6xvPlchh3evN8tC/mesff3X8O2nD949dMH9/TuR7yfecTkusj
X/rN6Q/XS37VkdOA/cRw/eS7zyc411P+yrxecn3ll0/j9Qqut3zHLpjh+stf
mMbDDlyP+YXzOsX1eLXn0/1qrtc8nz6bfXK4fvN8eHbies6tF1zfeX6667jH
M4abB1z/ufnA7QPcvOD2A25+cPsCN0+4/YGbL9w+wc0bbr/g5g+3b3xquHnE
7R/cfOL2EW5ecfsJN7+4fYWbX9z+ws0zbp/h5hu333DzjhtAZy7mH7f/cPOQ
24e4+cjtRzyf7gdz+xK3jnKnHzdPuX2Km6/cfsXN208Pt29x85fbv7h5zO1j
3Hzm9jNuXnP7Gje/uf2Nm+fcPsfNd26/4+b9WcPte9z85/Y/rgfcPsj1gdsP
V7t+cPsj1xNun+T6wu2XXG+4fZPrz2eG2z+5HnH7KNcnbj/lesXtq1y/uP2V
6xm3z3J94/ZbrnfcvvvZRf+4/ZfrIbcPc33k9mOul9y+zH0dwa2nXD+5fZrr
Kbdfc33l9u3PLXrL7d9cf7l9nOsxt59zfeb2da7X3DrC9Zvb57mec/s993j2
ou9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvX988v+s71nes713eu
71zfub5zfef6vtr1nus913uu91zvud5zATxn0Xuu91zvud5zved6z90f8Tvn
3nP3S1zvud5zved6z/We6/25i95zved6z/We6z3Xe673XO+53nO958Yr13uu
91zvud5zvT9v0Xuu96u84fsfrv9c/7n+c73nes/1nus913uu91zvud5zved6
/4Xhes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53n9xuN5zved6z/We
6z3Xe673fO7ce+5+mW8zn+D8+Tkvq13/uf5z/ef6z/X//OH6z/Wf6z/Xf67/
XP+5/nP95/rP9Z/7OLn+c/3n+s89XjDcPOD2AW4+cPsBNx+4fYGbF9z+wM0P
bp/g5gm3X3Dzhds3uHnD7R/c/OH2EW4ecfvJajevuP2Fm1/cPsPNM26/4eYb
t+9w847bf7j5x+1DFy7mIbcfcfOR25e4ecntT9z85PYpbp5y+xU3X7l9i5u3
3P7FzV9uH+PmMbePcfOZ28+4ec3ta9z85vY3bp5z+xw337n9jpv33L7Hzf8v
DbcQcT3g9kGuD9x+yPWC2xe5fnD7I9cTbp/k+sLtlzznYF/u+yXufpP7vom7
/+S+f+LuR7n9lLsd4sYN1ytuf+X6xe2zXM+4/ZbrG7fvfnnRO27/5frH7cNc
D/lh8368yhvul7n9mesnt09zPeX2a66v3L7N9Zbbv7n+cvs412NuP+f6zO3r
XK+5/Z3rN7fPcz3n9nuu79y+zz1eNFzvud5zved6z/We6z3Xe673XO+53nO9
53rP9Z7rPdf71a7/XP+5/nP953rP9Z7rPdd7rvdc77nec73nes/1nus913uu
918Zrvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO9
53rP9Z7rPdd7rvdc77nec73nes/1nuv9xcMFges913uu91zvud5zved6z/We
6z3Xe673XO+5+0vu+yWu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7r
Pdf7rw7Xe673XO+53nO9574P4/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu
71zfub5zfef6zp0uXN+5vnN95/rO9Z3rO/d4yaLvXN+5vnN95/rO9Z3rO9d3
ru9c37m+c33n+s71nes513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO
9ZzrOdfzry16zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71
fLXrO9d3ru9c37m+c33n+s71nes713eu71zfub5/fdF3ru9c37m+c33n+s71
nes713eu71zfub5zfef6zvWd+z6Z+3kS9/0y9/Mlru9c37m+c33nxgPXd67v
/JO576u84f6e6z3Xe6733xiu91zvud5zved6z/We6z3Xe673XO+53nO953rP
9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/Wee/zmcL3nes/1
nus91/vVrv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf67/XP+5
/nP95/rP9Z/rP9d/rv9c/7n+Xzpc/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6
z/V/tdsHuH2A2we4fYDrP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/f/W
cEHg+s/1n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nP95/rP9Z/7eTP/
dO4/13+u/1z/uf5z/efu77nec73nes/1/tuL3nO953rP9Z7rPdd7rvdc77ne
c73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+5w8v1nus913uu91zv
ucfLVnjD/s/tA9wJw+0H3Hzg9gVuXnD7Azc/uP2BmyfcPsHNF26/4OYNt29w
84fbP7h5xO0j3Hzi9hNuXnH7Cs/jazduf+F5/OzB7TPczyu5/Yb7+SW373Df
b3L7D/d9J7cPcd9/cvsR930oty+tdvdT3D7F3V9x+xU3b7l9i5u/3P7FzWNu
H+PmM7efcfOa29e4+c3tb9w85/Y5br5z+x0377l9j5v/lw+3/3E94PZBrg/c
fsj1gtsXuX5w+yPXE26f5PrC7Zdcb7h9k+sPt39yPeL2Ua5P3H7K9YrbV7l+
cfsr1zNuf+X6xu2zXO+4/ZbrH7fvcj3k9l+uj9w+zPWS24+5fnL7MtdTbn/m
+srt01xvuf2a6y+3b3M95vZvrs/cPs71mtvPuX5z+zrXc25/5/rO7fPc4xWL
vnN95wYC13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c
37m+c33n7k+4vnP3K1zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9ZzrOddz
rudcz7mecz3nes71nOs513Muv1zPuZ5zPed6zvWc6znXc67nXM+5nnM953r+
nUXPuZ5zPed6zvWc6znXc67nXM+5nnM9537fa7XrO9d3ru9c37m+c33n+s71
nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+
c33n+s71nes713eu71zfub5zfef6zt+f+77KG75/43rP9Z7rPdd7rvdc77ne
c73nHq8crvdc77mBwfWe6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73n
es/1nus913uu91zvud5zved6z/We+76SD5p7v9r1n+s/13+u/1z/uf5z/ef6
z/Wf6z/Xf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/
uf5z/ef6z/X/u8P1n+s/13+u/1z/uf7zFnNgVrt9gNsHuH2A2we4+3uu/1z/
uf5z/ef6z/Wf6z/Xf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/
13+u/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nP95/rP9Z/rP3d/z/We6z3Xe673
XO+53nO953rP9Z57/N6i91zvuQHB9Z7rPdd7rvdc77nec73nes/1nus913uu
91zvud5zved6z/We6z3Xe673XO+53q/yhvt9rv9c/7n+c/f73M8vud5zved6
z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zv
ud5zved6z/We6z3Xe673XO+vGq73fKsG2ErXf67/XP+5/nP3/1zvud5zved6
z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zv
ud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes9dHlzv
ud5zved6z/We6z3Xe673XO+5x+8P13uu99yA4HrP9Z7rPdd7rvdc77nec73n
es/1nus913uu91zvud5zved6z/We6z3Xe673XN+5vnN95/rO9Z3rO9d3ru/c
7ytxfed+f4nrO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvX
d67vXN+5vnN95/rO9Z3rO9d3ru9c369e9J27n+d6zvWc6znXc67nXM+5nnM9
53rO9ZzrOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6znXc67n
XM+5nnM953rO9Zzr+WrXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71
nes713eu71zfub5zfef6zvWd6zv3+INF37m+cwOC6zvXd67vXN+5vnN95/rO
9Z3rO9d3ru9c31d5w/0913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP
9Z7rPdd7rvdc77nec7+/zPWe+31mrvdc77nec73nes/1nus913uu91zvud5z
ved6z+WP6z3376dWu/5z/ef6z/Wf6z/Xf67/XP+vGa7/XP+5/nP95/rP9Z/r
P9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nP9
5/rP9Z/rP79x7v9qtw9w+wC3D3D7ANd/rv9c/7n+c/3n+s/1n+s/13+u/1z/
uf5z/ef6z/Wf6z/Xf67/XP+5/nP95/rP9Z/rP9d/7vGHw/Wf6z83ILj+c/3n
+s/1n+s/13+u/1z/uf5z/ef6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc
77nec73nes/1nus913uu91zvud5zved6z/We6z3375m43nO953rP9Z7rPdd7
rvdc77ner/KG+32u/1z/uf5z9/tc77nec73nes/1nus913uu99cO13uu91zv
ud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus9
13uu97z33PvVrv9c/7n+c/3n7v+53nO953rP9Z7rPdd7rvdc77nec73nes/1
nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPff4o+F6z/We
GxBc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP
9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe+7fM3O9
53rP9Z7rPdd7rvdc37m+c33n+s71nes713eu71zfub5zfef6zvWd6/t1i75z
fef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu
71zfub5zfefu57mecz3nes71nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5
nnM953rO9ZzrOddzrudcz7mecz3nTj+u51zPuZ5zPed6zvWc6zn3+OOV/h9Z
eAZB
               "]]}, 
             TemplateBox[{"\"pulse4.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse4.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               PointSize[
                NCache[
                 Rational[1, 180], 0.005555555555555556]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               PointSize[
                NCache[
                 Rational[1, 180], 0.005555555555555556]], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               PointSize[
                NCache[
                 Rational[1, 180], 0.005555555555555556]], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]]}, 
             TemplateBox[{"\"pulse3.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse3.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               PointSize[
                NCache[
                 Rational[1, 180], 0.005555555555555556]], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}]]}, 
             TemplateBox[{"\"pulse4.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse4.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse3.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse3.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse4.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse4.y"}], 
             "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse1.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse2.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse2.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse3.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse3.y"}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               Dashing[{Small, Small}], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"pulse4.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"pulse4.y"}], 
             "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"time(sec)\"", TraditionalForm], 
           FormBox["\"voltage(V)\"", TraditionalForm]}, 
         AxesOrigin -> {0, 2.9444444444444446`}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {
            FormBox["\"t\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 0.5}, {2.9444444444444446`, 4.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"50% duty cycle step (A)\"", "\"80% duty cycle step (B)\"", 
           "\"30% duty cycle step (C)\"", "\"40% duty cycle step (D)\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
           TagBox[
            TooltipBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                NCache[
                 Rational[1, 120], 0.008333333333333333]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1:eJx13HnwdfUcwPFnGkNjDNkTkp1pDA3G2B+yr6WmaUzTNA3JVinaJJJkD6Ws
ifaQJKSiIskSlUiSJFv2LTvjd857nu9rnJn7/HPnNbjPvfec83l/zv39Hvfc
dc/nvXCjdevW/eEW69ZNj///Z+P1/z71j1c8e9eHPP7/vX74nwe/5LxXHvm0
xX++zfCr73D6U68/cPvFf3/H4QNuvN9WG398p8X/fpfhx1z33Lcfs8eui+d7
wfA5T7/VRlsevtvi+XcfftRZl+z7xQ+/ZPH3vWz47M0P+/W2Z++x+Pv3Gv7g
RVucsffur1i8nr2Hr/nH9Bfus3h9rxy+64Ovvc/ND3nV4vXuO/z8Fzx67Rn3
W7z+/Yff/77pzwGL93Pg8NXf+tt2N5z46sX7O2j4Ljfb4dYPOvM1i/d78PCO
j5ye8LWL9/+64Wc94s1P2OVnr1t8HocM/2bb6RkPWXw+rx9+68t+8a9T//j6
xed16PCWh99p7S0cuvj83rDCm6z/xkee/Nk//4f7fA8bfunap7fpzd443OfN
t7zq+L0ee8vDh/v8+bTp7W/ypuGOBz9jero7vXm448O/mj7+u71luOPF06d5
2b3eOtzx4wfudMSXbnrA24Y7nvy1tWfb7MFvH+748ovf9duDHv/wdwx3vHnt
xa295SOGO/68/Q0nfuCiLd453PnAJ6x9elcdz50f/Jf/XLn/jfd713DnCz9p
PiG484eP2nR6Q+8e7nzi+eWdwZ1f/ND5z5HDnW986AVfXzuDuPOPv7N29Hd8
5FHDnX+rfe/5L+DOT95n9+mAvGdxvvKXb3rA2hHnzt+jh28/v2DufObp1Z51
CXd+HzN85od+f/LFz+TOd95o/gC48/+9w8+bTyDueuCPTm/3Su76eN/wn6an
25G7XviJ0+VwDXf9vH/43dPpvDN3PfH1B04HhLu+PjC81XzCc9cbH/KerddO
Ie76++Dw5feaDjB3PfI9p7P7t9z1+aHhV0yXy17c9coXTqfjn7nr99jh284X
KHc9r/LG6+eP8x/c9f7h4fnlHsRd/9zjccPNAz7l4meuXfHcfOBt1q7W2x3K
zQv++/TpX8TNDz5us+kC+chw84SfNh9wbr7wH06eXiA3b/i9a69u7Ypa9IvX
P3zntUvso8PNI/7lv6Y3zM0nns6enY7g5hXPb/cybn7x/HS3O364ecbzuNqO
m2/ceOHmHc/j4Spu/vFrp8t70xOGm4d8//mC4uYhf3u+vLj5yPtNl8e13Lzk
e0yn8+YnDjc/+avT6bcLN095z/nwcvOV79wAGG7enjR8/vTy7sPNX37RbtMf
bh7zdHH//mRuPvM0Lfe/kZvXJw/vPD8hN7/55vPA4uY5T0fjDqdz85136AUO
N+9PGf7vdLltxc1/Pmk6nffmesDPmd8w1wf+63Q4buJ6cerwsdPbfQTXD37K
/AFyPVnt3035OIfrDR+99XwFDtef04YfNx8grkf882ncHsz1iedxeAHXK57H
zUYfG65fPF/OW3M94/lyOYw7vXk+2hdzvePv7j8Hbbj+8Wumj+/pXA/5vvMJ
yfWRL/3m9IfrJb/qyGnAfmK4fvLd5xOc6yl/ZV4vub7yy6fxegXXW75jF8xw
/eUvTONhB67H/MJ5neJ6vNrz6X4112ueT5/NPrnoN8+HZyeu59x6wfWd56e7
jns8YzEPuP5z84HbB7h5we0H3Pzg9gVunnD7AzdfuH2CmzfcfsHNH27f+NRi
HnH7BzefuH2Em1fcfsLNL25f4eYXt79w84zbZ7j5xu033LzjBtCZi/nH7T/c
POT2IW4+cvsRz6f7wdy+xK2j3OnHzVNun+LmK7dfcfP208PtW9z85fYvbh5z
+xg3n7n9jJvX3L7GzW9uf+PmObfPcfOd2++4eX/WcPseN/+5/Y/rAbcPcn3g
9sPVrh/c/sj1hNsnub5w+yXXG27f5PrzmeH2T65H3D7K9YnbT7lecfsq1y9u
f+V6xu2zXN+4/ZbrHbfvfnbRP27/5XrI7cNcH7n9mOslty9zX0dw6ynXT26f
5nrK7ddcX7l9+3OL3nL7N9dfbh/neszt51yfuX2d6zW3jnD95vZ5rufcfs89
nr3oO9d3ru9c37m+c33n+s71nes713eu71zfub5zfef6zvX984u+c33n+s71
nes713eu71zfub6vdr3nes/1nus913uu91wAz1n0nus913uu91zvud5z90f8
zrn33P0S13uu91zvud5zved6f+6i91zvud5zved6z/We6z3Xe673XO+58cr1
nus913uu91zvz1v0nuv9Km/4PpzrP9d/rv9c77nec73nes/1nus913uu91zv
ud5/Ybjec73nes/1nus913uu91zvud5zved6z/We6z3Xe673Xxyu91zvud5z
ved6z/We6z2fO/eeu1/m28wnOH9+zstq13+u/1z/uf5z/T9/uP5z/ef6z/Wf
6z/Xf67/XP+5/nP95z5Orv9c/7n+c48XDDcPuH2Amw/cfsDNB25f4OYFtz9w
84PbJ7h5wu0X3Hzh9g1u3nD7Bzd/uH2Em0fcfrLKG+5PuP2Fm1/cPsPNM26/
4eYbt+9w847bf7j5x+1DFw43D7n9iJuP3L7EzUtuf+LmJ7dPcfOU26+4+crt
W9y85fYvbv5y+xg3j7l9jJvP3H7GzWtuX+PmN7e/cfOc2+e4+c7td9y85/Y9
bv5/abiFiOsBtw9yfeD2Q64X3L7I9YPbH7mecPsk1xduv+Q5B/ty3y9x95vc
903c/Sf3/RN3P8rtp9ztEDduuF5x+yvXL26f5XrG7bdc37h998vD9Y7bf7n+
cfsw10N+2Lwfr3a95PZnrp/cPs31lNuvub5y+zbXW27/5vrL7eNcj7n9nOsz
t69zveb2d67f3D7P9Zzb77m+c/s+93jRcL3nes/1nus913uu91zvud5zved6
z/We6z3Xe673XO9Xu/5z/ef6z/Wf6z3Xe673XO+53nO953rP9Z7rPdd7rvdc
77nef2XRe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zv
ud5zved6z/We6z3Xe673XO+53nO953rP9f7iRe+53nO953rP9Z7rPdd7rvdc
77nec73nes/1nru/5L5f4nrP9Z7rPdd7rvdc77nec73nes/1nus913uu91zv
ud5zvf/qovdc77nec73nes99H8b1nes713eu71zfub5zfef6zvWd6zvXd67v
XN+5vnN95/rO9Z07Xbi+c33n+s71nes713fu8ZJF37m+c33n+s71nes713eu
71zfub5zfef6zvWd6zvXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3nes71
nOs513Ou519b9JzrOddzrudcz7mecz3nes71nOs513Ou51zPuZ5zPed6zvWc
6/lq13eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9//qi71zfub5zfef6zvWd
6zvXd67vXN+5vnN95/rO9Z3rO/d9MvfzJO77Ze7nS1zfub5zfef6zo0Hru9c
3/knc99XecP31Vzvud5zvf/GcL3nes/1nus913uu91zvud5zved6z/We6z3X
e673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu99zjN4frPdd7
rvdc77ner3b95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6
z/Wf6z/Xf67/XP+5/nP95/rP9f/S4frP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/
13+u/6u8YR/g9gFuH+D2Aa7/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1
/1uL/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6z/28
mX8695/rP9d/rv9c/7n+c/f3XO+53nO953r/7eF6z/We6z3Xe673XO+53nO9
53rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zvecOL9d7rvdc77ne
c73nHi9b6a5/bh/gThhuP+DmA7cvcPOC2x+4+cHtD9w84fYJbr5w+wU3b7h9
g5s/3P7BzSNuH+HmE7efcPOK21d4Hl+7cfsLz+NnD26f4X5eye033M8vuX2H
+36T23+47zu5fYj7/pPbj7jvQ7l9abW7n+L2Ke7+ituvuHnL7Vvc/OX2L24e
c/sYN5+5/Yyb19y+xs1vbn/j5jm3z3HzndvvuHnP7Xvc/L98uP2P6wG3D3J9
4PZDrhfcvsj1g9sfuZ5w+yTXF26/5HrD7Ztcf7j9k+sRt49yfeL2U65X3L7K
9YvbX7mecfsr1zdun+V6x+23XP+4fZfrIbf/cn3k9mGul9x+zPWT25e5nnL7
M9dXbp/mesvt11x/uX2b6zG3f3N95vZxrtfcfs71m9vXuZ5z+zvXd26f5x6v
WPSd6zs3ELi+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN9
5/rO9Z3rO3d/wvWdu1/h+s71nes713eu71zfub5zfef6zvWd6zvXd67nXM+5
nnM953rO9ZzrOddzrudcz7mec/nles71nOs513Ou51zPuZ5zPed6zvWc6znX
8+8ses71nOs513Ou51zPuZ5zPed6zvWc6zn3+16rXd+5vnN95/rO9Z3rO9d3
ru9c37m+c33n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+5vnN95/rO
9Z3rO9d3ru9c37m+c33n+s71nes713f+/tz3Vd7w/y/E9Z7rPdd7rvdc77ne
c73nes89Xjlc77necwOD6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73n
es/1nus913uu91zvud5zved6z/We6z33fSUfNPd+tes/13+u/1z/uf5z/ef6
z/Wf6z/Xf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/
uf5z/ef6z/Wf6/93h+s/13+u/1z/uf5z/ect5sCs8oZ9gNsHuH2A2we4+3uu
/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nP95/rP9Z/rP9d/rv9c/7n+c/3n+s/1
n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nP95/rP9Z/rP3d/z/We6z3X
e673XO+53nO953rP9Z57/N5wved6zw0Irvdc77nec73nes/1nus913uu91zv
ud5zved6z/We6z3Xe673XO+53nO953rP9X616z/Xf67/XP+5+33u55dc77ne
c73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/1nus913uu91cN13u+VQNspes/13+u/1z/uft/rvdc77ne
c73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO95y4P
rvdc77nec73nes/1nus913uu99zj9xe953rPDQiu91zvud5zved6z/We6z3X
e673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nes713eu71zfub5zfef6
zv2+Etd37veXuL5zfef6zvWd6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+
c33n+s71nes713eu71zfub5zfef6zvX96kXfuft5rudcz7mecz3nes71nOs5
13Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO9ZzrOddzrudcz7mecz3n
es71nOs513Ou51zPuZ6vdn3n+s71nes713eu71zfub5zfef6zvWd6zvXd67v
XN+5vnN95/rO9Z3rO9d3ru9c37m+c48/WPSd6zs3ILi+c33n+s71nes713eu
71zfub5zfef6zvV9lTd8n8/1nus913uu91zvud5zved6z/We6z3Xe673XO+5
3nO953rP9Z7rPdd7rvfc7y9zved+n5nrPdd7rvdc77nec73nes/1nus913uu
91zvud5z+eN6z/37qdWu/1z/uf5z/ef6z/Wf6z/X/2uG6z/Xf67/XP+5/nP9
5/rP9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf67/
XP+5/nP95/rPb5z7v8ob9gFuH+D2AW4f4PrP9Z/rP9d/rv9c/7n+c/3n+s/1
n+s/13+u/1z/uf5z/ef6z/Wf6z/Xf67/XP+5/nP95/rPPf5w0X+u/9yA4PrP
9Z/rP9d/rv9c/7n+c/3n+s/1n+s/13uu91zvud5zved6z/We6z3Xe673XO+5
3nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu99y/Z+J6z/We6z3Xe673
XO+53nO953q/2vWf6z/Xf67/3P0+13uu91zvud5zved6z/We6/21w/We6z3X
e673XO+53nO953rP9Z7rPdd7rvdc77nec73nes/1nus913uu91zvud5zved6
z/We6z3vPfd+tes/13+u/1z/uft/rvdc77nec73nes/1nus913uu91zvud5z
ved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7rvdc77nec73nes89/mjRe673
3IDges/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nO953rP9Z7rPdd7
rvdc77nec73nes/1nus913uu91zvud5zved6z/We6z3Xe673XO+53nP/npnr
Pdd7rvdc77nec73n+s71nes713eu71zfub5zfef6zvWd6zvXd67vXN+vW/Sd
6zvXd67vXN+5vnN95/rO9Z3rO9d3ru9c37m+c33n+s71nes713eu71zfub5z
fef6zvWd6zt3P8/1nOs513Ou51zPuZ5zPed6zvWc6znXc67nXM+5nnM953rO
9ZzrOddzrudcz7mecz3nes71nOs5d/pxPed6zvWc6znXc67nXM+5xx+v9P8A
YTv5ig==
               "]]}, 
             TemplateBox[{"\"xorGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"xorGate1.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               PointSize[
                NCache[
                 Rational[1, 120], 0.008333333333333333]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"xorGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"xorGate1.y"}], "Tooltip"]& ]}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"xorGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"xorGate1.y"}], "Tooltip"]& ], {}}, {
           TagBox[
            TooltipBox[{
              Directive[
               AbsoluteThickness[1.6], 
               PointSize[Medium], 
               RGBColor[1, 0, 0]]}, 
             TemplateBox[{"\"xorGate1.y\""}, "RowDefault"], LabelStyle -> 
             "TextStyling"], Annotation[#, 
             Row[{"xorGate1.y"}], "Tooltip"]& ], {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"time(sec)\"", TraditionalForm], 
           FormBox["\"voltage(V)\"", TraditionalForm]}, 
         AxesOrigin -> {0, 2.9444444444444446`}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {
            FormBox["\"t\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 0.5}, {2.9444444444444446`, 4.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"output\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.771086593602132*^9, 3.77108748305785*^9, 
  3.7710875211879005`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"5c9ab001-a3b0-4a23-80ac-ae150e7edf74"]
}, Open  ]],

Cell["\<\
By writing the whole expression by hand from the circuit, one can get the \
output logic expression is equal to:\
\>", "Text",
 CellChangeTimes->{{3.770654384381906*^9, 3.77065456458794*^9}, {
  3.770654645453246*^9, 3.770654859347062*^9}, {3.7710868273394194`*^9, 
  3.7710868293399487`*^9}, {3.7710869183821483`*^9, 3.7710869507411966`*^9}, {
  3.771088002342206*^9, 3.7710880103504047`*^9}, {3.771088658522358*^9, 
  3.7710886822811003`*^9}, {3.771090714575248*^9, 3.771090733812804*^9}, {
  3.771102721647724*^9, 3.771102754833934*^9}},
 FontSize->18,ExpressionUUID->"83d55f5d-5d3a-43d6-8acc-202be481b371"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", "\[Or]", "B", "\[Or]", "C"}], ")"}], "\[Nand]", 
    RowBox[{"(", "C", ")"}]}], ")"}], "\[Xor]", 
  RowBox[{"(", 
   RowBox[{"C", "\[Nor]", "D"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.771102726325845*^9, 
  3.7711027263328266`*^9}},ExpressionUUID->"8d1414b3-0aab-4c7c-8293-\
7efc1d37b25d"],

Cell[TextData[StyleBox["However ... it\[CloseCurlyQuote] s still not very \
clear what the output is just by looking the logic expression. So some \
simplification is required.",
 FontSize->18]], "Text",
 CellChangeTimes->{
  3.771102828140568*^9},ExpressionUUID->"3237cea7-ff44-4cac-bcca-\
dc6c892c6b18"],

Cell["\<\
The whole logic expression, most of the time (not take into account timing \
hazard), can be simplified using different axioms of switching algebra , \
Demorgan\[CloseCurlyQuote]s law...etc. Here is the K-map for the above \
original logic expression:\
\>", "Text",
 CellChangeTimes->{{3.7706550627235055`*^9, 3.7706551283998556`*^9}, {
  3.7706551611092353`*^9, 3.7706552247686048`*^9}, {3.770655367251839*^9, 
  3.7706553929437137`*^9}, {3.7706893016469564`*^9, 3.770689313649521*^9}, {
  3.7706907610980625`*^9, 3.7706907716124773`*^9}, {3.7710907521927214`*^9, 
  3.771090775001661*^9}, {3.7711028482486105`*^9, 3.771102854514355*^9}},
 FontSize->18,ExpressionUUID->"7c372c7c-c369-4827-a3f2-1b06fea5d64b"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{"Prepend", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"BooleanTable", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"A", "\[Or]", "B", "\[Or]", "CC"}], ")"}], "\[Nand]", 
               RowBox[{"(", "CC", ")"}]}], ")"}], "\[Xor]", 
             RowBox[{"(", 
              RowBox[{"CC", "\[Nor]", "DD"}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"A", ",", "B"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"CC", ",", "DD"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", 
            "\"\<00\>\""}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<CD/AB\>\"", ",", "\"\<11\>\"", ",", "\"\<10\>\"", ",", 
          "\"\<01\>\"", ",", "\"\<00\>\""}], "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}],
  FontSize->16]], "Input",
 CellChangeTimes->{{3.7706554093558197`*^9, 3.7706554764643755`*^9}, {
  3.7706555088757243`*^9, 3.770655518960683*^9}, {3.7706556053367004`*^9, 
  3.770655614200966*^9}, {3.7706556565028553`*^9, 3.770655668321288*^9}, {
  3.770655834116804*^9, 3.7706558592994537`*^9}, {3.77065611721838*^9, 
  3.770656146282859*^9}, {3.7706561840818043`*^9, 3.770656208511468*^9}, {
  3.7707350870263186`*^9, 3.7707350894956837`*^9}, {3.7707352207070155`*^9, 
  3.770735223585287*^9}, {3.7707353759241486`*^9, 3.77073537743408*^9}, {
  3.7707354540453453`*^9, 3.7707354547783513`*^9}},
 FontSize->18,
 CellLabel->"In[67]:=",ExpressionUUID->"88f8cb5f-2e25-40c5-acbe-a00beec464ab"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"CD/AB\"\>", "\<\"11\"\>", "\<\"10\"\>", "\<\"01\"\>", "\<\"00\"\>"},
    {"\<\"11\"\>", "False", "False", "True", "False"},
    {"\<\"10\"\>", "False", "False", "True", "False"},
    {"\<\"01\"\>", "False", "False", "True", "False"},
    {"\<\"00\"\>", "False", "False", "True", "False"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7710908333626633`*^9},
 FontSize->36,
 CellLabel->"Out[67]=",ExpressionUUID->"e5ee174a-43e6-4f28-970d-65421c6e81cc"]
}, Open  ]],

Cell[TextData[StyleBox["Here is the simplification form of the above logic \
expression.",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.7710908936579847`*^9, 
  3.771090917976669*^9}},ExpressionUUID->"760ef6ba-5a26-444b-a2eb-\
5f1c4c33c88d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanMinimize", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "\[Or]", "B", "\[Or]", "C"}], ")"}], "\[Nand]", 
     RowBox[{"(", "C", ")"}]}], ")"}], "\[Xor]", 
   RowBox[{"(", 
    RowBox[{"C", "\[Nor]", "D"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7711029327826567`*^9, 3.7711029328345633`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"86dec583-0fdb-4050-a21d-9ff3fd10524c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"!", "C"}], "&&", "D"}]], "Output",
 CellChangeTimes->{3.771102941197313*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"748a49f4-1c79-4c29-9459-1f6d5c600e85"]
}, Open  ]],

Cell[TextData[StyleBox["Showing the truth table for the simplified form of \
the logic expression.",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.771090933931682*^9, 
  3.7710909703346395`*^9}},ExpressionUUID->"8b51c6b9-0a07-4154-aa63-\
9f7f8d0a93b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanTable", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"!", "c"}], "&&", "d"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7706566983955717`*^9, 3.770656751232237*^9}, {
  3.770735250089447*^9, 3.770735253221077*^9}, {3.771102973517991*^9, 
  3.7711029978308682`*^9}},
 FontSize->18,
 CellLabel->"In[71]:=",ExpressionUUID->"058b6341-58cf-410d-87b7-5f903e2f5e53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "False", ",", "True", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{{3.7711029872627573`*^9, 3.7711029999221087`*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"190e8777-c4d8-440c-9d53-9507c7271a6b"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n",
  FontSize->16],
 "This confirms that the output of this logic circuit won\[CloseCurlyQuote]t \
depends on A and B. This is observed in the simulation and in practice (most \
likely)."
}], "Text",
 CellChangeTimes->{{3.770656858760975*^9, 3.7706569702900157`*^9}, {
   3.770657000530139*^9, 3.770657020265359*^9}, {3.770688551897768*^9, 
   3.7706885689052815`*^9}, {3.770688635689014*^9, 3.770688829167601*^9}, {
   3.7706889856958723`*^9, 3.770688995077977*^9}, {3.770689049621207*^9, 
   3.7706891035389214`*^9}, {3.7706893227561536`*^9, 3.77068933959848*^9}, 
   3.770689624154435*^9, {3.7707179476350627`*^9, 3.770717958056244*^9}, {
   3.7707313433272724`*^9, 3.7707313438977337`*^9}, {3.7707354926381598`*^9, 
   3.770735492833672*^9}, {3.7710881834048567`*^9, 3.7710881907816825`*^9}, {
   3.771091000132134*^9, 3.7710910362881207`*^9}, {3.7711030140860624`*^9, 
   3.7711030620461097`*^9}, {3.771103132289595*^9, 3.771103133649557*^9}},
 FontSize->18,ExpressionUUID->"79b69dde-2810-4f32-90ee-6f3dd8afa7f1"],

Cell[TextData[StyleBox["Takeaway: Timing diagram, K-map, logic expression are \
ways to represent the behavior of the combinational circuit, depends on how \
one wants to represent, one can be more useful than others, but they are all \
interchangeable. ",
 FontSize->18]], "Text",
 CellChangeTimes->{
  3.7711031381026325`*^9},ExpressionUUID->"0d040f8a-e63a-47be-b0d6-\
2ba3e5754cf2"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["3. Demorgan\[CloseCurlyQuote]s Law",
 FontSize->48,
 FontColor->RGBColor[1, 0.5, 0]]], "Section",
 CellChangeTimes->{{3.770689631396641*^9, 3.770689651841799*^9}, 
   3.770689773824333*^9, {3.770689821001436*^9, 3.7706898284847035`*^9}},
 FontSize->18,ExpressionUUID->"76f414ae-7552-41fd-bfc1-df6e7c69976f"],

Cell["\<\
\[OpenCurlyDoubleQuote]A logically equivalent circuit can be formed by taking \
the dual of the operator(s) and complementing all the inputs and outputs.\
\[CloseCurlyDoubleQuote]
Demorgan\[CloseCurlyQuote]s law is useful when minimizing logic expression as \
well as in practice. Let\[CloseCurlyQuote]s say to perform a \[Nand] (nand) \
expression, and the only IC chip left in the lab are AND, OR, NOT (know as \
inverter), of course one can build an NAND gate by combining a AND gate with \
a NOT gate. In practice however, it is preferable, to use  as few IC chips as \
possible to obtain faster computations (propagation delay) and lower costs.    

As an example we will show:\
\>", "Text",
 CellChangeTimes->{{3.7707231950159817`*^9, 3.7707232289433603`*^9}, {
  3.770723376977667*^9, 3.7707234489861946`*^9}, {3.770723695614975*^9, 
  3.7707237531691427`*^9}, {3.7707238324432583`*^9, 3.770723932686327*^9}, {
  3.770724064820069*^9, 3.7707241022300787`*^9}, {3.770724253149704*^9, 
  3.770724253762062*^9}, {3.7707320128096824`*^9, 3.770732105180395*^9}, {
  3.770732173577115*^9, 3.7707321785318346`*^9}, {3.770732533180022*^9, 
  3.7707325909017324`*^9}, {3.771088271567258*^9, 3.7710882738417892`*^9}, {
  3.7711031691978874`*^9, 3.7711031733431144`*^9}, {3.7711032292654977`*^9, 
  3.7711034164869633`*^9}, {3.771103673356374*^9, 3.7711037504950104`*^9}},
 FontSize->18,ExpressionUUID->"cfaf926f-c8f7-404a-a859-060dd3d954c5"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["\[Not](A \[And] B) \[Congruent] (\[Not]A) \[Or] (\
\[Not]B)",
 FontSize->48]], "Subsubsection",
 CellChangeTimes->{
  3.770732159704158*^9, {3.771103431906678*^9, 3.7711034326288085`*^9}, {
   3.771103549582591*^9, 3.771103640063777*^9}},
 TextAlignment->Center,
 FontSize->18,ExpressionUUID->"f1af6995-eeae-4524-b643-88b60d0d60f6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7711035163567753`*^9, 
  3.771103546642517*^9}},ExpressionUUID->"ac11833e-b149-4fa6-90d5-\
ca8f3294ced4"],

Cell[TextData[StyleBox["K-map for A NAND B:",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.7710882925422983`*^9, 3.7710882951804237`*^9}, {
   3.771088444339167*^9, 3.771088459476344*^9}, 
   3.771091096255001*^9},ExpressionUUID->"555abbf0-b6ad-441f-9133-\
fe26a7e8ed18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{"Prepend", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"BooleanTable", "[", 
          RowBox[{
           RowBox[{"A", "\[Nand]", "B"}], ",", 
           RowBox[{"{", "A", "}"}], ",", 
           RowBox[{"{", "B", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<1\>\"", ",", "\"\<0\>\""}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<A/B\>\"", ",", "\"\<1\>\"", ",", "\"\<0\>\""}], "}"}]}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7707323667368836`*^9, 3.7707324161727157`*^9}},
 FontSize->16,
 CellLabel->"In[44]:=",ExpressionUUID->"4519b41e-c20a-4284-bfe7-e1747e1429e1"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"A/B\"\>", "\<\"1\"\>", "\<\"0\"\>"},
    {"\<\"1\"\>", "False", "True"},
    {"\<\"0\"\>", "True", "True"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.770732407471999*^9, 3.770732416664401*^9}},
 FontSize->36,
 CellLabel->"Out[44]=",ExpressionUUID->"34507ea1-663c-44fa-9d83-e14e6325d3a3"]
}, Open  ]],

Cell[TextData[StyleBox["K-map for (NOT A) OR (NOT B):",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.771088468065175*^9, 3.771088502956751*^9}, 
   3.771091098791298*^9},ExpressionUUID->"5dc21b8b-0254-4e3e-bf05-\
1ddcf8c7b608"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{"Prepend", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"BooleanTable", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"!", "A"}], "\[Or]", 
            RowBox[{"!", "B"}]}], ",", 
           RowBox[{"{", "A", "}"}], ",", 
           RowBox[{"{", "B", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<1\>\"", ",", "\"\<0\>\""}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<A/B\>\"", ",", "\"\<1\>\"", ",", "\"\<0\>\""}], "}"}]}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.770732432096156*^9, 3.7707324439105773`*^9}},
 FontSize->16,
 CellLabel->"In[45]:=",ExpressionUUID->"88491cc6-b1a1-499f-b957-61260a68f39f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"A/B\"\>", "\<\"1\"\>", "\<\"0\"\>"},
    {"\<\"1\"\>", "False", "True"},
    {"\<\"0\"\>", "True", "True"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7707324446635933`*^9},
 FontSize->36,
 CellLabel->"Out[45]=",ExpressionUUID->"e2868607-576a-4571-a74d-0580ae64ed25"]
}, Open  ]],

Cell[TextData[StyleBox["\n\nAlso, another way to show.",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.770733052126931*^9, 3.7707330554520416`*^9}, {
  3.7710885806699963`*^9, 3.7710886015806*^9}, {3.7710911029265413`*^9, 
  3.7710911061511965`*^9}},
 FontSize->16,ExpressionUUID->"ea9aef9a-ee72-4c82-aa9d-e7696d17261c"],

Cell[BoxData[
 RowBox[{"SatisfiableQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{"a", "&&", "b"}], ")"}]}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"!", "a"}], "||", 
      RowBox[{"!", "b"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7707330694506264`*^9},
 FontSize->16,
 CellLabel->"In[46]:=",ExpressionUUID->"0f1304e8-46a1-4deb-93ae-9735f58b1d37"],

Cell[BoxData[
 StyleBox["True",
  FontSize->24]], "Input",
 CellChangeTimes->{3.770750313356538*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"16c45c41-0b50-4100-8b1b-928acca095b9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["4. Applications ",
 FontSize->48,
 FontColor->RGBColor[1, 0.5, 0]]], "Section",
 CellChangeTimes->{{3.7707327280770884`*^9, 3.770732743137799*^9}},
 FontSize->18,ExpressionUUID->"ba21500b-9331-4a47-9468-32afc9c85eea"],

Cell[TextData[{
 "Knowing that giving a logic expression, one can get a truth table (and \
k-map), but this can go other way around. \nLet\[CloseCurlyQuote]s say one \
wants to only let the output be on when a specific input set is engaged, for \
example like a digital password, displaying numbers or words...etc.\nKnowing \
the logic expression makes programming on FPGA board much simpler since \
simply implementing a logic expression is much easy to understand and debug \
than hard coding ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "8"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"caf48c7c-f443-4d1f-917e-4fda6d67fadb"],
 " states."
}], "Text",
 CellChangeTimes->{{3.7707327449450064`*^9, 3.7707327511354237`*^9}, {
  3.7707329083512383`*^9, 3.770732984946518*^9}, {3.7707392036173477`*^9, 
  3.770739314314499*^9}, {3.7707393452597637`*^9, 3.7707393676299806`*^9}, {
  3.7707395891817713`*^9, 3.770739811331045*^9}, {3.7710887861161346`*^9, 
  3.7710887870307703`*^9}, {3.771103788306616*^9, 3.7711037891663213`*^9}},
 FontSize->18,ExpressionUUID->"76dd3fbc-08a8-4a91-bba0-ce2dfb5181f3"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{"Prepend", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"BooleanTable", "[", 
                 RowBox[{
                  RowBox[{"BooleanFunction", "[", 
                   RowBox[{
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "q", ",", "w", ",", "e", ",", "r", ",", "t", ",", "y", 
                    ",", "u", ",", "i"}], "}"}], ",", "2"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", 
                  RowBox[{"{", "a", "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"b", ",", "c"}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", 
                  "\"\<00\>\""}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<bc/a\>\"", ",", "\"\<1\>\"", ",", "\"\<0\>\""}], 
               "}"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"BooleanFunction", "[", 
         RowBox[{
          RowBox[{"FromDigits", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "q", ",", "w", ",", "e", ",", "r", ",", "t", ",", "y", ",", "u", 
              ",", "i"}], "}"}], ",", "2"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]}], "}"}], "]"}], 
     ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression","SequenceIcon",GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["Sequence", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["9", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["2024", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
         Typeset`open]},
        "IconizedObject"]],
      Sequence[{{$CellContext`q, 0, "111"}, 0, 1, 
        1}, {{$CellContext`w, 0, "110"}, 0, 1, 
        1}, {{$CellContext`e, 0, "101"}, 0, 1, 
        1}, {{$CellContext`r, 0, "100"}, 0, 1, 
        1}, {{$CellContext`t, 0, "011"}, 0, 1, 
        1}, {{$CellContext`y, 0, "010"}, 0, 1, 
        1}, {{$CellContext`u, 0, "001"}, 0, 1, 
        1}, {{$CellContext`i, 0, "000"}, 0, 1, 1}, SaveDefinitions -> True],
      SelectWithContents->True,
      Selectable->False]}], "]"}], "\[IndentingNewLine]"}],
  FontSize->16]], "Input",
 CellChangeTimes->{{3.7707332668011723`*^9, 3.7707333170149326`*^9}, {
   3.7707336974328547`*^9, 3.770733718526505*^9}, {3.7707337996297026`*^9, 
   3.7707338621606374`*^9}, 3.7707340118704224`*^9, {3.770734056978855*^9, 
   3.770734071379393*^9}, {3.770734140686158*^9, 3.770734161004814*^9}, 
   3.7707343785944443`*^9, {3.7707346271700478`*^9, 3.7707346322584476`*^9}, {
   3.7707346727981386`*^9, 3.7707346928784213`*^9}, {3.7707347442331605`*^9, 
   3.7707347745630937`*^9}, {3.770734805704858*^9, 3.7707348521307697`*^9}, {
   3.77073497064999*^9, 3.7707349821392813`*^9}, {3.7707355128262005`*^9, 
   3.7707355244711037`*^9}, {3.770735631462143*^9, 3.770735640976678*^9}, {
   3.770735671850193*^9, 3.770735681007683*^9}, {3.7707358702658305`*^9, 
   3.770735870619912*^9}, {3.770736020606561*^9, 3.7707360208240147`*^9}, {
   3.770736086385746*^9, 3.7707361767562027`*^9}, {3.7707362189205055`*^9, 
   3.770736224564459*^9}, {3.7707362604096127`*^9, 3.7707363257040925`*^9}, {
   3.7707363664402127`*^9, 3.7707364181410627`*^9}, {3.7707380523402605`*^9, 
   3.77073807432653*^9}, {3.770738178993741*^9, 3.7707382289861197`*^9}, 
   3.7707383143200736`*^9, {3.77073886869602*^9, 3.7707389265204315`*^9}, {
   3.770739066790061*^9, 3.7707391002785525`*^9}, 3.7710911453911242`*^9, {
   3.7711039559978657`*^9, 3.7711039991198616`*^9}, {3.7711040403795214`*^9, 
   3.771104048018718*^9}},
 FontSize->18,ExpressionUUID->"a738c5bf-c279-48ae-be6e-b489fef29b5c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e$$ = 0, $CellContext`i$$ = 
    1, $CellContext`q$$ = 0, $CellContext`r$$ = 1, $CellContext`t$$ = 
    1, $CellContext`u$$ = 1, $CellContext`w$$ = 1, $CellContext`y$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"\:672a\:547d\:540d\"", Typeset`specs$$ = {{{
       Hold[$CellContext`q$$], 0, "111"}, 0, 1, 1}, {{
       Hold[$CellContext`w$$], 0, "110"}, 0, 1, 1}, {{
       Hold[$CellContext`e$$], 0, "101"}, 0, 1, 1}, {{
       Hold[$CellContext`r$$], 0, "100"}, 0, 1, 1}, {{
       Hold[$CellContext`t$$], 0, "011"}, 0, 1, 1}, {{
       Hold[$CellContext`y$$], 0, "010"}, 0, 1, 1}, {{
       Hold[$CellContext`u$$], 0, "001"}, 0, 1, 1}, {{
       Hold[$CellContext`i$$], 0, "000"}, 0, 1, 1}}, Typeset`size$$ = {
    449., {39., 49.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`q$16801301$$ = 
    0, $CellContext`w$16801306$$ = 0, $CellContext`e$16801307$$ = 
    0, $CellContext`r$16801308$$ = 0, $CellContext`t$16801309$$ = 
    0, $CellContext`y$16801310$$ = 0, $CellContext`u$16801311$$ = 
    0, $CellContext`i$16801312$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`e$$ = 0, $CellContext`i$$ = 
        0, $CellContext`q$$ = 0, $CellContext`r$$ = 0, $CellContext`t$$ = 
        0, $CellContext`u$$ = 0, $CellContext`w$$ = 0, $CellContext`y$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`q$$, $CellContext`q$16801301$$, 0], 
        Hold[$CellContext`w$$, $CellContext`w$16801306$$, 0], 
        Hold[$CellContext`e$$, $CellContext`e$16801307$$, 0], 
        Hold[$CellContext`r$$, $CellContext`r$16801308$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$16801309$$, 0], 
        Hold[$CellContext`y$$, $CellContext`y$16801310$$, 0], 
        Hold[$CellContext`u$$, $CellContext`u$16801311$$, 0], 
        Hold[$CellContext`i$$, $CellContext`i$16801312$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Row[{
         Grid[
          MapThread[Prepend, {
            Prepend[
             BooleanTable[
              BooleanFunction[
               
               FromDigits[{$CellContext`q$$, $CellContext`w$$, \
$CellContext`e$$, $CellContext`r$$, $CellContext`t$$, $CellContext`y$$, \
$CellContext`u$$, $CellContext`i$$}, 
                2], {$CellContext`a, $CellContext`b, $CellContext`c}], \
{$CellContext`a}, {$CellContext`b, $CellContext`c}], {
             "11", "10", "01", "00"}], {"bc/a", "1", "0"}}], Frame -> All], 
         BooleanFunction[
          
          FromDigits[{$CellContext`q$$, $CellContext`w$$, $CellContext`e$$, \
$CellContext`r$$, $CellContext`t$$, $CellContext`y$$, $CellContext`u$$, \
$CellContext`i$$}, 2], {$CellContext`a, $CellContext`b, $CellContext`c}]}], 
      "Specifications" :> {{{$CellContext`q$$, 0, "111"}, 0, 1, 
         1}, {{$CellContext`w$$, 0, "110"}, 0, 1, 
         1}, {{$CellContext`e$$, 0, "101"}, 0, 1, 
         1}, {{$CellContext`r$$, 0, "100"}, 0, 1, 
         1}, {{$CellContext`t$$, 0, "011"}, 0, 1, 
         1}, {{$CellContext`y$$, 0, "010"}, 0, 1, 
         1}, {{$CellContext`u$$, 0, "001"}, 0, 1, 
         1}, {{$CellContext`i$$, 0, "000"}, 0, 1, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{723., {121., 131.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.771104026485689*^9},
 FontSize->24,
 FontWeight->"Bold",
 CellLabel->"Out[75]=",ExpressionUUID->"050932a5-7a19-4fd6-b99c-effe1691ab75"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["5. Future function/ Conclusion",
 FontSize->48,
 FontColor->RGBColor[1, 0.5, 0]]], "Section",
 CellChangeTimes->{{3.7707398536997647`*^9, 3.7707398805071473`*^9}, {
   3.7707401610831847`*^9, 3.770740163589486*^9}, 3.7707414287189765`*^9, {
   3.770741813847128*^9, 3.7707418245555067`*^9}, 3.771104280692028*^9},
 FontSize->18,ExpressionUUID->"8ecb1198-624f-42d3-93c7-8be9ed161fdd"],

Cell[TextData[{
 StyleBox["What if there are more than 4 variables? What would the map be \
like?",
  FontSize->24,
  FontWeight->"Bold"],
 StyleBox[" ",
  FontSize->24],
 "\n",
 Cell[BoxData[
  RowBox[{
  "Import", "[", 
   "\"\<C:\\\\Users\\\\dali7\\\\Pictures\\\\lec-5-combinational-logic-kmaps2-\
9-638.jpg\>\"", "]"}]], "Input",
  CellChangeTimes->{{3.7707420848657355`*^9, 3.7707421789177003`*^9}, {
    3.7707422347016015`*^9, 3.77074223625445*^9}, {3.7707422896584835`*^9, 
    3.770742458077302*^9}, {3.770742495748575*^9, 3.770742600723995*^9}, 
    3.770742638871169*^9, {3.770742681781903*^9, 3.770742683637908*^9}, {
    3.770742769116474*^9, 3.770742812505469*^9}, {3.770742855541469*^9, 
    3.77074286903541*^9}, {3.7707430805452785`*^9, 3.7707430849614744`*^9}, {
    3.77074312423843*^9, 3.7707431352211103`*^9}, {3.770743211837329*^9, 
    3.7707432491405897`*^9}, {3.7707433056116533`*^9, 3.7707433378046465`*^9}},
  FontSize->12,ExpressionUUID->"aa016bfa-4e98-4c54-811e-087b4277b32b"],
 "\n",
 Cell[BoxData[
  StyleBox[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
6WcDzAtttpmpG5mFK5KBAw7414my2qINpoXN3w8NDphjNUVChkb/+A9brD+X
SwKCp5ksK8zmOEgQYFsYaFocYITira5bf9mBQ9Tw5FsajR5z2G4PDTD/euyQ
Emk8afxJIAi7NdJsXWyyzTLbZ5pM8wKsEfY6Ed98liir60dKKktqc1joTCWB
tPhwgc2cYjItLyglxSL1Rgz9Ya/Nf6ndmFDXEmM3Td+Unqc6NSTBVarfBFmd
p8MVGnL9OrFbJ4MN26lDGl2uTKS6WJB9tsUQ9dmnGwTGxefOEatldt3A2M5f
pPLx7gH9tpoMYTbz8gDb0qZNlhsMc62WGGiZAEtsy+bxJcWkdesVdvMmk3+G
zRwFacBeNpqXW+1Rn3dYQ21JgcStOFnfPiLAAub2vAbvLwiot8DfvJSN+Yac
PkFkZY1N907ByiAIW1Hqi683GU1RJvOS7dtUYgalopTs2kwCLYtMxpVWG10K
0mZZajXGWgyrzaZFK1de50tsQTMsCDkAepqfXzR0ldYfRXf6Zm2nb9YHNwyD
/mM1xEOBv+y6toi5U5xOJ39iwXXSsEmEzbzOZl55tZC41MXA1Sbl+1ygzYtA
IG4AUe8oI3Sxx+MHEl5/4UjVqqcDAknhVSddLZjNl2CjjXwNfLrBepmDREUv
rP3WnHfeIdu3059c/pSVkcyty958I+aNf4pTJpPrYDXznW4cRCiDDK+NH5fy
9r83vvpC6vNVN9Wsnvbaq3GvvrKrw+fk8CHmbZa4Z5u413xgxVTOKHu7S2zt
5xNHCUhmi2nOssgcQVmKkA5XguC7dIV07RFnty+0miOshvl207zGdcPat10H
TB1gWZaZTgJt4+z2X3+dftipiyDj698TFpeanuoKChgXXHdU1jHq7i5ncb+d
v46zBy6heZoX2ExzGtRf/OmnqWDABtjD9x8gzT6YYLFNtQUstloX2owLgsxL
AkyzO3wRuT+L2u+c+0QaNX0oMHBcw+CRxQW0/Z0svigs/ET9BrOt1hCgHvgE
kzzANrnfd4lnc5i3WZL4pjlso2BtBwi6tyxYzf/5aLnZLxaIDxiBr/QEpmhM
TMH7jUNshrl1A6YlpZxwimoQHdsCiejW+Ve3mqBVh+Zr33623T7ju97r+Gwj
wUmaNJwVYF7VpkUc3/e2rJw0e3+Goc7czz6J417cvALSpXuUxTzLbgk3G0ID
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
bimkTKLhlgKbcaPMauGSTCay2zeo7SDDJKqsroMkaZeV826pxvNUuVPWHqGm
kSU1T1lJ7M5W9hSQ6r3aIegLLylXBT2vKQvpe/gSZW3ajtfjdM/ipVKkqaxa
UqJHxd0P9RxllSX3IWqV1eWvFVJrSaX6kjsj2bPFPNqZZ6ImoMnVQHF+l1Nt
Fo+W1Jt2ojsfdx1lj++8ai5JKaes2dyyMmFK9EypHZKu1vqKV/BO1bejLwnR
VdOrCvwLn1zM1wt19xmWj8ula0OfHLS+p/QZWdfyulLJas50bprL/Q+isK2i
dbJAMq/+Kblrip/4iZ+3/vm7h68hcU9CJpUqPXJfpacqVXqmUqXnKlWqWanS
C+yozn4+x75UV39W1x012eF73jdNzd9LcKOfv3vU9HlEzYpO/m4ONznvm1WF
j7h5PjcqUoUlv+3W0O763avam/1DbfW7pfrdOv6h47mK8qww/1svzC1e1Wer
/y+o8HuF9b3tWuOBx9/88JVO/PxL6s/nGFs9Id/L/iSZMm+1vn1n9em7sFev
JX37rOz17fLevSJ7fbusdy9+ROqOZb17R6jn8cADDzzwwONuHr16wxGpHsvU
I7JHj2XATd/1Xt73uyX9+84F2hLvZcNXpMxby2z/3howymanq+ZazXMtlnl2
e6jVulB3zLdaQ6y2OVbbbPaJBx544IEHHnf1sIbYLAtt5kWUceiZmVb7dE46
lJLMC+oGzLdaxtvs/Svd97KDhWXeo1PmGfP+s2efyO69Vn/bO6Vrt/Xdu6f3
6LGla7eM7t03d+u+2f3ZI717j9RuPVLxEz/xEz/xEz/v+mf37pt6ds2kRzdK
Nz17rOveY13P7hvgfPcu6b16ZHb7em2vnom9ey+uVKlGqXQPMy9Y65UqPVGp
UhXdIO/L91V6Redyr+45dIUHHnjggQcef9JR3WeQl395EejpPvr53H10nPcx
Zb7EvQ4WLcYnCzmdfCaFoJ/Cg0AgEAjEnwzdGgie47g8/lk/E0HUb+hzr0Fk
G75qtKtMcZT4uoIuvh+frIDHdSMQCAQC8WdA5IwjMaqRPKZmKnOPVObyWbz2
HoPEK0wYC7O/RJY1xaKiFZAQCAQCgbjLUNY7Ip5r0vC1jFx8jXQiCpKyio50
zxq8rKbakv4+S+Pe6CAVrRqABx544IEHHnd6+PiZ6Um+Vp7LY6G5e5t5tep4
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
L5S/f//+27dvLykpAeP32Wef3bBhA7kzKwZaYNOmTaCrAPM+/fTT0Iwg3jMz
M7OysqDWwPJAvtog9W1IbG2strCwECy4kydPwhOBebnN+9lnnwHbgkLCV0EB
hUdjXnLHXvS/AKAFQIcEnQ3eNTQOKEgVeuD13hKvcKybB5YjEAjEnWDu3LnA
bkB8fCYvfM6YMYObsceOHRswYAAI+Y8//hgu8dm+kBLMSZD2XrNuNSsYpByk
r1mzptFoDAkJOXLkCKlo5BFyBk7ftWuXxrxgMF68ePH7778HA5wzL0hCeCgo
A9zm1YtB/eCvV/yznnnhZEREBDDv/Pnz+VU+SYp7mzXInkts3TojQ8ro6Ggw
86dPn67dBczbunXr5s2bg82rlVkvvX3nPck+m9D5SnsgX2Der7/+Gt4OWL7B
wcFc/wEdCb5//vnnWj76x3lZefciifhGvGvQ6xherg9o/PHjx5vNZtADoblA
mQQdRrt6K3OvtBbzerRXebzepte7vnnmvnf5WuV3MlrhFQmvhVKIDF75ewXq
32FX8VVavL7fi10RgbhbAKMJiM/hcJSWlpaXl4NVCN+1/3o4CT95ArDpHAw8
sLlCL5zM5k7yeb58kavJkycTH+kBP7nNC8wLEgCe0rZtW7BQwIQcNGhQrVq1
gHkhDdi8bdq0adq0KWSo36/ctxaaGIRkW7Zs0du8wLxQjHnz5vF7gXlfeukl
YF4v3yypSOjdisM2Li4OmHfixInajdeuXYNiN2vW7MqVKzeypCoU4+QGU4P5
1ZycHGDeDh06wHewcDnzwlU4D8oJMK/vzBevEXCiSrx7bsjSS4zLPtOFKuwV
0J8jIyMffPBBIF9ouhMnTvyh6dWSbn9M6IrEky98VTVf/e3m5OKlAHgRn1fO
t1hmfeZe5dTO6Pcx8XrcnfcNL33YN1vfPolA/A1R4eI8/N/Ei+y8TE59Slk3
eZbfCJZvz549H3nkkalTp2pyUq9mZ2Zmgp343Xffde/eHVKCeQK3ALkD506b
Nq1fv35du3aFS8Bo8fHxfIldvV2gTXflhdSLi9zc3PDw8J9//vmbb77p1q0b
UPmcOXPA9AabcciQIf7+/g8//PAHH3ywaNEifQt41d33vBf48PSsWbNAMYAM
rVbryJEjz5w5k5qa+tVXXwH1A79/8cUXmnGt2Rpemr+v9NNDO5mQkPDxxx/X
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
n9fTtujvslCzZ/XGg2OGDh3q7e09c+ZMk22FHh/Zqb6CH3744ZVXXgkLC4Nt
J3Ns7nV1T6Q2bwSXy4Wx6tu374YNG8gGIw/L3IK8JnLv/jJn4JebmxseM4lE
Yt56j+oDMXBek44aw3Yx165OmDSxh4f7+IkTWltbSS+x4ZG4n4qOvPfaDiGB
f6aiJwTWf/75v0JD50LtESNGKBQygw56E+Q1x1mTqv3RVuADnBdO49tvv71m
zRq4dhcvXiwtLbViMLw8POeEzi89VcOWKZgKOVunik/bRpC3jiupkyp5Tc28
hgbDmQhCCYsnYctUtUpDPzNHoWBy+Pm5hVErYhh2Nlu2p7Jlorzi4tmhYR6e
vTL37tu4NZFhZUFei/xdxHxFrclKRmpVIL3zmUp19epV2PP+/fv37NmTWqbR
jrRzYgJ9KibYHAALhBQmkX6KnLnCHRd6H+MLL7wwaNAgkPQrV65QpyFTezl2
Qcwn7iIr8J3Ro0fDQsK8k3WjT2QQmVKSIO/hw4fff//9f//73+3MZbUgL12o
u/DVV18tXLgQT9qzzz5LHTbdgU7mB/KhCDLV8teuXZs0adLKlStff/11eg+2
OfL+3i7yEkil5Pff/0tiAnnnzJkHzfFqfPfDt3/o79/xv0aNH3AYHhhZfkCH
P9qEYOIinjt3Ds8M3sGRI0eiIqdOnbJ3tIuMWXm8oIgplnN0OnajLp9XE746
0sbRZVvaTr5Cy9E1FMiFx9k15RwORyipEysEDQ21Tdpsbk0Jl1NQXjFlcoi7
R0+Gg83S+JhtB3cPHTPaqZu7l0+/nLKSzRkpFuS1yNMt5lMr2zwgmLLkdLZI
hZOvePeDgoLgFWdmZgKFzTMxkTaRl8qQUqypqalXr14TJkw4dOgQ2XqXyGNu
hUfA65lnntm1a5eXl9f+/ftN5tJ0DYnMk5NsDcbK3h6GvbKykmzU3IXMTbQi
VvHWrVtKpZLMzRaJRPcetZ2IBXlNBM2FRzE/Pz8wMDAqKoocE2nSq2/y2JuL
SRcQ5TQePXq0b9++ZHPytqYxP5Tz6k2Q988BXj018xFP1muvvZJ1LNt/yLA1
a2J/++0/v9/7DxleNsT5C3kffJGN4Kt/oID2kJfUuqGhAU7j5MmTMzIyCgsL
Y2Ji7Oxsps+auSZh88oNm1cnJa1OSZy/Jipg0liGrcPUGaFrN29dn5GxeGtC
6Nro6Pi4mNj4NZu2INry5E1z10YvXrtq/rLlvXr27dtvwIzw0JQDmRt3pNq5
d+83xD88YsXJ6spN6dssyGuRp17MjQZI0927d8lco//+978UWv1iFGKa6HQA
n0jy0ksvjRgxYseOHe0QLro8DHnpCZEt3nqQ6Ly8PBJCTejt2qltelrPOfLZ
tGmTlZWVo6PjwYMH6a1hviKyU0IfHIegMcl5cxqNRk9r8C47D3Rc+OCDD0JC
QlALFxcXgUBgPkBvIhbkNZecnBw0oIODAxwYar81/YN+6SPbx8QvRXy4oDZW
1o72Dhlp6TSWez+rtpCxTezTkxlb1IwrY7T//PeX41mHba3t7G0dNm3ach95
iff4F6o+gLMmg8w05H0Q9//SAZXCiyaRSDw8PEpLSy9fvjxp0hQrBsPZHthr
a2vnbOvU3cG1B8PRgeFkbzxfyNrewcXGwdnawZnh7Miwt7VxcHRwRDQ3hqMz
w8nBysXZ2tHR2sbOxso2ZMoMNpvF4tUl78zo4dN7SXRMDU/AlojjN2+2IK9F
nnox6VJ77rnnVq1aFR0dDY751VdfUUj0wgsvrF0LFzYaIPXFF1/Qu51xwWaz
Yc+7d+9ONtzTd8CStzPOSwjpr7/+ipd92rRpTk5OZMM9kwldj1/rjRs3BgQE
lJWVEZJusrN0l4Xue3z66ad79uwZPXp0jx491Gr1EzmpnAICZIL8p0+fHhoa
KpPJPjGew6uneUTmaS3ISxfSkuBx4HS4TS+//DK1JSkVoZ1FwfRo9E9yAeTt
09snPzfvtVdepYZ3/8S4eyYo+Cg9yd99SDTMo9b/dvz4UffuHseP5rz00svG
zH8zzoKmYJ3+/yEhj0Je+CH5+flTp061t7cvLi6+cuWKYffxUWNSEpMyUlLT
Undk7tqfmrFr67a0rduSwYLtHOyXLI3YtXv/tpSMLcmpiSmpSduSUzLSd+zZ
n7I9MzElfUvytuRtqSDpfXr3DQ2ZKeBw16xaPSRgGLA7InaNrKG+TiRJ2LLV
grwW+fsIyOyrr76K92vhwoXh4eHgg3w+H5QKCIjw8vLyxYsXDxgwgDq4lr7m
NyUlBbYLKFlXZ5hg2Y7lp4ScmADkvXdfqCQkZ9jAmJgYd3d3wAo5h5dIBzm1
Sekm9hNORUtLy9y5c2fNmkVOsWlT2tzsyLxe9CVXdMUQThwMX1/f5cuXkyNZ
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
/dtvvwWbBmn19vYmE8naz0RPg8hPPvkE1YduqDiQl1q2/Oqrr4LdxMTELF68
uFu3buCnRFuNRuPp6YlSAJHXr1+n8mlzglabgkzAoMvLy5H/mjVr0NQ9e/bc
uHEj8ikrK0P7ODg4oFImeT4S0P+2yKunNQ4aFl7NkCFD4MyQoZNOTX4zl3vG
gwpOt7SuXLmyf99+eBh+/PFHhL/zznvjx0+0sXZg2DpsSklnSRQA37iUdKDn
qMlTNmxKMrA8qZypkBcK2ZVyKTCRK1GxxTKOSl0s5JSJhWJdg0CuBcDVSeU7
co74TQy29/IaGDAy92QFEJOpkJaL+aeEAlFDI1emZYmUHI0GIUW8OrZSKVXp
OHxJfFLy2NDZw6ZOjEtLlWqahDINcJanVJcK+fgTqLUiZX0Fix8Tt2nYiGCG
lb0BeY2nBcHrk0tl33xlmN/4u3GdMDjviODR0+bNLeDU1WhUPE09y9DVrAKy
F4u5C+JWM5ycUE22RFmn1JwUiwrFAr7WoH+tQM5SqMuV0pMiTo1MWlRZHTR8
9JCA4XGpiXtP5pQL+KimWFbPFSgReUPSNktvs0UsQhfKPn/66adA54kTJ0ZF
RYGddSEr46r8UWCFQF5kpb+/QBX8dNiwYSarjTqbOYjtc889d+PGDfIV4BUS
EgLyCC4MwBo3bhxwnxo+7lT+gFogLzg7MdHnz59fsmRJWFgYbDhILrgwyBSZ
742vgMjH2SgS8uabb0ZHR8+fPx/5u7u7A3mhNoDYw8MDNRIIBPpObv3xNCEv
Ko7Wxh05e/ZsS0vLl19+SWoBh+3MmTNwHa9evWpy2CW5wPMGQhcQEJCamkpG
5zvSkUL/1bzNEVJVUelgYztm+MhjBw79fOMnPMwsFss/YBhwxNrBeXN6Rnkd
Z/eBIwuXrPAbEuDg4jpz7nyORM4Ty5kCcTVfwFcZiCEoJCCVxROxBRJAsFjX
hBCuVFEnkhg2d7Kx9h7oO2vh4tIaVp1IWscT1vFFPJlS3mQ4pw/ozBZLa3gC
lhQgrq1lcnZl7pu3YKGvvz/D0XlRZLS6oQVwDBJax5cif1Bsma4RbLeKxR0x
ZkI3955DA0Z6ePYiyLtz564/N9W43ySX37o6OnhsaNgCpkhigNSGhjqF0nAO
oEhSIxBFx69nOLsk7tjJkckRAkZcK5LJGpoE6nqWTAOMrhEImUIBYDdt5+6+
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
AWEwhYZdc75G/wSABQaAnZ0d7bf5Hz/KBTEtk3d5QVF1dXXBwcFyuZz2im80
swTMHU1P9i7CdPyOm81o7KYz3Lx5My8vD2g1DOzd3d1Gs5lMc6vDgqKaV2E0
w9nJG35A22lpaRs3bnzuuefosEc/ybTAw428Fg8hhmH29vYAvvTOc3iSZ8+e
TX/OmjUrKCho1l0kODgoNDRkzuyQ4KDpkHn2nJDgGbNmzgqZPTMkZNYcDzdP
E3ixnF1dps8Idnf3tGLZWrPsnF3cfKZNcwsIdPX19/EN9POd5ucf6OsX4OHh
xbKycfX08gkIdPf28fYPcAvw9wgM8Pbx8/OjPj39fT2n+bsH+NMp35fPsra2
d4CLfHz9qUJ8fL0DA32hOh9/N28/L79AT79AOPedFuwbON3bJ8DTy8/PPwgK
9woI8A4K9gwM8vT39/T1gUrdvLypxECo3cvOwd5kjVg7u3tAjSw7K2t3Z09f
Py8vH6jX1trO29ML/nYAoKfNCJ4VAsqaMRM6P2NmyKzZoDFbOwcHNzePaYFw
rY93QIBfkJe3v4dvAHTH3sMduunm4u7vHxgQGOTm7wfdZDk4R0XHCkktprvE
VqmbBdwOPq+ho332vLlbYncQlww9uLCFy+5HUWDxElytMTxaUX18Cnmn5CEQ
c8LV0NAA3Jbxp2e8PeQC8gKImEfFpaW9vd3FxSU9PV2r1d47gJo5moBY7KY2
/wnk0KFDNBkpKSmhf5pMSM3llllEHgu0spg8/O1vf9vT07Np0yYYYOluWtDY
ya1lrjUPkn63VjEoTMfhnTdv3okTJ5g4vJPBd7KWmG3kk51QMX18+eWXa2tr
gbPv2LGDiQY4hbz/Uhir6ZtvvgHCGx8fD49ZbGwsWHpnzpwBs7PBJPC0w+fZ
s2cb7iKQAfI3muRMQ/3p+jNwQP6ysjJAQVtrGzsb29TU1LT0A7b2dgA3Xh6+
WzbHxCcmxSYnxR84sC8vb29K2u64hPg9CSBLF0das2yWr3gEyG9cQmJ8cnLc
/tTkrOyEfWlAPOHYnZK8KzkpMSN9V2Kyp2+AjbUDMOjly1cmQbaMrPh9qfGJ
KQmJ+/YmJEEVKQcy4UhKToMUOKDAxH1pGZm5+5PTkxP3w9fYhITdCcmQJ/FA
JpwkJCYnJibvS05ZGL7A2sTNZ06bsTd2T2jIXEDz6ISEuPT0XUlQyP7Vq9cA
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
Y92JGvVB660Pb6E7vbc+/OjP777ndfv69u2ftXINzouC1w/kAuYCRxwc2rmD
Yig1BwDBgCS4qkOJVReZx72koTpJhqVkghBQmEdFRuTt0/fI0eMffoQWv4XX
TtutNrSIqvVvk2rd2ccUbg+KBbps+fhxkxusGCDMqshsc4CWNYLkWFoD/wAU
0m1wHg9ISxJ0KM6aHXh+8d6k5M5rVm+gSY5jxNyc7QkpqbtPHKU8boA1jqMV
XwhMgOzmK0BqF8U6aNbOcWZZIQNBQBWwjOUkghasnOg03HRL0KGqLk4lGBVk
Pi7L7BVvVt4mU0zHkNbtaIrtmLd392MN1b369120ZCnw3cZwwFO+pQWt+OJF
4DvAt0kW8CtezK1bKZqmUJgsGE+rplCPN9sVpbB4H4jWtTmhGFYB3/qCfFNs
TGJSSk5O7h/efBuG4/oLL44fPz594WJnaEWZTZUptDDMgLkEQ0qbN+XFJKeW
HD8Ko4GhjcaCnRRB50LLhcdb4FNAC8MoAeB7sbp24JBH5sxOpwmZojS0WoyX
YUpA+gxKUnbszI/GsIravW4RzZuenv4///M/4cK2sfu+LgPpMXr06La7ir5J
FhF3V69eHTduXJS8ba3d0vTQY9VbYbGJwjOHkPf+n/9SU1X96LTp8YkJG7Zu
ZUGm0bSZom4rKU7j/YF6lTlPojQ9Zlp0UArIN8yvltFN6M4tw5Kkygk+xufL
2bdnaNqY+OSUI8eO/v7G6+fOnZs2ZWpsjMlqaYKv3gcf/OWDjz5skzUk1Jjb
LUORNBB5J0wxu2jCMOxeo4qj6gkSJS2iFFoyCJ+3QREqcBdatEzJTie3ZmNu
/8FDTUmJK9evJ1yMQEs5m/NMsbHrivMrSMxGcBSr0byBa+5Gr3qBw2sJwsGI
TlaBEmvQXS6RlRRuZliMVXFBR5E0VOEc6agRWCuobFrj9IBTV8sZx8zVmaY4
tMHW1CEOEJy9Y+v2o/u69umVuXw52qhrGI26cIl2NlI0gJKgFZTH0K9XCXg1
iVoLEMd4jfT76nXpMdpVyZKFJfvi4pM35ec7NKmCwRZtXhfXudPBQ0f+4z+f
/ssH779/66PnXrg2dvy4+QsWh5aKeW2GUMm56kjCTgs0rW/eWmBKitu8Z2cN
7oT2OwGprAGi2K5LlbSrlqFs8NkxEmW4K2z2gcNHzZi9kHBKLG2Axic8vmqV
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
3+PBh6Ck18BBPQcNuu/hB7r279uj/4A+Dw6+v9/gAQ+P7Najn6lDfIeYeGA6
iOkePXqMGZs2cvSokSOHjxk9kqHJF1+8NmrS2DnZi4mg264AUlHuJNCzVgU1
bENJYVxSahF0kxbtomL16Havge48kGj3McYbTsPt8rpB0Z+vqnz4kaHT0+da
NM7mk51QUxAB0DSpkIy6fdee6NrmqN3r9tWQ969ZTdtYW5hGWByJe/ziiy9O
nDgxvLb5X+Gy/6VblLz/kME35Le//e2PfvSj55577tixYyC4Lly48OMvyX7y
k5+899574PC+++6rra195ZVXPqUloVVeH8EP6N8337iZsSxr6Pixp5pqLjnt
KLsuyfFuL9/SUka5LmB2BxJrHMGroicI2jYmPmnjutyKSw0uwI2iO91KFeXI
3rTB1DGhYM8BStT5YLBR4MoxWx1JAFJJBqUbsClSGWGvolwokT0p8uhutr+G
Iy46zBaSBkBjLArabDGki66mBcuXdr+/V0x8wpyMhWcaK4rPHik6fPDE2cdO
n7qYl1vQqVuP0ZMnFRzce/Ds6aNQWHa5rK7+VNXlgiP7i08cPvFY2bFzFx6r
rLnUWH/g/KnCowcOnz574mzZuYs1l6vMW3LzYzsmhbEb2yEGviTPhOzatWvP
/viZ3/32f6++8PzoyePGz3/0rL2xhqagjwQFaj0AE4kKBkvfuKpDx6Ti3Qc4
2c36grUydx6zNeI0RskYY1ChGFaVFFGJu85UXn5w2OBHF80nA3qNSJS57A00
jbZoMZqqBktLj0TJG7V73b4yzdtW8IYXF0XKw2GiI4QNvz777LPhuM0RFv+j
0aT/xS1K3s9ukdxSN2/e1DRt3bp1JpNp69atjV+SWSyWpqamrKysrl27FhYW
NoWsrq7uYys3NDVWN9TUNNbabLZL5RVDxoy+b8ADM5dmrMzJWbc5d/PWXVt2
FmwqLFq6dcuSDRvWbdy6JWd7zvb8nF2FU+fMi01Inj5l1uYN23LyCrYUFK0r
2rV405ohaWNMHTpOnzkvZ3thTvGe7K05C1avWLFlS07OrpwtO3MLdm8sKJi/
diV425K7c9PGbbnbC7ahapsXrVsNZ9yyZWdOXtHWgj2rtucuWJPd+6EBKEqk
qeO4SZO37s7P3LByyZrVm7Zu27p555LF2d2693pw2NBFy7PX5uSu35S7ccu2
bflFILqXrV+9dO0a+BUajPzvLlqxeX3m6lXrN2/dlLN9Qy7q1KLM7PiElJiY
jvd1675mzRrD0Np9NwDBYydOmDp3VoXDbhNFUnKDGKc1wyXLlQ7r8s0bOyR2
hgkGxsqs4bHwXKXTAVKdVDx2XscVj1OS4cAGmrpstQ4cOWrmosWsz11Lk1CI
aRquuR2cJKjewqKSKHmjdq/bV3m3+VOs3c1k+PX69etpaWmApK9dbf2TLEre
f9RgwgZqFJqXmJjYpUuX5OTklC/JkpKSwFtCQgK879SpE/wKb1JTUz+pfmpn
qJeclJAI/5jiOpri40xJiabEZFNiSmxKZ3g1Jaein8SUuMROHRPQm9hOnWMS
koFcyQmdk5O6xCR3MiWnmLqkmhI6xiYlmWJiTXFJHZJSTampps6dTSkppqRk
ODY+vrMpPim2SxcT1ElJiYlLTkruEnaIaqakxCamxiV2iU3sjI6Fo1KSwFvH
RPhJiUtJ6ZCSbEpOjEWNTIxPSI2LTwHExyQmdkxKjU1Ex8andIFWwSGxqSnh
koTUrvCmQ3xSx+TkkKuUkGfUMCgE5IGjmY/OePnll1pbI9vSbz+If+mll0aP
TpubvhCUPu328f5mJy9aSMrJ8XaGXZu7zRSfumPPfivFOFgOSpyCwPmCtCfY
wPJmVnAyvI2kKcOow/GHR4yeNneBHS36YnFRFgItTrennuMxTojuKoraN8C+
YvJGVha1W8cV2T8SWV0TXnoUfs77NWbN++dZlLyf3SI3Q959990nn3xSkiRQ
vvCqfHkGDnVdl0MGv4Zf1U8w+KsqK15VZ0kqbcLEfgMHFhSX7tpdkr//YMnJ
UyVHjxeW7C/YvXdnUcmuvft3Hz5afPJEwcGDuwpLigpL9xTvL9izt+TkyZ1H
D28vLd2xp3jGnLkdEhIWrllZcur4ztK9Wwt3w1HbS/YWHjp04MyZ3YeOwK87
SvbC687SfQdOnQH/8CsgLFwIFfaeOLVr34EdpftAC0Mzig7sLz19ouDokdzi
4vx9B3bu2Qtui44fWZGX06VH77ETpxQW79tWtKfg8OF9584WHz4C7Szasz+/
eC+0BxpWfPToLjh78b78otIdJaX5hw4Vnz2dt2/vgszMuLi47Xnbnnry8d/f
eO3DWx/8NSfmrdYPPgTyvjwubeKihUvs6PG0AgwF0UooEpDXxQprNm8zJXaC
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
uW8u5QDXmDRpUkZGxscff3zLCULe01NF6PQZKXZ/m/++/vrrgPihQ4du3LjR
G6l9+qhJJXx989Rd795gMUeRbHpHABQCEFHzZNj6e6ul9QA0OTFh3759onIf
Qvr3v/8d/lWXLl3Gjh1Lestv09rcaDVb2wdBfPQTyczMjIiIGDduHCD+f2ya
CqkQccKDT6/7LacEeKd1f9vBEx/KS9d/v3rNul7xcZIAEGa/QYOHHjqec7q4
9ERF8bpDe7cdOXIoJ/dIzrkT+UW5lRU7T2WtP7h374kT2TnFJ7ILTxaVHirI
33DswLZjh0/m5Gcdz50+e56kQ9io+anrj+5FquzThficq6reUZSzcP+WHceO
ZeWcPXm6MKeo7HB5/pbTh7ccOXg45/SxnPOnCytOlpfuPJO1+uie7aeOZ506
D/05pWVHS86vPbZ788kDR3PPCoH5JaerqjbmHh+3ZG5Qt85jpkzLOluUW151
oDhv2b4dW48ePZZbcCKn6GReyamqis0nj2QePnjg9NmjJ/Kzz5Uh4a6z2WsO
7N6dnTV/+bLA0DB4iY8+8tuHfvPgbx9+BJ/Hfvvoww8+5Al5mKLowYOTRo4e
l5WTd7as6nDBmQ2H9uzJyjp2+uzJk+fmzF+E6po8N3X74f2C/SfzsnILz5SW
Hzp/duWhnZtOHDx48sTJM2dyS4sPnDwR2ysuZfiYnONns0+eO3E2/0xV5baz
J+dtXduld/d56XNJmyY2bmAcoCH/Ax5jm/y3SetJvPDhQXLhtL/66qvXr1/f
smUL2n94424P8h44cKC/l/Tr1y87O5skBF5379797NmzRCHxG+8W8ootf3l5
OThvU1MTyRQeQmBgoDfyWiyWDh06EOSFoCAwMiwsbNGiReKqnNYbaIit3y0H
Z8WuYJHwwgy4Gch627ZtrQeGvGHX/W2oErHYJy8Rv8i3hYWFwET4/O+8805r
e24p3t3abs+AOGg+OYbYxzAS7Ysvvli6dCmcKzxcwte+188nQHP78Wu318Pa
tGkTbLh8+bLP5KJftNxyV1Kf8NYjGkRau1g+/c//+Mc/XnvtteMnsoStPiV+
QYFhkVE9OsX0jOzVq0N0985RPbr1iO0c3bNzTK8uPXtF9ujZEW5o9x6du3SP
io5FSKfY2NBu3Tr16B4d1TO6W/eOnSIk/hJJRFin2Jiu3XpEd+0Z3b1XRHQP
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
VXqeVMEjKQlFNXV0BIdFhEVEdbEFYlxW1do6awG9z9fJ0b2o8NDhwydDwmc7
eXh4TfKv72iXqbQAviJK3kWSLbiEr1IqdT0SIKo4oLmKJac6ZFLAZdIYHBAw
lPZhxe8ImTd78rSgvPyiDha3pYO1MHqps7sbw8IyI2cPbpyMFoBCjJDqDbjK
wMMUQqlcKJW1iwSYSq3SnSbl3UDbuSTVRkr2HCkd5emzPm4zUG8uLmPLZO0k
yVdq5D0DYlK5O7tgYuA0Oyfnbdu2f//tD7m7c4KDpkuk4jfeecMYQpEW03t9
x7BoetHKysrGjx/P4XDefPPNwV+/niNP8ojc82Ka542NjQWcBZILViggL3pB
TEPHCHlRtBfzPQU1NTX29vbr1q2DN2iIi/67wbKioiIPD48tW7bIZLK7nC82
DSajaoN1QZIksNEJEyYgA+O3nCTfjVy8eLG2thaMh23btqFogMOV3w3yvvji
i2CcREZGrlixAgU9HCEIvyWoZdAAJt3m0OrX6MUJYGoil6FgdpYc3O/l4x0c
PHNXcnpSevrOjPRNKSkphQUpe4t2ZGTvTM3akZqRkL47KSszs7BoV3bu9vTd
iZnZiUmp2+J3jBk/Ycz4iXCekJy2ct0619GjGQymNdN+yeLYmOiV1jYODEtL
Bx+ftQkJ6Tk5Salpu9J2b09J27F7d0puXlZ+Qeru7OS0rO0p6fFpGTuzc3YX
0fqT0rITU3dvS03akZnsO8nP08d7W3xCSnLGlk2bPT1GWVgwLKwsoxYt3Zmc
npKauSs5Y1d6ZsbewqTs/MTduYnwNW033EVqZk7W3v07UrJB2840qPDupatX
OTu5zwwOS9i1OykjFwrdnpaRvrcwLX9vUlrmrPC5UHMLhmV4WERbS3v0wsWT
/CeWHTvM4nV1cdhdcDAK2KtwzuVy2X9c4EJ00tnZCY/u1KlThyzcGhwxIEfk
7yGm0eZFixa98sor5eXlYIiePXvWFMwUuqzvv/8e0seNG9ff32++GAnOKyoq
fH19AZHNtyCZTn788Ufgy5BtyN55SAGdcATlQwaTISdwZ0De4ODg5557znxG
6apZNAHTVaAB9MAloPCaMcoPlAjnKMV8XRa68Pz582BCWFtbw1tvHod3eJuY
36ZJ0Ig6yvD9DTF3M4uODQ0N0KVDKfHx8cj5wK2RF6g9KIecqNl/MAr6itKH
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
Ok2bPU9VDM9du2TJskYNrUJCFh5Iz1yybGnf/v24jvoPPWh//kUvk2zOyI0b
NyIjI1EpRa1Yp9MZ6mKdX4L4W1Oz8vKnivrvf/8LIdi4cSOUl3Ux4qqs/Emc
DA+eO/671EfFjl2QY/iPkHJbW1vWM7mG4/nR8bswGaqbwp3tvXz5MluHd/To
0UePHq25Gm/WG+pRXZ35dXVmEDX5pk2burq6Ll++3OwlddUk8dP87rvvQqzX
rl3L76LGZSDrLo5t1Fvat2/fs2dPyMqFCxdquIR/JPxue+DWrVvl5eWop6HS
gmyHzv7000+4ORMTE4cNG9alSxf/4cOMv8L93kEVNz779Oirx8aOH+M/1O/6
1Wt79sRYWDZq17X7lNlzsmWKLLkiW6nO1GiERXmSEn22ShG2eq2FVdPAJUsz
8pQZBaqc/Fw4m6xLc3ZhwYFCXaZem6lW7E9KWbNqrYOTI9zSNKV4V1p8YNjC
DnYdR4+foMjPExXps/JyM2UKYx9puSZHk5tVmp9ZkivUqNZu2NiocYuZ8wOz
9bkZBRpRXp4Qsi5TpgpE67aGw1r7Lh2hninJ6WvWbujp5uzQ1y1FlinOVQlE
cqkiPxvW8vOFJfmZ+Rp4r6wDFaoE2aVFWcUFYq1m87aINm3bT37h+ZzCgqx8
ndG+Si1RajZti7LpaDf2+eczdept8XsnTJlqZdU4JTP9+Buv2bs4dulpP2vO
7D9aVFgvtadwSyseTDr3/vvvQ3bxu0ydOtVs4jh61UvUTx7r83KP3ueffx4Q
ENCmTRsLCwt4efwDqp7CbVc7PRT3SOIT0sPW4W3dunVRUdGTpLmGPsmGKkN0
L1686OvrO3v2bDhBbGDOE1a2a7iuqpUKrVbLJACx1LxOLjfCl13+hx9+6O3t
zbUqVxsjdpWVlaHysHXr1q+++qp+rsPLuVHIE5lMhkqIWCzWaDR2dna7d+++
fv36c889hwoM7uGZM2dCeY03s2lUL/JPX1Rg17lj0+ZNoLyfXru+e3d0kxY2
EL7tcfsOiCU5aq1Ep88tL0/VSHekJaaJcpasXNPAukXY2helhwtjpOl7helw
KiWKfHlusar8cKJaultwIEUqWhC60MbG1qJhA0dvj4jEaP9p46xaNrdo1HD8
1KnaspIEiShWkJUpV4pUWoVWry0pS8mTR2UlJomFqzZuatqyTcDiJeLS/FhZ
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
Mf7Gp59+qtVqJ02axGaPfKxlDq4LFr8vltl1cbs++OCD/fv3e3p6Qjq5IYqP
7SHGP+bDDz/08vJatWqV2THsgLNnzwoEgv79+0+cOPHLL798kvT/U+E7X6xn
LCon69evb9Wq1fPPPw9n9vbt25cuXcL9OWTIEGdHJ3hwZ9579+r1a/B/cQ+E
Boc4Ozs3tWnh6uW5ZNWqHLk8R6kRaXKl+mKBToc/+LwQSvyJ8wsydNqswtx0
rVqiUEukKlluPgLT87QZulwooESiidixu333brZdOrn4eDdrZVyn3sKioYOb
29QFAXsy07K0xv7GApFSps4X5RdmFejT9boUpVwmy5XLEVdupl6brc9NV8lN
Om58S4uU9PcbatO2bf+BQ9euD4+JSXZw9rC1a99nSP8N2yIlSqPOirT6nMKC
jDx1dm5uhkyTIy8SKQqFeXmCgrz0XG2WRieS6aQKnVidm6PTZenzUrWqDKUK
si7Q5mbjsNKitdG7W3fqgqQ2a9ZizLix67dsShdmwwUeMmjwx+c/Yr3RjP3A
2R1oyvKnGc9769YtPNeoq3t4ePAXVeF+ULMNgvgHwDXjmN3YZv2QWUhgYCC8
tqtXr3LFPl9VITRwK+BcwP+qavBJeFRXqNWrV3t7e7N5m/nhf9Z+1S5P5eXl
8HbhTaPURRHNAp+mI2W101fGxMSw4bdQXm7p3ic0WMmbSQM1ELP0M3HPyMiw
MC33yk37U+v0/93hlJdlwp07d3DTNmrUiL2tcHBwQP1KLBazr5YNGjawsNi1
Yye0GMobHBx8t+Je0MLQ7g691m55KTEzI0MqEag0orz83MNH9kul29NSk6US
qWkyZHVZWWqeZlN60u6crGyZQiZXK/P1qoNlO0RZkaYeTRKpcsfO6A723fuO
818XHdHL09Xk+TYKWrVKUFoQlZ0ak52ZDb1TGDtuacrLExXSrWmJiVKxSJIn
lubDd84qzd+SGhcryMiWanOkebL8EtXBgz6jh/Xu45aYmoVjYvYe6O7o7u7n
E5GyN1EkylTqsuT5qrKj4vKynZL0XVnpB9TQ4mJZ3mH1y+WJamlEZvI+qVig
1EtUxcriw+KS4sisFKQ/Q6U1Ot2FpZrjR/epxPPXr2revgOUt1OnLocPH9bk
ahs2Mo5G9/X1PX+2pkHoNfwohofrivz7v7S0tHXr1vhF+vTp8/bbb9fJbUAQ
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
JlFRUZBdfhfTJ3n8zVxXs1OQyNWrV6OqgFKFKS8/DTU//hW8CSE54/wGdm4v
CvwxY8a0a9euU6dOR44cefJeoGaDoM3qJ9xXFIxMeVF26XS6el5qnTp1CsK6
d+/ekpISKOny5csNphw7fvy4v7//jh07UNfC/ZmUlOTq6srNxxIeHt6lSxeF
QsH1xKsd/O5A2Ibue3p6Hj58mE0IwxfH2sE/HfZfeumlnj17wsH/z3/+U2ub
fONmbcJ43FA5CQoKat++fYMGDYRC4dMsUW1mn9Vyf/zxR5QY7HVPSkqKgWSX
IJ4Y9p6XvVdF+RZrIjo6es+ePTGPAHtRPOKA3bt3Y3u3CYQjhIWz02GHDYCd
MmVKXFwcjuFscqfUEAWzwOwz46i9sxBs7Ny508vLi70nHT9+PL6ylONgdgx4
lHF2AD8l7Fy2CxHBGjsAxS+8UeRM69atQ0NDWUrYVSMNNaSfSwy7CnbhzCbL
H8aqVatQcPn4+ODIjz76iK/s9bAQO3/+PPLn1VdfRVYMHDgQXqfBVMiXl5d3
7NjROKGxKWeys7MtLS3lcvmlS5fgkI4YMaJXr15sacvaTd1g1gvr3Llz+/bt
Qx1gwIAB2K6ToTF8I5988gl0ys/PD/WHt956i9/MUmtxr7aCeu3atWHDhrm5
uUVERLz55pu17kZVtTWbfX7zzTfTp093cnJav37966+/XjvjBFE/wUME5xEl
GyQALiQ27Ozs4OLZ1QgOxid8DTYolX3lzurEA8dgLyreCO/WrRvsYxtnIbwG
++xEFgUziw2c3qFDB84ytrnEsJQjBNtsL7uQamGH4QA2+phLMBc1ImIWWLYg
aqSZXQhLT82JZylhI3ZZXOwsLmHsWriri4qKohluGSwfoLz9+vVjymswzdKA
XGLLfECYsrKy2LoYR48eRTa2aNHC19eX37O91jDVy83NRUUUNS7ICsTdUGV9
kFrAP7G0tBTGkeyRI0eyboePbWJ6crih+t99992ZM2eg74GBgdwc6bWLiC/r
XFZ8//33+JlQ6Z06deq3337LAuvtixKC+LPgaTp79uyRI0dQvrHRuNg4duzY
y48Gh+H4w4cP4xP+CDYQWP4AtouFwBQ+sY1AnMW2udMfZZ/ZYSnhTmeWmRGc
i08kku09bIJtI5A761GwMbwsecwglzAAUwhncWGbi5FFxF0gy6tqgXGWYBzD
EsPOYvHigIMHDzIjLF42yQbf1a2fPayYLiAHcEMOHTp02bJlLIQp765du9hh
UF5ra2upVIrMRK0mODgYbjKE5imzruIBOp2uadOma9asgZ8IfWF760rWQVlZ
GSpyixcvZvO1mh1Qu4jMJA/5hpoJZLdNmzZQ3t9///3pq3P8dTDZOryoObRr
127mzJk//PBDfa4uEkQt4DcfVV3M7lGnmB1Ttbio2kLFjD+h+1D1DemjqtNV
hzw8CVXXR6t61dWGV+07WkOSqs0fswuv2sWrfsouxwcffBAXF9ezZ89Ro0ZB
BK9fv46QJUuWREdHs3HcMTExc+bMiY+PDw8Ph7KwjlXs3Fo7XOxE+IavvPLK
6tWr4fNmZmYaqrTi1volKduAIEJtN27caGNjs3fv3hqOfHp27tyJ+sPo0aPZ
G1jDEzzXj4X/ICcmJqL+4+vriw2uflKHzjtBEATxP2Pr1q0o0tlobggrxBfl
Oby2zZs3N27cuFmzZmFhYXCygoKC2GHcYtOMWigLd8pnn302bdo0xAKzTHnr
CqZZP//8M+oMSDYuLTY2tg7t82fLZBtQXtYtkD+U7ylby/n1kP3797ds2RK/
zq+//vqYwc4EQRDE/2NQpL/xxhvZ2dlZJoRC4SeffMLC33rrrfT09LS0tNde
ew1f58+f7+LismfPHjZV2lN6W6wp9fPPP4ej7ePjg1jOnj1bR9f0B7/88suM
GTM8PT3hsPNXta4TuEYh5Ni2bdv69+9vb28PFx7XdefOnaqNSLWwz7T12rVr
kHV4u7a2tiUlJYaHNZfcXoIgiL8RXHMo98aTPwyHbSDk9u3bEN/x48ePHDny
1q1b/PcXTzNk5saNG4cOHYKgzJo1C35cHTb8MlOwf+zYsXHjxk2ePLlORhJV
jYJx6tQpaG7Xrl2nT5+O6gr/mFrLLl9bz5w54+HhYWdnh1rKiRMnOOP8F8EE
QRDE3wKz5kqzYrziwapDWq0W3i4cLpT8X3zxRZ28igUZGRk9e/Zs1qwZmyO0
zvvoymQyBwcH2J80adI333xTh5a516+sYzOUt3fv3itWrLh06RK8bLMuDbUb
dWV4MLeMwaS8Xl5eQUFBsP/jjz+ymlK1w5oIgiCIvxFmE3/xy/Ps7Gw2x7VI
JPrqq6+qOsi1AKfHxsY2b94cDq9KparFRFI1A01Eshs3bgw/FMn++eefn9Ho
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
fA==
      "], {{0, 479}, {638, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{638, 479},
    PlotRange->{{0, 638}, {0, 479}}],
   FontSize->9]], "Output",
  CellChangeTimes->{
   3.770742688301442*^9, {3.7707427783248863`*^9, 3.7707428149718976`*^9}, {
    3.770742860861249*^9, 3.7707428719227004`*^9}, 3.770743089231064*^9, {
    3.7707431279565268`*^9, 3.770743137995659*^9}, {3.770743217249855*^9, 
    3.770743251944133*^9}, {3.7707433195763273`*^9, 3.7707433384618506`*^9}},
  ExpressionUUID->"1f049d1b-2b11-486c-bd8e-a2fe5638cabf"],
 "\nTherefore, a 3D K-map will be used,  a 3D K-map which the operator can \
rotate the K-map planes around and visualize will be helpful for \
understanding especially for students who first time finding the Min/Max \
terms more than 4 variables K-map by hand. \nFor the application aspect, most \
of the time, FPGA board programmers only knows when the output should be on \
when a specific set of input is received, so finding the logic expression is \
the main point. "
}], "Text",
 CellChangeTimes->{{3.770741175691272*^9, 3.7707411851340666`*^9}, {
   3.7707413218865533`*^9, 3.7707415367053485`*^9}, {3.770741590499566*^9, 
   3.7707415947203207`*^9}, {3.770741746684642*^9, 3.770741937767911*^9}, {
   3.770744009852315*^9, 3.770744016528471*^9}, {3.7707440562842703`*^9, 
   3.770744078546708*^9}, {3.771091396589294*^9, 3.771091456404219*^9}, 
   3.771104170693172*^9, 3.771104291395008*^9, 3.7711043877465982`*^9},
 FontSize->18,ExpressionUUID->"f3c16f4a-7aad-4fcb-bd03-f0f810b041c3"],

Cell["\<\
Combining the ability of simulating circuit as well as truth table , one can \
do some basic digital design with these tools and functions.\
\>", "Text",
 CellChangeTimes->{{3.770744092493431*^9, 3.77074415574341*^9}, 
   3.770750059573143*^9, {3.7707505295468187`*^9, 3.7707505306219454`*^9}},
 FontSize->18,ExpressionUUID->"19c3c1dc-44ad-44c9-8600-a45cac025496"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
Magnification:>0.9 Inherited,
FrontEndVersion->"12.0 \:95dc\:65bc  Microsoft Windows (64-bit) (2019\:5e744\
\:67088\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Title"->{
  Cell[580, 22, 743, 11, 118, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd",
   CellTags->"Title"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Title", 772886, 15090}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 743, 11, 118, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd",
 CellTags->"Title"],
Cell[1326, 35, 517, 8, 53, "Text",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[1846, 45, 984, 15, 79, "Text",ExpressionUUID->"1c727bf9-d411-4d95-ba0f-6d7bb12b52e6"],
Cell[2833, 62, 620, 9, 67, "Text",ExpressionUUID->"efe9b06f-68d8-4084-bf8d-3f27a6c14623"],
Cell[3456, 73, 533, 8, 33, "Text",ExpressionUUID->"3072dc2c-f3f1-448c-b3a7-9758c980b220"],
Cell[3992, 83, 310, 4, 33, "Text",ExpressionUUID->"4cd5e397-47c9-46bb-888c-0ee5b5ae4840"],
Cell[4305, 89, 1262, 23, 46, "Input",ExpressionUUID->"645548c4-bb07-46f4-b7cd-e5171a83221d"],
Cell[5570, 114, 7156, 123, 372, "Input",ExpressionUUID->"971edc48-7189-44b1-a3ac-2a83843a224e"],
Cell[12729, 239, 308, 5, 33, "Text",ExpressionUUID->"5d301663-7a24-4cce-999c-c3c37bbdc895"],
Cell[CellGroupData[{
Cell[13062, 248, 1132, 28, 76, "Input",ExpressionUUID->"b93e7b6f-b232-4f01-8949-de24c398a8d7"],
Cell[14197, 278, 547, 13, 106, "Output",ExpressionUUID->"4215ee3f-9119-4ba6-9a85-d1f7e8c88515"]
}, Open  ]],
Cell[14759, 294, 337, 7, 33, "Text",ExpressionUUID->"5005b855-b8b3-4bb7-b1f8-9bd75f6ad693"],
Cell[15099, 303, 250, 5, 33, "Text",ExpressionUUID->"028f1b3f-49f6-4299-8219-4717b795e4aa"],
Cell[15352, 310, 78453, 1620, 402, "Input",ExpressionUUID->"3b2c8647-9865-46aa-bf95-86eb75a12738"],
Cell[93808, 1932, 2096, 43, 47, InheritFromParent,ExpressionUUID->"d877a0e7-7e8a-4aea-86bc-6cdb81db827e"],
Cell[95907, 1977, 612, 9, 33, "Text",ExpressionUUID->"7dc6f89c-9b70-4620-b905-99e61ae195b9"],
Cell[CellGroupData[{
Cell[96544, 1990, 3330, 61, 49, "Input",ExpressionUUID->"dda15b23-f3df-4720-bb2f-4f954602b7e4"],
Cell[99877, 2053, 47002, 900, 656, "Output",ExpressionUUID->"0e7ca2b6-2e47-483e-b384-93751517ce5a"]
}, Open  ]],
Cell[146894, 2956, 163, 2, 31, "Input",ExpressionUUID->"3ab03cca-554d-414b-b75f-adc45527d25c"],
Cell[147060, 2960, 386, 6, 41, "Text",ExpressionUUID->"ff699e9e-ba98-4d91-bec1-a5ce70272f1c"],
Cell[147449, 2968, 432, 8, 33, "Text",ExpressionUUID->"192c1272-5592-4fef-a405-fe6615c6e6d8"],
Cell[CellGroupData[{
Cell[147906, 2980, 687, 16, 48, "Input",ExpressionUUID->"d61a146d-e7b3-4fcb-8a4f-4da363f123a3"],
Cell[148596, 2998, 13878, 233, 220, "Output",ExpressionUUID->"ea9420cf-9d2d-4695-93b0-70f02677336d"]
}, Open  ]],
Cell[162489, 3234, 399, 7, 33, "Text",ExpressionUUID->"c771daf5-2fd8-40a9-a1ca-31261d0bebd4"],
Cell[CellGroupData[{
Cell[162913, 3245, 829, 22, 48, "Input",ExpressionUUID->"7d79e44d-e944-4291-bcef-d3d99bed7cac"],
Cell[163745, 3269, 474, 12, 106, "Output",ExpressionUUID->"709d88a0-e975-4f23-993f-36db8249a51f"]
}, Open  ]],
Cell[164234, 3284, 250, 5, 33, "Text",ExpressionUUID->"15edef43-1bf9-4757-b022-b40446be74de"],
Cell[164487, 3291, 79935, 1659, 340, "Input",ExpressionUUID->"29131169-476a-4a47-be30-6a658de97dab"],
Cell[244425, 4952, 449, 7, 33, "Text",ExpressionUUID->"49d7ce70-9f15-4bd1-a512-54fc557034d6"],
Cell[CellGroupData[{
Cell[244899, 4963, 2068, 47, 47, "Input",ExpressionUUID->"d88b20e7-6ade-4677-acf1-449257396ff6"],
Cell[246970, 5012, 46721, 896, 576, "Output",ExpressionUUID->"e8f413ec-bc84-4dc3-8db4-b9c8503d5c84"]
}, Open  ]],
Cell[293706, 5911, 528, 13, 67, "Text",ExpressionUUID->"f910c63f-5e40-4ed6-a72d-fb77d90f9ba7"],
Cell[294237, 5926, 463, 8, 56, "Text",ExpressionUUID->"d4605972-dd68-427f-a678-3d89fc26d9f0"],
Cell[294703, 5936, 313, 5, 33, "Text",ExpressionUUID->"bb9fe373-9061-40be-96d4-2f0dcd4ae747"],
Cell[CellGroupData[{
Cell[295041, 5945, 820, 21, 42, "Input",ExpressionUUID->"905ba48f-0b9e-4bc3-a936-35ca7ed82538"],
Cell[295864, 5968, 472, 12, 106, "Output",ExpressionUUID->"2a183999-bbb0-486b-a59d-3d39960a2c87"]
}, Open  ]],
Cell[296351, 5983, 241, 4, 31, "Text",ExpressionUUID->"6b8bafd6-ea93-4c02-9cc8-457b7cee9e81"],
Cell[296595, 5989, 176065, 3736, 293, "Input",ExpressionUUID->"27370600-b091-47d6-ac76-45e143c2beb7"],
Cell[472663, 9727, 339, 6, 33, "Text",ExpressionUUID->"93553f68-6e8c-4891-b925-2f745a71e936"],
Cell[473005, 9735, 1861, 41, 47, "Input",ExpressionUUID->"c7c7588a-f34a-477a-9e7e-9c2f83cc0b9a"],
Cell[CellGroupData[{
Cell[474891, 9780, 1759, 39, 46, "Input",ExpressionUUID->"375689ee-83fd-4576-8f71-31095a94f58c"],
Cell[476653, 9821, 73083, 1396, 755, "Output",ExpressionUUID->"5c9ab001-a3b0-4a23-80ac-ae150e7edf74"]
}, Open  ]],
Cell[549751, 11220, 620, 10, 33, "Text",ExpressionUUID->"83d55f5d-5d3a-43d6-8acc-202be481b371"],
Cell[550374, 11232, 381, 11, 42, "Input",ExpressionUUID->"8d1414b3-0aab-4c7c-8293-7efc1d37b25d"],
Cell[550758, 11245, 305, 6, 33, "Text",ExpressionUUID->"3237cea7-ff44-4cac-bcca-dc6c892c6b18"],
Cell[551066, 11253, 719, 11, 33, "Text",ExpressionUUID->"7c372c7c-c369-4827-a3f2-1b06fea5d64b"],
Cell[CellGroupData[{
Cell[551810, 11268, 1852, 43, 48, "Input",ExpressionUUID->"88f8cb5f-2e25-40c5-acbe-a00beec464ab"],
Cell[553665, 11313, 655, 14, 229, "Output",ExpressionUUID->"e5ee174a-43e6-4f28-970d-65421c6e81cc"]
}, Open  ]],
Cell[554335, 11330, 243, 5, 33, "Text",ExpressionUUID->"760ef6ba-5a26-444b-a2eb-5f1c4c33c88d"],
Cell[CellGroupData[{
Cell[554603, 11339, 451, 11, 42, "Input",ExpressionUUID->"86dec583-0fdb-4050-a21d-9ff3fd10524c"],
Cell[555057, 11352, 190, 4, 30, "Output",ExpressionUUID->"748a49f4-1c79-4c29-9459-1f6d5c600e85"]
}, Open  ]],
Cell[555262, 11359, 253, 5, 33, "Text",ExpressionUUID->"8b51c6b9-0a07-4154-aa63-9f7f8d0a93b0"],
Cell[CellGroupData[{
Cell[555540, 11368, 444, 11, 50, "Input",ExpressionUUID->"058b6341-58cf-410d-87b7-5f903e2f5e53"],
Cell[555987, 11381, 257, 4, 30, "Output",ExpressionUUID->"190e8777-c4d8-440c-9d53-9507c7271a6b"]
}, Open  ]],
Cell[556259, 11388, 1047, 17, 54, "Text",ExpressionUUID->"79b69dde-2810-4f32-90ee-6f3dd8afa7f1"],
Cell[557309, 11407, 385, 7, 33, "Text",ExpressionUUID->"0d040f8a-e63a-47be-b0d6-2ba3e5754cf2"],
Cell[CellGroupData[{
Cell[557719, 11418, 331, 5, 82, "Section",ExpressionUUID->"76f414ae-7552-41fd-bfc1-df6e7c69976f"],
Cell[558053, 11425, 1448, 22, 124, "Text",ExpressionUUID->"cfaf926f-c8f7-404a-a859-060dd3d954c5"],
Cell[CellGroupData[{
Cell[559526, 11451, 356, 7, 72, "Subsubsection",ExpressionUUID->"f1af6995-eeae-4524-b643-88b60d0d60f6"],
Cell[559885, 11460, 154, 3, 26, "Input",ExpressionUUID->"ac11833e-b149-4fa6-90d5-ca8f3294ced4"],
Cell[560042, 11465, 273, 5, 33, "Text",ExpressionUUID->"555abbf0-b6ad-441f-9133-fe26a7e8ed18"],
Cell[CellGroupData[{
Cell[560340, 11474, 835, 22, 48, "Input",ExpressionUUID->"4519b41e-c20a-4284-bfe7-e1747e1429e1"],
Cell[561178, 11498, 496, 12, 145, "Output",ExpressionUUID->"34507ea1-663c-44fa-9d83-e14e6325d3a3"]
}, Open  ]],
Cell[561689, 11513, 229, 4, 33, "Text",ExpressionUUID->"5dc21b8b-0254-4e3e-bf05-1ddcf8c7b608"],
Cell[CellGroupData[{
Cell[561943, 11521, 887, 24, 48, "Input",ExpressionUUID->"88491cc6-b1a1-499f-b957-61260a68f39f"],
Cell[562833, 11547, 474, 12, 145, "Output",ExpressionUUID->"e2868607-576a-4571-a74d-0580ae64ed25"]
}, Open  ]],
Cell[563322, 11562, 321, 5, 79, "Text",ExpressionUUID->"ea9aef9a-ee72-4c82-aa9d-e7696d17261c"],
Cell[563646, 11569, 470, 15, 48, "Input",ExpressionUUID->"0f1304e8-46a1-4deb-93ae-9735f58b1d37"],
Cell[564119, 11586, 179, 4, 54, "Input",ExpressionUUID->"16c45c41-0b50-4100-8b1b-928acca095b9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[564347, 11596, 241, 4, 82, "Section",ExpressionUUID->"ba21500b-9331-4a47-9468-32afc9c85eea"],
Cell[564591, 11602, 1111, 19, 79, "Text",ExpressionUUID->"76dd3fbc-08a8-4a91-bba0-ce2dfb5181f3"],
Cell[CellGroupData[{
Cell[565727, 11625, 4772, 100, 116, "Input",ExpressionUUID->"a738c5bf-c279-48ae-be6e-b489fef29b5c"],
Cell[570502, 11727, 4242, 82, 270, "Output",ExpressionUUID->"050932a5-7a19-4fd6-b99c-effe1691ab75"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[574793, 11815, 407, 6, 82, "Section",ExpressionUUID->"8ecb1198-624f-42d3-93c7-8be9ed161fdd"],
Cell[575203, 11823, 196465, 3231, 531, "Text",ExpressionUUID->"f3c16f4a-7aad-4fcb-bd03-f0f810b041c3"],
Cell[771671, 15056, 374, 6, 33, "Text",ExpressionUUID->"19c3c1dc-44ad-44c9-8600-a45cac025496"]
}, Open  ]]
}, Open  ]]
}
]
*)

